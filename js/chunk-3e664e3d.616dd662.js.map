{"version":3,"sources":["webpack:///./node_modules/echarts/lib/chart/parallel/ParallelSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseView.js","webpack:///./node_modules/echarts/lib/component/tooltip.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelSeries.js","webpack:///./node_modules/echarts/lib/coord/geo/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/geo/Geo.js","webpack:///./node_modules/echarts/lib/component/gridSimple.js","webpack:///./node_modules/echarts/lib/component/helper/roamHelper.js","webpack:///./node_modules/zrender/lib/core/timsort.js","webpack:///./node_modules/zrender/lib/contain/polygon.js","webpack:///./node_modules/zrender/lib/animation/Animator.js","webpack:///./node_modules/echarts/lib/data/Tree.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseModel.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./node_modules/echarts/lib/chart/gauge.js","webpack:///./node_modules/echarts/lib/chart/parallel.js","webpack:///./node_modules/echarts/lib/chart/candlestick.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineAxis.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickLayout.js","webpack:///./node_modules/echarts-wordcloud/src/wordCloud.js","webpack:///./node_modules/echarts/lib/component/dataZoom.js","webpack:///./node_modules/echarts/lib/chart/tree/radialLayout.js","webpack:///./node_modules/zrender/lib/core/GestureMgr.js","webpack:///./node_modules/echarts/lib/component/legendScroll.js","webpack:///./node_modules/zrender/lib/core/arrayDiff2.js","webpack:///./node_modules/echarts/lib/component/helper/MapDraw.js","webpack:///./node_modules/zrender/lib/mixin/Transformable.js","webpack:///./node_modules/zrender/lib/graphic/Image.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyVisual.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendView.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelAxis.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectLine.js","webpack:///./node_modules/echarts/lib/component/brush/visualEncoding.js","webpack:///./node_modules/echarts-amap/index.js","webpack:///./node_modules/echarts/lib/chart/effectScatter.js","webpack:///./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./node_modules/echarts/lib/chart/helper/Symbol.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarView.js","webpack:///./node_modules/echarts/lib/component/axis/RadiusAxisView.js","webpack:///./node_modules/echarts/lib/helper.js","webpack:///./node_modules/echarts/lib/chart/scatter.js","webpack:///./node_modules/zrender/lib/core/matrix.js","webpack:///./node_modules/echarts/lib/coord/radar/RadarModel.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/textCoord.js","webpack:///./node_modules/echarts/lib/chart/bar/BarSeries.js","webpack:///./node_modules/echarts/lib/component/axisPointer/globalListener.js","webpack:///./node_modules/echarts/lib/scale/Ordinal.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineModel.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickView.js","webpack:///./node_modules/zrender/lib/graphic/Displayable.js","webpack:///./node_modules/echarts/lib/component/axis/cartesianAxisHelper.js","webpack:///./node_modules/echarts/lib/chart/pie/PieView.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js","webpack:///./node_modules/echarts/lib/coord/polar/polarCreator.js","webpack:///./node_modules/echarts/lib/layout/barPolar.js","webpack:///./node_modules/echarts/lib/chart/gauge/PointerPath.js","webpack:///./node_modules/echarts/lib/coord/geo/GeoModel.js","webpack:///./node_modules/zrender/lib/mixin/Eventful.js","webpack:///./node_modules/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./node_modules/echarts/lib/CoordinateSystem.js","webpack:///./node_modules/zrender/lib/core/PathProxy.js","webpack:///./node_modules/echarts/extension/bmap/BMapView.js","webpack:///./node_modules/echarts/lib/component/toolbox/featureManager.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeSeries.js","webpack:///./node_modules/echarts/lib/scale/Time.js","webpack:///./node_modules/echarts/lib/chart/line/LineSeries.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelModel.js","webpack:///./node_modules/zrender/lib/core/env.js","webpack:///./node_modules/echarts/lib/chart/tree/layoutHelper.js","webpack:///./node_modules/echarts/lib/util/graphic.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomView.js","webpack:///./node_modules/echarts/lib/chart/helper/createGraphFromNodeEdge.js","webpack:///./node_modules/echarts/lib/coord/radar/Radar.js","webpack:///./node_modules/echarts/lib/chart/graph.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerModel.js","webpack:///./node_modules/echarts/lib/chart/funnel/funnelLayout.js","webpack:///./node_modules/echarts-amap/dist/echarts-amap.min.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverView.js","webpack:///./node_modules/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./node_modules/v-charts/lib/index.js","webpack:///./node_modules/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./node_modules/echarts/lib/chart/pie/pieLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryVisual.js","webpack:///./node_modules/echarts/lib/lang.js","webpack:///./node_modules/echarts/lib/component/visualMapPiecewise.js","webpack:///./node_modules/zrender/lib/graphic/Style.js","webpack:///./node_modules/echarts/lib/visual/visualSolution.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","webpack:///./node_modules/zrender/lib/config.js","webpack:///./node_modules/echarts/lib/component/singleAxis.js","webpack:///./node_modules/echarts/lib/component/brush.js","webpack:///./node_modules/echarts/lib/component/polar.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotVisual.js","webpack:///./node_modules/echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousModel.js","webpack:///./node_modules/echarts/lib/coord/single/prepareCustom.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineView.js","webpack:///./node_modules/zrender/lib/animation/Animation.js","webpack:///./node_modules/echarts/lib/chart/sankey.js","webpack:///./node_modules/echarts/index.js","webpack:///./node_modules/echarts/lib/data/helper/linkList.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/nanhai.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomView.js","webpack:///./node_modules/echarts-liquidfill/src/liquidFillSeries.js","webpack:///./node_modules/echarts/lib/chart/helper/createListFromArray.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarView.js","webpack:///./node_modules/zrender/lib/tool/path.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineView.js","webpack:///./node_modules/echarts-wordcloud/src/WordCloudSeries.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomModel.js","webpack:///./node_modules/echarts/lib/util/number.js","webpack:///./node_modules/echarts/lib/model/mixin/lineStyle.js","webpack:///./node_modules/echarts/lib/component/timeline/timelineAction.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapSeries.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousView.js","webpack:///./node_modules/echarts/lib/echarts.js","webpack:///./node_modules/zrender/lib/svg/graphic.js","webpack:///./node_modules/zrender/lib/core/vector.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","webpack:///./node_modules/zrender/lib/tool/color.js","webpack:///./node_modules/echarts/lib/chart/helper/WhiskerBoxDraw.js","webpack:///./node_modules/zrender/lib/graphic/Gradient.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipView.js","webpack:///./node_modules/echarts/lib/model/Model.js","webpack:///./node_modules/echarts/lib/coord/single/singleCreator.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaModel.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapAction.js","webpack:///./node_modules/zrender/lib/animation/Clip.js","webpack:///./node_modules/echarts/lib/chart/helper/Polyline.js","webpack:///./node_modules/zrender/lib/graphic/shape/Ring.js","webpack:///./node_modules/echarts/lib/component/legend/legendAction.js","webpack:///./node_modules/echarts/lib/coord/calendar/prepareCustom.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterView.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapView.js","webpack:///./node_modules/echarts/lib/chart/graph/adjustEdge.js","webpack:///./node_modules/zrender/lib/graphic/LinearGradient.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./node_modules/zrender/lib/core/log.js","webpack:///./node_modules/echarts/lib/action/geoRoam.js","webpack:///./node_modules/echarts/lib/component/helper/RoamController.js","webpack:///./node_modules/zrender/lib/core/curve.js","webpack:///./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./node_modules/zrender/lib/graphic/shape/Sector.js","webpack:///./node_modules/zrender/lib/svg/helper/Definable.js","webpack:///./node_modules/echarts/extension/bmap/BMapCoordSys.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","webpack:///./node_modules/echarts/lib/coord/single/Single.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickVisual.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelView.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeSeries.js","webpack:///./node_modules/echarts/lib/config.js","webpack:///./node_modules/echarts/lib/chart/map/MapSeries.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","webpack:///./node_modules/echarts/lib/model/Series.js","webpack:///./node_modules/zrender/lib/graphic/helper/poly.js","webpack:///./node_modules/echarts/lib/component/dataZoom/helper.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverLayout.js","webpack:///./node_modules/echarts/lib/component/visualMap.js","webpack:///./node_modules/echarts/lib/chart/map/mapVisual.js","webpack:///./node_modules/echarts/lib/model/mixin/itemStyle.js","webpack:///./node_modules/echarts/lib/component/radar.js","webpack:///./node_modules/echarts/lib/component/dataZoom/roams.js","webpack:///./node_modules/zrender/lib/graphic/helper/roundRect.js","webpack:///./node_modules/echarts/lib/chart/graph/forceLayout.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Grid.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeyView.js","webpack:///./node_modules/echarts/lib/chart/heatmap.js","webpack:///./node_modules/echarts/extension/bmap/BMapModel.js","webpack:///./node_modules/zrender/lib/Layer.js","webpack:///./node_modules/zrender/lib/graphic/helper/image.js","webpack:///./node_modules/echarts/lib/component/legend/LegendView.js","webpack:///./node_modules/echarts/lib/visual/VisualMapping.js","webpack:///./node_modules/zrender/lib/core/event.js","webpack:///./node_modules/echarts/lib/chart/parallel/ParallelView.js","webpack:///./node_modules/echarts/lib/visual/visualDefault.js","webpack:///./node_modules/echarts/lib/data/List.js","webpack:///./node_modules/zrender/lib/graphic/helper/smoothSpline.js","webpack:///./node_modules/echarts/lib/util/clazz.js","webpack:///./node_modules/echarts/lib/component/title.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js","webpack:///./node_modules/echarts/lib/chart/lines/linesLayout.js","webpack:///./node_modules/echarts/lib/component/axis/AxisView.js","webpack:///./node_modules/echarts/lib/component/timeline/preprocessor.js","webpack:///./node_modules/echarts/lib/coord/single/SingleAxis.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryFilter.js","webpack:///./node_modules/echarts/lib/chart/map.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterSeries.js","webpack:///./node_modules/echarts/lib/chart/bar/BarView.js","webpack:///./node_modules/zrender/lib/contain/quadratic.js","webpack:///./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","webpack:///./node_modules/echarts/lib/coord/axisHelper.js","webpack:///./node_modules/zrender/lib/zrender.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectPolyline.js","webpack:///./node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/geoCoord.js","webpack:///./node_modules/echarts/lib/component/radar/RadarView.js","webpack:///./node_modules/echarts/lib/chart/themeRiver.js","webpack:///./node_modules/echarts/lib/model/Component.js","webpack:///./node_modules/echarts/lib/coord/View.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeView.js","webpack:///./node_modules/zrender/lib/core/util.js","webpack:///./node_modules/echarts/lib/chart/tree/traversalHelper.js","webpack:///./node_modules/echarts/lib/component/dataZoom/history.js","webpack:///./node_modules/echarts/lib/component/helper/selectableMixin.js","webpack:///./node_modules/echarts/lib/coord/axisDefault.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverVisual.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapView.js","webpack:///./node_modules/echarts/lib/data/Graph.js","webpack:///./node_modules/echarts/lib/chart/helper/LineDraw.js","webpack:///./node_modules/echarts/lib/component/visualMapContinuous.js","webpack:///./node_modules/zrender/lib/animation/easing.js","webpack:///./node_modules/echarts/lib/component/geo/GeoView.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataView.js","webpack:///./node_modules/zrender/lib/graphic/Text.js","webpack:///./node_modules/echarts/lib/action/createDataSelectAction.js","webpack:///./node_modules/echarts/lib/coord/radar/IndicatorAxis.js","webpack:///./node_modules/echarts/lib/chart/radar/backwardCompat.js","webpack:///./node_modules/echarts/lib/coord/polar/PolarModel.js","webpack:///./node_modules/echarts/lib/component/helper/listComponent.js","webpack:///./node_modules/echarts/lib/component/radiusAxis.js","webpack:///./node_modules/echarts-wordcloud/src/layout.js","webpack:///./node_modules/echarts/lib/chart/graph/createView.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomView.js","webpack:///./node_modules/echarts/lib/component/markArea.js","webpack:///./node_modules/echarts/lib/chart/helper/Line.js","webpack:///./node_modules/echarts/lib/model/Global.js","webpack:///./node_modules/echarts/lib/component/graphic.js","webpack:///./node_modules/echarts/lib/chart/helper/LinePath.js","webpack:///./node_modules/echarts/lib/visual/symbol.js","webpack:///./node_modules/echarts/lib/data/DataDiffer.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyLayout.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointView.js","webpack:///./node_modules/echarts/lib/coord/calendar/CalendarModel.js","webpack:///./node_modules/echarts/lib/ExtensionAPI.js","webpack:///./node_modules/echarts/lib/component/axis/parallelAxisAction.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelCreator.js","webpack:///./node_modules/echarts/lib/coord/Axis.js","webpack:///./node_modules/echarts/lib/component/legend/LegendModel.js","webpack:///./node_modules/zrender/lib/contain/util.js","webpack:///./node_modules/echarts/lib/data/helper/completeDimensions.js","webpack:///./node_modules/echarts/lib/chart/radar/radarLayout.js","webpack:///./node_modules/zrender/lib/svg/core.js","webpack:///./node_modules/zrender/lib/contain/windingLine.js","webpack:///./node_modules/echarts/lib/chart/treemap/helper.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphSeries.js","webpack:///./node_modules/echarts-wordcloud/index.js","webpack:///./node_modules/zrender/lib/graphic/shape/Polygon.js","webpack:///./node_modules/echarts/lib/layout/points.js","webpack:///./node_modules/echarts/lib/util/throttle.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerView.js","webpack:///./node_modules/echarts/lib/util/component.js","webpack:///./node_modules/echarts/lib/model/globalDefault.js","webpack:///./node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js","webpack:///./node_modules/echarts/lib/scale/Interval.js","webpack:///./src/views/Form/Charts.vue?869f","webpack:///src/views/Form/Charts.vue","webpack:///./src/views/Form/Charts.vue?7814","webpack:///./src/views/Form/Charts.vue","webpack:///./node_modules/echarts/lib/scale/Log.js","webpack:///./node_modules/zrender/lib/graphic/shape/Arc.js","webpack:///./node_modules/echarts/lib/chart/radar.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaView.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/GridModel.js","webpack:///./node_modules/zrender/lib/svg/svg.js","webpack:///./node_modules/echarts/lib/component/legend/legendFilter.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapVisual.js","webpack:///./node_modules/echarts/lib/component/marker/markerHelper.js","webpack:///./node_modules/echarts/lib/coord/polar/RadiusAxis.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapSeries.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineView.js","webpack:///./node_modules/echarts/lib/component/calendar.js","webpack:///./node_modules/echarts/lib/chart/map/backwardCompat.js","webpack:///./node_modules/echarts/lib/scale/helper.js","webpack:///./node_modules/echarts/lib/chart/bar.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayoutHelper.js","webpack:///./node_modules/echarts/lib/component/markLine.js","webpack:///./node_modules/zrender/lib/contain/line.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphView.js","webpack:///./node_modules/zrender/lib/core/BoundingRect.js","webpack:///./node_modules/zrender/lib/animation/requestAnimationFrame.js","webpack:///./node_modules/echarts/lib/visual/dataColor.js","webpack:///./node_modules/echarts/lib/loading/default.js","webpack:///./node_modules/echarts/lib/model/mixin/areaStyle.js","webpack:///./node_modules/zrender/lib/graphic/helper/smoothBezier.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapLayout.js","webpack:///./node_modules/echarts/lib/layout/barGrid.js","webpack:///./node_modules/zrender/lib/graphic/mixin/RectText.js","webpack:///./node_modules/echarts/lib/coord/axisModelCreator.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","webpack:///./node_modules/zrender/lib/contain/arc.js","webpack:///./node_modules/zrender/lib/svg/helper/ClippathManager.js","webpack:///./node_modules/echarts/extension/bmap/bmap.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarSeries.js","webpack:///./node_modules/echarts/lib/component/timeline/typeDefaulter.js","webpack:///./node_modules/echarts/lib/chart/tree/orthogonalLayout.js","webpack:///./node_modules/echarts/lib/util/symbol.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomModel.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeLineDraw.js","webpack:///./node_modules/echarts/lib/chart/funnel.js","webpack:///./node_modules/echarts/lib/component/helper/interactionMutex.js","webpack:///./node_modules/echarts/lib/chart/map/MapView.js","webpack:///./node_modules/zrender/lib/graphic/helper/text.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeView.js","webpack:///./node_modules/echarts/lib/chart/lines.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/diaoyuIsland.js","webpack:///./node_modules/zrender/lib/vml/graphic.js","webpack:///./node_modules/echarts/lib/component/brush/selector.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointModel.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./node_modules/echarts-liquidfill/src/liquidFill.js","webpack:///./node_modules/echarts/lib/coord/polar/AngleAxis.js","webpack:///./node_modules/echarts/lib/coord/cartesian/prepareCustom.js","webpack:///./node_modules/echarts/lib/chart/pictorialBar.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualEncoding.js","webpack:///./node_modules/echarts/lib/chart/parallel/parallelVisual.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterView.js","webpack:///./node_modules/zrender/lib/graphic/shape/BezierCurve.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayout.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverSeries.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesView.js","webpack:///./node_modules/echarts/lib/component/brush/preprocessor.js","webpack:///./node_modules/echarts/lib/component/axis.js","webpack:///./node_modules/zrender/lib/Storage.js","webpack:///./node_modules/echarts/lib/component/axis/ParallelAxisView.js","webpack:///./node_modules/echarts/lib/component/toolbox.js","webpack:///./node_modules/echarts/lib/view/Component.js","webpack:///./node_modules/zrender/lib/svg/helper/GradientManager.js","webpack:///./node_modules/echarts/lib/component/visualMap/preprocessor.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapView.js","webpack:///./node_modules/echarts/lib/component/axis/AngleAxisView.js","webpack:///./node_modules/echarts/lib/chart/bar/barItemStyle.js","webpack:///./node_modules/echarts/lib/export.js","webpack:///./node_modules/echarts/lib/component/brush/brushAction.js","webpack:///./node_modules/echarts/lib/chart/pie/labelLayout.js","webpack:///./node_modules/echarts/lib/component/visualMap/typeDefaulter.js","webpack:///./node_modules/echarts/lib/component/axis/SingleAxisView.js","webpack:///./node_modules/zrender/lib/mixin/Animatable.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickSeries.js","webpack:///./node_modules/echarts/lib/component/helper/BrushTargetManager.js","webpack:///./node_modules/echarts/lib/coord/geo/parseGeoJson.js","webpack:///./node_modules/echarts/lib/chart/tree/treeAction.js","webpack:///./node_modules/echarts/lib/chart/pie.js","webpack:///./node_modules/echarts-wordcloud/src/WordCloudView.js","webpack:///./node_modules/echarts/lib/component/brush/BrushView.js","webpack:///./node_modules/echarts/lib/component/parallelAxis.js","webpack:///./node_modules/echarts/lib/component/helper/cursorHelper.js","webpack:///./node_modules/echarts/lib/coord/single/AxisModel.js","webpack:///./node_modules/echarts/lib/chart/helper/labelHelper.js","webpack:///./node_modules/zrender/lib/graphic/shape/Rect.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectSymbol.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js","webpack:///./node_modules/echarts/lib/model/OptionManager.js","webpack:///./node_modules/zrender/lib/graphic/shape/Line.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterSeries.js","webpack:///./node_modules/zrender/lib/mixin/Draggable.js","webpack:///./node_modules/echarts-liquidfill/src/liquidFillView.js","webpack:///./node_modules/echarts/lib/component/axisPointer.js","webpack:///./node_modules/echarts/lib/component/visualMap/helper.js","webpack:///./node_modules/zrender/lib/graphic/Path.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./node_modules/echarts/lib/component/dataZoom/AxisProxy.js","webpack:///./node_modules/echarts-liquidfill/src/liquidFillLayout.js","webpack:///./node_modules/echarts/lib/component/grid.js","webpack:///./node_modules/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js","webpack:///./node_modules/zrender/lib/dom/HandlerProxy.js","webpack:///./node_modules/echarts/lib/chart/map/mapSymbolLayout.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./node_modules/echarts-liquidfill/index.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeySeries.js","webpack:///./node_modules/echarts/lib/component/geo.js","webpack:///./node_modules/echarts/lib/coord/calendar/Calendar.js","webpack:///./node_modules/echarts/lib/component/legend.js","webpack:///./node_modules/zrender/lib/Handler.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayout.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/MagicType.js","webpack:///./node_modules/zrender/lib/vml/core.js","webpack:///./node_modules/echarts/lib/processor/dataFilter.js","webpack:///./node_modules/zrender/lib/graphic/shape/Polyline.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./node_modules/zrender/lib/graphic/CompoundPath.js","webpack:///./node_modules/echarts/lib/chart/line/poly.js","webpack:///./node_modules/zrender/lib/core/LRU.js","webpack:///./node_modules/zrender/lib/Element.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualMapAction.js","webpack:///./node_modules/echarts/lib/chart/graph/graphAction.js","webpack:///./node_modules/echarts/lib/action/roamHelper.js","webpack:///./node_modules/zrender/lib/contain/path.js","webpack:///./node_modules/echarts/lib/coord/parallel/Parallel.js","webpack:///./node_modules/echarts/lib/coord/polar/AxisModel.js","webpack:///./node_modules/zrender/lib/graphic/shape/Circle.js","webpack:///./node_modules/echarts/lib/chart/treemap.js","webpack:///./node_modules/echarts/lib/component/markPoint.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxView.js","webpack:///./node_modules/zrender/lib/svg/Painter.js","webpack:///./node_modules/zrender/lib/graphic/Pattern.js","webpack:///./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./src/views/Form/Charts.vue?3d3c","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotView.js","webpack:///./node_modules/echarts/lib/component/dataZoomSelect.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineModel.js","webpack:///./node_modules/zrender/lib/graphic/RadialGradient.js","webpack:///./node_modules/zrender/lib/core/guid.js","webpack:///./node_modules/echarts/lib/model/mixin/boxLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/edgeVisual.js","webpack:///./node_modules/echarts/lib/coord/parallel/AxisModel.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Restore.js","webpack:///./node_modules/echarts/lib/chart/custom.js","webpack:///./node_modules/echarts/lib/util/model.js","webpack:///./node_modules/echarts/lib/scale/Scale.js","webpack:///./node_modules/zrender/lib/container/Group.js","webpack:///./node_modules/zrender/lib/core/bbox.js","webpack:///./node_modules/echarts/lib/chart/helper/whiskerBoxCommon.js","webpack:///./node_modules/echarts/lib/model/mixin/colorPalette.js","webpack:///./node_modules/echarts/lib/util/animation.js","webpack:///./node_modules/echarts/lib/chart/bar/helper.js","webpack:///./node_modules/zrender/lib/contain/cubic.js","webpack:///./node_modules/zrender/lib/contain/text.js","webpack:///./node_modules/echarts/lib/view/Chart.js","webpack:///./node_modules/zrender/lib/vml/Painter.js","webpack:///./node_modules/echarts/lib/chart/candlestick/preprocessor.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapModel.js","webpack:///./node_modules/echarts/lib/coord/polar/prepareCustom.js","webpack:///./node_modules/echarts/lib/component/axis/singleAxisHelper.js","webpack:///./node_modules/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./node_modules/echarts/lib/component/legend/scrollableLegendAction.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotLayout.js","webpack:///./node_modules/zrender/lib/Painter.js","webpack:///./node_modules/echarts/lib/util/format.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineModel.js","webpack:///./node_modules/echarts/lib/component/calendar/CalendarView.js","webpack:///./node_modules/echarts/lib/util/array/nest.js","webpack:///./node_modules/zrender/lib/tool/transformPath.js","webpack:///./node_modules/echarts/lib/component/timeline.js","webpack:///./node_modules/echarts/lib/chart/lines/linesVisual.js","webpack:///./node_modules/echarts/lib/coord/geo/geoCreator.js","webpack:///./node_modules/echarts/lib/chart/graph/forceHelper.js","webpack:///./node_modules/echarts/lib/component/helper/sliderMove.js","webpack:///./node_modules/echarts/lib/chart/line.js","webpack:///./node_modules/echarts/lib/chart/tree.js","webpack:///./node_modules/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","webpack:///./node_modules/zrender/lib/vml/vml.js","webpack:///./node_modules/echarts/lib/chart/line/LineView.js","webpack:///./node_modules/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./node_modules/echarts/lib/coord/geo/Region.js","webpack:///./node_modules/echarts/lib/component/parallel.js","webpack:///./node_modules/echarts/lib/component/brush/BrushModel.js","webpack:///./node_modules/echarts/lib/component/helper/brushHelper.js","webpack:///./node_modules/echarts/lib/component/angleAxis.js","webpack:///./node_modules/echarts/lib/chart/treemap/Breadcrumb.js","webpack:///./node_modules/echarts/lib/chart/map/mapDataStatistic.js","webpack:///./node_modules/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./node_modules/echarts/lib/chart/pie/PieSeries.js","webpack:///./node_modules/echarts/lib/util/layout.js","webpack:///./node_modules/echarts/lib/chart/boxplot.js","webpack:///./node_modules/echarts/lib/component/axis/AxisBuilder.js","webpack:///./node_modules/echarts/lib/chart/tree/commonLayout.js","webpack:///./node_modules/echarts/lib/preprocessor/backwardCompat.js","webpack:///./node_modules/echarts/lib/component/helper/BrushController.js","webpack:///./node_modules/echarts/lib/coord/polar/Polar.js","webpack:///./node_modules/echarts/lib/visual/seriesColor.js","webpack:///./node_modules/echarts/lib/processor/dataSample.js","webpack:///./node_modules/echarts/lib/model/mixin/textStyle.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotSeries.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Brush.js","webpack:///./node_modules/echarts/lib/component/axisPointer/viewHelper.js"],"names":["List","__webpack_require__","zrUtil","SeriesModel","completeDimensions","_default","extend","type","dependencies","visualColorAccessPath","getInitialData","option","ecModel","parallelModel","getComponent","this","get","parallelAxisIndices","parallelAxisIndex","rawData","data","modelDims","dimensions","dataDims","generateDataDims","dataDimsInfo","map","dim","dimIndex","modelDimsIndex","indexOf","axisModel","translateCategoryValue","name","guessOrdinal","list","initData","progressive","animation","getRawIndicesByActiveState","activeState","coordSys","coordinateSystem","getData","indices","eachActiveState","theActiveState","dataIndex","push","getRawIndex","defaultOption","zlevel","z","parallelIndex","label","normal","show","emphasis","inactiveOpacity","activeOpacity","lineStyle","width","opacity","smooth","animationEasing","axisData","numberDim","convertDimNameToNumber","length","each","dataItem","index","NaN","dimName","replace","maxDimNum","firstItem","i","module","exports","VisualMapView","graphic","_symbol","createSymbol","layout","helper","PiecewiseVisualMapView","doRender","thisGroup","group","removeAll","visualMapModel","textGap","textStyleModel","textFont","getFont","textFill","getTextColor","itemAlign","_getItemAlign","itemSize","viewData","_getViewData","endsText","showLabel","retrieve","renderItem","item","piece","itemGroup","Group","onclick","bind","_onItemClick","_enableHoverLink","indexInModelPieceList","representValue","getRepresentValue","_createItemSymbol","visualState","getValueState","add","Text","style","x","y","text","textVerticalAlign","textAlign","_renderEndsText","viewPieceList","box","renderBackground","positionGroup","pieceIndex","onHoverLink","method","hoverLink","api","dispatchAction","batch","convertDataIndex","findTargetDataIndices","on","modelOption","orient","getItemAlign","align","getPieceList","inverse","reverse","slice","shapeParam","getControllerVisual","selected","clone","newKey","getSelectedMapKey","selectedMode","o","key","from","uid","visualMapId","id","echarts","registerAction","event","update","_model","defaultEmphasis","FunnelSeries","extendSeriesModel","init","superApply","arguments","legendDataProvider","getRawData","_defaultLabelLine","labelLine","labelLineNormalOpt","labelLineEmphasisOpt","getDataParams","params","superCall","sum","getSum","percent","toFixed","$vars","legendHoverLink","left","top","right","bottom","minSize","maxSize","sort","gap","funnelAlign","position","itemStyle","borderColor","borderWidth","dataToCoordSize","dataSize","dimIdx","val","halfSize","p1","p2","Math","abs","dataToPoint","rect","getBoundingRect","height","coord","size","BoundingRect","parseGeoJson","View","fixNanhai","fixTextCoord","fixGeoCoord","fixDiaoyuIsland","geoFixFuncs","Geo","geoJson","specialAreas","nameMap","call","_nameCoordMap","createHashMap","loadGeoJson","doConvert","methodName","finder","value","geoModel","seriesModel","getReferringComponents","prototype","constructor","containCoord","regions","contain","e","message","regionsMap","regionName","hasOwnProperty","set","addGeoCoord","center","specialArea","transformTo","_regionsMap","_rect","fixFunc","viewTransform","_viewTransform","transform","calculateTransform","decomposeTransform","scale","updateTransform","_updateTransform","getRegion","getRegionByCoord","geoCoord","getGeoCoord","regionRect","union","convertToPixel","curry","convertFromPixel","mixin","extendComponentView","render","gridModel","Rect","shape","getRect","defaults","fill","getItemStyle","silent","z2","registerPreprocessor","xAxis","yAxis","grid","updateViewOnPan","controllerHost","dx","dy","target","pos","dirty","updateViewOnZoom","zoomDelta","zoomX","zoomY","zoomLimit","newZoom","zoom","zoomMin","min","zoomMax","max","Infinity","zoomScale","DEFAULT_MIN_MERGE","DEFAULT_MIN_GALLOPING","minRunLength","n","r","makeAscendingRun","array","lo","hi","compare","runHi","reverseRun","t","binaryInsertionSort","start","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","offset","tmp","m","gallopRight","TimSort","runStart","runLength","minGallop","stackSize","pushRun","_runStart","_runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","k","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","Error","customCursor","customDest","remaining","ts","minRun","force","windingLine","EPSILON","isAroundEqual","a","b","points","w","p","p0","Clip","color","_util","isArrayLike","arraySlice","Array","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","out","arrDim","len","len2","j","fillArr","arr0","arr1","arr0Len","arr1Len","isPreviousLarger","isNaN","isArraySame","catmullRomInterpolateArray","p3","t2","t3","catmullRomInterpolate","v0","v1","cloneValue","ret","rgba2String","rgba","floor","join","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","propName","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","time","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","parse","_target","lastFrame","lastFramePercent","onframe","frame","range","clip","life","loop","_loop","delay","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","props","tracks","during","callback","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","self","clipCount","addClip","oldOnFrame","stop","forwardToLast","clipList","removeClip","done","cb","getClips","Model","linkList","TreeNode","hostTree","depth","parentNode","children","viewChildren","Tree","hostModel","levelOptions","leavesOption","root","_nodes","levelModels","levelDefine","leavesModel","addChild","child","node","isRemoved","eachNode","options","context","isString","order","suppressVisitSub","attr","updateDepthAndHeight","getNodeById","getId","res","contains","getAncestors","includeSelf","ancestors","getValue","dimension","getDimension","setLayout","merge","setItemLayout","getLayout","getItemLayout","getModel","path","itemModel","getItemModel","levelModel","getLevelModel","isExpand","getLeavesModel","setVisual","setItemVisual","getVisual","ignoreParent","getItemVisual","getNodeByDataIndex","rawIndex","getNodeByName","nodes","count","clearLayouts","clearItemLayouts","createTree","dataRoot","treeOptions","tree","levels","leaves","listData","dimMax","buildHierarchy","dataNode","isArray","dimCount","mainData","struct","structAttr","_config","__DEV__","VisualMapModel","VisualMapping","visualDefault","_number","reformIntervals","PiecewiseModel","minOpen","maxOpen","itemWidth","itemHeight","itemSymbol","pieceList","categories","splitNumber","itemGap","optionUpdated","newOption","isInit","_pieceList","resetExtent","mode","_mode","_determineMode","resetMethods","_resetSelected","resetVisual","mappingOption","state","mappingMethod","dataExtent","getExtent","visual","completeVisualOption","visualTypesInPieces","visualTypes","listVisualTypes","isCategory","has","obj","visualType","isObject","pieces","v","exists","stateList","apply","thisOption","hasSel","setSelected","findPieceIndex","result","eachTargetSeries","dataIndices","getDataDimension","pIdx","seriesId","pieceInterval","interval","getVisualMeta","getColorVisual","stops","outerColors","edge","unshift","curr","setStop","valueState","precision","parseInt","splitStep","close","formatValueText","cate","normalizeReverse","pieceListItem","closeList","infinityList","useMinMax","lg","names","retrieveVisuals","edgeSymbols","zrColor","eventUtil","env","formatUtil","toCamelCase","vendors","gCssText","assembleTransition","duration","transitionCurve","transitionText","vendorPrefix","assembleFont","cssText","fontSize","round","assembleCssText","tooltipModel","transitionDuration","backgroundColor","padding","canvasSupported","toHex","borderName","camelCase","normalizeCssArray","TooltipContent","container","el","document","createElement","zr","_zr","getZr","_x","getWidth","_y","getHeight","appendChild","_container","_show","_hideTimeout","onmouseenter","_enterable","clearTimeout","_inContent","onmousemove","window","handler","normalizeEvent","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","setContent","content","setEnterable","enterable","getSize","clientWidth","clientHeight","moveTo","viewportRootOffset","painter","getViewportRootOffset","offsetLeft","offsetTop","hide","setTimeout","isShow","parallelVisual","registerVisual","preprocessor","candlestickVisual","candlestickLayout","registerLayout","Axis","axisHelper","TimelineAxis","coordExtent","axisType","_autoLabelInterval","model","getLabelInterval","timelineModel","labelModel","labelInterval","getAxisLabelInterval","getTicks","dataToCoord","getFormattedLabels","isLabelIgnored","idx","getLabel","inherits","parsePercent","_graphic","subPixelOptimize","retrieve2","eachSeriesByType","cDim","candleWidth","calculateCandleWidth","chartLayout","variableDim","constDim","coordDims","vDims","dimInfo","getDimensionInfo","coordDim","concat","sign","args","axisDimVal","openVal","closeVal","lowestVal","highestVal","ocLow","ocHigh","ocLowPoint","getPoint","ocHighPoint","lowestPoint","highestPoint","whiskerEnds","subPixelOptimizePoint","bodyEnds","addBodyEnd","point","point1","point2","makeBrushRect","pmin","pmax","initBaseline","brushRect","extent","baseAxis","getBaseAxis","bandWidth","getBandWidth","barMaxWidth","barMinWidth","barWidth","layoutUtil","wordCloudLayoutHelper","isSupported","updateCanvasMask","maskCanvas","ctx","getContext","imageData","getImageData","newImageData","createImageData","toneSum","toneCnt","alpha","tone","threshold","putImageData","gridRect","getLayoutRect","getBoxLayoutParams","canvas","maskImage","drawImage","console","error","toString","sizeRange","rotationRange","valueExtent","getDataExtent","DEGREE_TO_RAD","PI","gridSize","onWordCloudDrawn","detail","drawn","layoutInstance","ondraw","gx","gy","mapArray","getName","number","linearMap","fontFamily","fontWeight","ellipticity","minRotation","maxRotation","clearCanvas","rotateRatio","rotationStep","drawOutOfBound","shuffle","addEventListener","dispose","removeEventListener","preventDefault","series","util","compats","compatTextStyle","textStyle","format","capitalFirst","seriesItem","commonLayout","GestureMgr","_track","dist","pointPair","sqrt","recognize","_doTrack","_recognize","clear","touches","trackItem","touch","clientToLocal","zrX","zrY","eventName","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchScale","isFinite","pinchCenter","pinchX","pinchY","Diff","buildValues","diff","components","newArr","oldArr","componentPos","componentLen","newPos","oldPos","component","removed","added","clonePath","equals","newLen","oldLen","editLength","maxEditLength","bestPath","extractCommon","execEditLength","diagonalPath","basePath","addPath","removePath","undefined","canAdd","canRemove","pushComponent","last","commonCount","tokenize","arrayDiff","RoamController","roamHelper","_cursorHelper","onIrrelevantElement","getFixedItemStyle","areaColor","updateMapSelectHandler","mapDraw","mapOrGeoModel","fromView","off","_mouseDownFlag","__regions","parent","action","mainType","region","updateMapSelected","eachChild","otherRegionEl","trigger","isSelected","MapDraw","updateGroup","_controller","_controllerHost","_updateGroup","draw","payload","isGeo","eachComponent","subType","mapSeries","getHostGeoModel","geo","groupNewProp","childAt","updateProps","itemStyleAccessPath","hoverItemStyleAccessPath","labelAccessPath","hoverLabelAccessPath","regionGroup","compoundPath","CompoundPath","paths","dataIdx","regionModel","getRegionModel","itemStyleModel","hoverItemStyleModel","hoverItemStyle","hoverLabelModel","indexOfName","visualColor","geometries","geometry","Polygon","exterior","interiors","setStyle","strokeNoScale","culling","hoverShowLabel","isDataNaN","itemLayout","labelFetcher","query","textEl","setLabelStyle","hoverStyle","labelDataIndex","defaultText","useInsideStyle","setItemGraphicEl","eventData","componentType","geoIndex","componentIndex","groupRegions","setHoverStyle","hoverSilentOnTouch","_updateController","remove","controller","getZoom","enable","makeActionBase","mouseX","mouseY","originX","originY","traverse","setPointerChecker","getViewRectAfterRoam","matrix","vector","mIdentity","identity","isNotAroundZero","Transformable","opts","rotation","origin","transformableProto","needLocalTransform","parentHasTransform","create","getLocalTransform","mul","copy","invTransform","invert","setTransform","dpr","restoreTransform","tmpTransform","sx","sy","atan2","getGlobalScale","transformCoordToLocal","v2","applyTransform","transformCoordToGlobal","rotate","Displayable","imageHelper","ZImage","brush","prevEl","src","image","_image","createOrUpdateImage","onload","isImageReady","aspect","sWidth","sHeight","drawRectText","graph","getGraph","minValue","maxValue","mapping","mapValueToColor","mapValueToVisual","customColor","LegendView","WH","XY","ScrollableLegendView","newlineDisabled","_currentIndex","_containerGroup","getContentGroup","_controllerGroup","_showController","resetInner","removeClipPath","__rectSize","renderInner","legendModel","me","controllerGroup","pageIconSize","createPageButton","pageTextStyleModel","iconIdx","pageDataIndexName","icon","createIcon","getOrient","_pageGo","font","layoutInner","contentGroup","containerGroup","orientIdx","wh","hw","yx","contentRect","controllerRect","showController","contentPos","containerPos","controllerPos","pageButtonGap","pageButtonPosition","mainRect","clipShape","setClipPath","invisible","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","to","scrollDataIndex","legendId","canJump","childOfName","cursor","pageText","pageFormatter","current","total","pageCount","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","xy","__legendDataIndex","ceil","itemRect","itemLoc","startIdx","winRect","getItemRect","intersect","startItem","startRect","ParallelAxis","axisIndex","isHorizontal","Line","vec2","curveUtil","EffectLine","lineData","seriesScope","createLine","_updateEffectSymbol","effectLineProto","effectModel","symbolType","symbol","_symbolType","setColor","_updateEffectAnimation","period","constantSpeed","delayExpr","isDelayFunc","ignore","updateAnimationPoints","getLineLength","_period","stopAnimation","__t","animate","updateSymbolPosition","__p1","__cp1","__p2","updateData","cp1","quadraticAt","quadraticDerivativeAt","tx","ty","updateLayout","visualSolution","selector","throttleUtil","BrushTargetManager","STATE_LIST","DISPATCH_METHOD","DISPATCH_FLAG","PRIORITY_BRUSH","PRIORITY","VISUAL","BRUSH","throttleType","throttleDelay","brushSelected","doDispatch","fn","createOrUpdate","isDisposed","checkInRange","selectorsByBrushType","rangeInfoList","area","brushType","selectors","getSelectorsByBrushType","brushSelector","sels","selectorsByElementType","isFunction","bSelector","sel","brushModelNotControll","brushModel","seriesIndex","seriesIndices","bindSelector","selFn","elType","setBrushOption","brushOption","brushTargetManager","setInputRanges","areas","brushIndex","thisBrushSelected","brushId","brushName","brushLink","linkedSeriesMap","selectedDataIndexForLink","rangeInfoBySeries","hasBrushExists","boundingRect","boundingRectBuilders","visualMappings","createVisualMappings","linkOthers","brushed","stepAParallel","hasAxisBrushed","stepAOthers","controlSeries","eachSeries","seriesBrushSelected","seriesName","applyVisual","lineX","noop","lineY","getBoundingRectFromMinMax","polygon","minMax","rg","visualSymbol","layoutPoints","modelUtil","getSeriesByIndex","queryDataIndex","getItemGraphicEl","getTooltipPosition","getValues","coordDimToDataDim","_labelHelper","findLabelValueDim","getSymbolSize","symbolSize","getScale","SymbolClz","symbolProto","driftSymbol","drift","_createSymbol","symbolPath","stopSymbolAnimation","toLastFrame","getSymbolPath","highlight","downplay","setZ","setDraggable","draggable","_updateCommon","fadeIn","initProps","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","useStyle","symbolRotate","symbolOffset","hoverAnimation","cursorStyle","hasItemOption","getShallow","elStyle","symbolInnerColor","useNameLabel","valueDim","isRectText","autoColor","isAnimationEnabled","onEmphasis","ratio","animateTo","onNormal","fadeOut","opt","keepLabel","symbolUtil","normalizeSymbolSize","extendChartView","polar","oldData","_data","updateSymbols","oldPoints","newPoints","symbolGroup","__dimIdx","getInitialPoints","pt","cx","cy","polyline","Polyline","newIdx","oldIdx","execute","eachItemGraphicEl","getLineStyle","stroke","areaStyleModel","hoverAreaStyleModel","polygonIgnore","isEmpty","parentModel","hoverPolygonIgnore","getAreaStyle","itemHoverStyle","labelHoverModel","labelDimIndex","AxisBuilder","AxisView","axisBuilderAttrs","selfBuilderAttrs","axisPointerClass","radiusAxisModel","radiusAxis","axis","angleAxis","getAngleAxis","ticksCoords","getTicksCoords","axisAngle","radiusExtent","layoutAxis","axisBuilder","getGroup","isBlank","_splitLine","splitLineModel","lineStyleModel","lineColors","lineCount","splitLines","colorIndex","Circle","mergePath","_splitArea","splitAreaModel","areaColors","splitAreas","prevRadius","Sector","r0","startAngle","endAngle","labelDirection","tickDirection","nameDirection","labelRotate","createListFromArray","axisModelCommonMixin","_completeDimensions","createList","createScale","createScaleByModel","setExtent","niceScaleExtent","mixinAxisModelCommonMethods","ArrayCtor","Float32Array","m1","m2","out0","out1","out2","out3","out4","out5","translate","rad","aa","ac","atx","ab","ad","aty","st","sin","ct","cos","vx","vy","det","axisDefault","valueAxisDefault","valueAxis","defaultsShow","RadarModel","extendComponentModel","boundaryGap","axisLine","axisTick","axisLabel","nameTextStyle","showName","nameFormatter","nameGap","triggerEvent","indicatorModels","indicatorOpt","iNameTextStyle","nameLocation","indName","getIndicatorModels","radius","splitLine","splitArea","indicator","coordsOffsetMap","南海诸岛","广东","香港","澳门","天津","coordFix","cp","BaseBarSeries","makeGetter","register","records","initGlobalListeners","record","useHandler","eventType","dis","makeDispatchAction","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","pendingList","unregister","Scale","scaleProto","OrdinalScale","_extent","rank","normalize","ticks","unionExtentFromData","unionExtent","niceTicks","niceExtent","MarkerModel","tooltip","ChartView","_whiskerBoxCommon","viewMixin","CandlestickView","getStyleUpdater","updateStyle","normalItemStyleModel","whiskerEl","whiskerIndex","bodyEl","bodyIndex","Style","Element","RectText","__clipPaths","__dirty","dragging","rectHover","beforeBrush","afterBrush","rectContain","__zr","refresh","animateStyle","attrKV","rawAxisPosition","axisPosition","onZero","axisDim","rectBound","axisOffset","posBound","otherAxis","getAxis","onZeroAxisIndex","onZeroCoord","toGlobalCoord","dirMap","labelOffset","labelInside","updateDataSelected","hasAnimation","selectedOffset","toggleItemSelected","midAngle","PiePiece","sector","hoverIgnore","normalIgnore","piePieceProto","firstCreate","sectorShape","setShape","animationType","lineJoin","_updateLabel","labelText","labelLayout","linePoints","labelLineModel","labelLineHoverModel","inside","verticalAlign","PieView","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","piePiece","_createClipPath","clockwise","clipPath","containPoint","simpleLayout","simpleLayoutEdge","eachEdge","curveness","node1","node2","Polar","_axisHelper","CoordinateSystem","resizePolar","polarModel","getRadiusAxis","updatePolarScale","onBand","setAxis","polarCreator","polarList","findAxisModel","angleAxisModel","queryComponents","getSeriesStackId","getAxisKey","barLayoutPolar","seriesType","lastStackCoords","lastStackCoordsOrigin","barWidthAndOffset","calRadialBar","filter","getSeriesByType","isSeriesFiltered","stackId","columnLayoutInfo","columnOffset","columnWidth","getOtherAxis","barMinHeight","barMinAngle","valueAxisStart","valueMax","valueMin","coords","angle","pointToCoord","lastCoordOrigin","dataToAngle","stackCoord","barSeries","columnsMap","axisExtent","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","maxWidth","barGap","barCategoryGap","coordSysName","barGapPercent","autoWidth","column","stack","lastColumn","widthSum","Path","buildPath","mathCos","mathSin","lineTo","ComponentModel","selectableMixin","geoCreator","GeoModel","layoutMode","getFilledRegions","_optionModelMap","reduce","optionModelMap","regionOpt","updateSelectedMap","aspectScale","boundingCoords","scaleLimit","getFormattedLabel","status","formatter","setZoom","setCenter","arrySlice","Eventful","_$handlers","one","_h","h","isSilent","newList","l","argLen","splice","triggerWithContext","getCategories","getMin","rangeStart","eqNaN","getMax","rangeEnd","getNeedCrossZero","getCoordSysModel","setRange","resetRange","coordinateSystemCreators","CoordinateSystemManager","_coordinateSystems","coordinateSystems","creater","getCoordinateSystems","coordinateSystemCreator","curve","bbox","devicePixelRatio","CMD","M","L","C","Q","A","Z","R","min2","max2","mathMin","mathMax","mathSqrt","mathAbs","hasTypedArray","PathProxy","notSaveData","_saveData","_ctx","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","setScale","beginPath","addData","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","x1","y1","x2","y2","x3","y3","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","anticlockwise","arcTo","closePath","x0","y0","toStatic","setLineDash","lineDash","lineDashSum","setLineDashOffset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","cubicAt","bezierLen","tmpLen","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","rebuildPath","d","ux","uy","theta","dTheta","psi","fs","scaleX","scaleY","isEllipse","bMapModel","rendering","bmap","getBMap","viewportRoot","getViewportRoot","moveHandler","offsetEl","mapOffset","setMapOffset","__mapOffset","zoomEndHandler","_oldMoveHandler","_oldZoomEndHandler","roam","enableDragging","disableDragging","enableScrollWheelZoom","enableDoubleClickZoom","enablePinchToZoom","disableScrollWheelZoom","disableDoubleClickZoom","disablePinchToZoom","originalStyle","__mapStyle","newMapStyle","mapStyleStr","JSON","stringify","Object","keys","setMapStyle","features","ctor","_format","encodeHTML","layoutInfo","treeOption","treeDepth","expandAndCollapse","expandTreeDepth","initialTreeDepth","getRawDataItem","collapsed","formatTooltip","realRoot","animationDuration","animationDurationUpdate","numberUtil","scaleHelper","IntervalScale","intervalScaleProto","mathCeil","mathFloor","ONE_SECOND","ONE_MINUTE","ONE_HOUR","ONE_DAY","bisect","TimeScale","stepLvl","_stepLvl","date","Date","formatTime","getSetting","getFullYear","getMonth","getDate","minInterval","maxInterval","_interval","fixMin","fixMax","approxTickNum","span","approxInterval","scaleLevelsLen","scaleLevels","level","yearSpan","yearStep","nice","timezoneOffset","getTimezoneOffset","fixExtent","_niceExtent","parseDate","useUTC","clipOverflow","step","smoothMonotone","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","Component","axisExpandable","axisExpandCenter","axisExpandCount","axisExpandWidth","axisExpandRate","axisExpandDebounce","axisExpandSlideTriggerArea","axisExpandTriggerOn","parallelAxisDefault","mergeOption","_initDimensions","setAxisExpand","axisModels","dependentModels","parallelAxis","navigator","browser","os","svgSupported","detect","userAgent","ua","firefox","match","ie","weChat","test","version","SVGRect","touchEventsSupported","pointerEventsSupported","hierNode","defaultAncestor","ancestor","prelim","modifier","change","shift","thread","pop","firstWalk","separation","siblings","subtreeW","executeShifts","midPoint","apportion","secondWalk","nodeX","defaultSeparation","radialCoordinate","radialCoor","getViewRect","subtreeV","nodeOutRight","nodeInRight","nodeOutLeft","nodeInLeft","sumOutRight","sumInRight","sumOutLeft","sumInLeft","nextRight","nextLeft","moveSubtree","nextAncestor","wl","wr","pathTool","colorTool","Image","Ring","BezierCurve","Arc","LinearGradient","RadialGradient","EMPTY_OBJ","extendShape","extendPath","pathData","extendFromString","makePath","createFromString","centerGraphic","resizePath","makeImage","imageUrl","img","pathRect","subPixelOptimizeLine","param","lineWidth","subPixelOptimizeRect","originWidth","originHeight","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","useHoverLayer","addHover","insideRollbackOpt","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","doSingleLeaveHover","normalStl","removeHover","doEnterHover","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","showNormal","showEmphasis","baseText","normalStyleText","emphasisStyleText","setTextStyle","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","setText","defaultColor","textPosition","textOffset","textRotation","textDistance","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","setTokenTextStyle","rich","forceRich","richItemNameMap","isBlock","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","originalTextPosition","insideRollback","fontStyle","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","gTextStyleModel","animateOrSetProps","isUpdate","animatableModel","animationEnabled","postfix","animationDelay","getAnimationDelayParams","getTransform","mat","transformDirection","direction","hBase","vBase","vertex","groupTransition","g1","g2","elMap1","getElMap","isGroup","anid","oldEl","newProp","getAnimatableProps","g","elMap","clipPointsByRect","clipRectByRect","targetRect","iconStr","eventTool","throttle","DataZoomView","sliderMove","asc","DEFAULT_LOCATION_EDGE_GAP","DEFAULT_FRAME_BORDER_WIDTH","DEFAULT_FILLER_SIZE","HORIZONTAL","VERTICAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","SliderZoomView","_displayables","_orient","_range","_handleEnds","_size","_handleWidth","_handleHeight","_location","_dragging","_dataShadowInfo","dataZoomModel","_buildView","_updateView","_resetLocation","_resetInterval","barGroup","_renderBackground","_renderHandle","_renderDataShadow","_positionGroup","coordRect","_findCoordRect","ecSize","positionInfo","layoutParams","getLayoutParams","layoutRect","location","targetAxisModel","getFirstTargetAxisModel","otherAxisInverse","_getViewExtent","_onClickPanelClick","info","_prepareDataShadowInfo","otherDim","getShadowDim","otherDataExtent","otherOffset","lastIsEmpty","otherShadowExtent","thisShadowExtent","areaPoints","thisCoord","stride","otherCoord","showDataShadow","eachTargetAxis","dimNames","seriesModels","getAxisProxy","getTargetSeriesModels","thisAxis","getOtherDim","thisDim","displaybles","handles","handleLabels","filler","getCursor","_onDragMove","ondragstart","_showDataInfo","ondragend","_onDragEnd","onmouseover","onmouseout","handleIndex","bRect","handleColor","getPercentRange","viewExtent","_updateInterval","delta","handleEnds","viewExtend","minMaxSpan","findRepresentativeAxisProxy","getMinMaxSpan","percentExtent","minSpan","maxSpan","nonRealtime","handleInterval","handle","handleHeight","_updateDataInfo","labelTexts","axisProxy","getAxisModel","dataInterval","calculateDataWindow","end","valueWindow","getDataValueWindow","_formatLabel","orderedHandleEnds","setLabel","barTransform","textPoint","labelFormatter","labelPrecision","getPixelPrecision","valueStr","showOrHide","realtime","_dispatchZoomAction","localPoint","offsetX","offsetY","dataZoomId","getTargetCoordInfo","coordInfoList","Graph","edges","directed","beforeLink","addNode","linkNameList","validEdges","linkCount","link","source","addEdge","nodeData","coordSysCtor","dimensionNames","edgeData","datas","datasAttr","IndicatorAxis","getScaleExtent","Radar","radarModel","_indicatorAxes","indicatorModel","indicatorAxis","resize","getIndicatorAxes","indicatorIndex","coordToPoint","pointToData","closestAxis","radian","minRadianDiff","closestAxisIdx","coodToData","viewWidth","viewHeight","viewSize","indicatorAxes","radarSeries","increaseInterval","exp10","pow","log","LN10","f","rawExtent","fixedMin","fixedMax","getInterval","setInterval","nicedSplitNumber","halfSplitNumber","radarList","radar","categoryFilter","categoryVisual","edgeVisual","circularLayout","forceLayout","createView","registerProcessor","registerCoordinateSystem","addCommas","fillLabel","extraOpt","mergeDefaultAndTheme","createdBySelf","hostSeries","__hostSeries","newOpt","modelPropName","markerOpt","markerModel","getRawValue","formattedValue","html","dataFormatMixin","getSortedIndices","valueArr","isAscending","textX","textY","labelPosition","isLabelInside","labelLineLen","viewRect","sizeExtent","getLinePoints","offY","nextIdx","c","defineProperty","configurable","enumerable","__esModule","default","s","_amap","_mapOffset","_api","_zoom","_center","lnglatToPixel","getAMap","AMap","LngLat","lngLatToContainer","containerToLngLat","lng","lat","getRoamTransform","getDom","__amap","querySelector","removeChild","classList","__options","Map","__layer","CustomLayer","setMap","getLayer","u","getCenter","getMapOptions","setCenterAndZoom","centerOrZoomChanged","getInstanceByDom","_oldResizeHandler","_poly","DataDiffer","_layers","layerSeries","getLayerSeries","keyGetter","dataDiffer","_layersSeries","newLayersGroups","process","oldLayersGroups","points0","points1","textLayout","margin","layerGroup","stackedOnPoints","stackedOnSmooth","smoothConstraint","createGridClipShape","rectEl","POSSIBLE_STYLES","compatItemStyle","itemStyleOpt","styleName","normalItemStyleOpt","emphasisItemStyleOpt","labelOptSingle","TEXT_STYLE_OPTIONS","compatLabelTextStyle","labelOpt","processSeries","seriesOpt","upperLabel","edgeLabel","markPoint","markLine","markArea","mpData","mlData","toArr","toObj","isTheme","axes","axisName","axisOpt","axisPointer","parallel","parallelOpt","calendar","calendarOpt","radarOpt","geoOpt","regionObj","timeline","global","factory","echartsLib","DEFAULT_THEME","categoryAxis","line","containLabel","DEFAULT_COLORS","HEAT_MAP_COLOR","HEAT_BMAP_COLOR","itemPoint","STATIC_PROPS","ECHARTS_SETTINGS","ABBR","th","mi","bi","tr","DEFAULT_OPTIONS","zeroFormat","nullFormat","defaultFormat","scalePercentBy100","abbrLabel","TRILLION","BILLION","MILLION","THOUSAND","numIsNaN","maxDecimals","roundingFunction","optionals","splitValue","split","minDecimals","boundedPrecision","power","output","optionalsRegExp","RegExp","numberToFormat","negP","optDec","abbr","decimal","neg","abbrForce","signed","int","thousands","leadingCount","trillion","million","sub","forEach","numerifyPercent","regexp","formatType","numerify","space","_numberToFormat","formats","formatFunction","kind","input","setOptions","reset","_typeof","Symbol","iterator","writable","_extends","assign","toArray","arr","debounce","timer","set$1","targetTemp","pathArr","get$1","defaultValue","some","_typeof$1","getType","getTypeof","cloneDeep","camelToKebab","toLowerCase","hasOwn","isEqual","alice","bob","aliceValue","bobValue","aliceType","_key","getFormated","digit","defaultVal","digitStr","getStackMap","stackMap","$get","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","send","responseText","onerror","mapPromise","getMapJSON","_ref","positionJsonLink","beforeRegisterMapOnce","mapURLProfix","then","bmapPromise","amapPromise","getBmap","callbackName","now","script","body","getAmap","setArrayValue","VALUE_AXIS_OPACITY","getBarDimAxis","innerRows","dimAxisName","axisVisible","dimAxisType","dims","getValueAxisData","row","String","getBarMeaAxis","meaAxisName","meaAxisType","meaAxisBase","meaAxis","getBarTooltip","axisSite","isHistogram","labelMap","secondAxis","items","tpl","getValueData","seriesTemp","getBarSeries","metrics","_args$showLine","showLine","secondDimAxisIndex","itemOpacity","getLegend","legendName","getDims","rows","bar$1","columns","settings","extra","_settings$axisSite","_settings$dimension","_settings$stack","_settings$axisVisible","_settings$digit","_settings$dataOrder","dataOrder","_settings$scale","_settings$min","_settings$max","_settings$legendName","_settings$labelMap","_settings$barGap","tooltipVisible","legendVisible","xAxisType","yAxisType","xAxisName","yAxisName","_label","warn","legend$$1","tooltipParams","tooltip$$1","legend","histogram","_settings$axisSite2","_settings$dimension2","_settings$stack2","_settings$axisVisible2","_settings$digit2","_settings$dataOrder2","_settings$scale2","_settings$min2","_settings$max2","_settings$labelMap2","_settings$legendName2","_settings$barGap2","_label2","Loading","_vm","$createElement","_c","_self","staticClass","attrs","viewBox","staticRenderFns","DataEmpty","_v","setExtend","setMark","marks","setAnimation","Core","class","$options","_componentTag","canvasStyle","v-charts-mask-status","dataEmpty","loading","ref","$slots","beforeConfig","Function","afterConfig","afterSetOption","afterSetOptionOnce","events","colors","Boolean","legendPosition","visualMap","dataZoom","toolbox","initOptions","title","theme","themeName","judgeWidth","widthChangeDelay","tooltipFormatter","resizeable","resizeDelay","changeDelay","setOptionOpts","cancelResizeCheck","notSetUnchange","watch","deep","changeHandler","chartLib","chartHandler","computed","chartColor","methods","dataHandler","_data$columns","_data$rows","_once","optionsHandler","nextTickResize","$nextTick","echartsResize","$el","_this","setting","amap","_store","notMerge","_isDestroyed","setOption","$emit","judgeWidthHandler","_this2","_","resizeableHandler","onresize","addResizeListener","removeResizeListener","$refs","createEventProxy","resizeHandler","addWatchToProps","_this3","watchedVariable","_watchers","watcher","expression","$props","prop","$watch","_this4","ev","registeredEvents","themeChange","clean","created","mounted","beforeDestroy","_numerify","VeBar","VeHistogram","getLineXAxis","getLineSeries","nullAddZero","areaStyle","dataTemp","yAxisIndex","getLineYAxis","yAxisBase","getLineTooltip","rightItems","rightList","_items$","axisValueLabel","marker","showData","itemData","getLegend$1","line$1","_settings$yAxisType","_settings$xAxisType","_settings$yAxisName","_settings$xAxisName","_settings$nullAddZero","VeLine","pieRadius","ringRadius","roseRingRadius","pieOffsetY","getPieSeries","dataType","percentShow","roseType","limitShowNum","isRing","levelTemp","rowsTemp","levelItems","itemLevel","levelItem","seriesBase","rowsTempLength","dataRows","centerWidth","outerWidth","innerWidth","firstData","remainArr","getPieLegend","legendLimit","getPieTooltip","pie$1","_settings$dataType","_settings$metrics","_settings$roseType","_settings$radius","_settings$offsetY","_settings$legendLimit","_settings$selectedMod","_settings$hoverAnimat","_settings$label","_settings$level","_settings$limitShowNu","seriesParams","legendParams","ring","VePie","VeRing","getWaterfallTooltip","getWaterfallXAxis","remainStatus","totalName","remainName","xAxisData","getWaterfallYAxis","getWaterfallSeries","totalNum","dataSum","dataSumTemp","totalNumTemp","assistData","rowData","getWaterfallRemainStatus","waterfall","_settings$totalName","_settings$remainName","metricsTemp","parseFloat","pre","cur","xAxisParams","VeWaterfall","getFunnelTooltip","realValue","getFunnelLegend","getFunnelSeries","sequence","ascending","filterZero","useDefaultOrder","falseFunnel","funnel$1","outerColumns","outerRows","_settings$sequence","VeFunnel","getRadarLegend","legendData","getRadarTooltip","radar$$1","typeTemp","nameTemp","getRadarSetting","settingBase","indicatorTemp","getRadarSeries","radarIndexObj","seriesData","serieData","radar$1","VeRadar","VeChart","bar","pie","funnel","getTooltip","dataStore","getSeries","selectData","mapGrid","mapBase","mapType","itemName","itemResult","setGeoLabel","getLegendMap","registerMap","mapOrigin","registerSign","beforeRegisterMap","registerSignOnce","map$1","_settings$position","_settings$selectData","_settings$mapURLProfi","_settings$specialArea","registerOptions","json","VeMap","bmap$1","__","bmap$$1","useOuterMap","VeBmap","VeAmap","getTooltip$1","itemDataType","linksDataType","getSeries$1","links","valueFull","useDataValue","dataMap","innerLinks","sankey$1","_settings$valueFull","_settings$useDataValu","VeSankey","getAxisList","innerXAxisList","innerYAxisList","xDim","yDim","extraMetrics","xIndex","yIndex","extraData","getVisualMap","innerMin","innerMax","heatColor","calculable","inRange","getSeries$2","chartData","getTooltip$2","_ref$data$value","heatmap$1","_settings$type","xAxisList","yAxisList","_settings$v","_settings$pointSize","pointSize","_settings$blurSize","blurSize","mainColumn","metricsList","visualMap$$1","geoAttr","VeHeatmap","getScatterLegend","dataLabels","getScatterTooltip","tooltipTrigger","getTooltipContent","num","getScatterXAxis","dataLabel","getScatterYAxis","getScatterSeries","symbolSizeMax","numbers","maxNum","ext","scatter$1","_settings$tooltipTrig","_settings$symbolSizeM","lineSettings","VeScatter","DEFAULT_MA","DEFAULT_K_NAME","DEFAULT_DOWN_COLOR","DEFAULT_UP_COLOR","DEFAULT_START","DEFAULT_END","SHOW_FALSE","getCandleLegend","showMA","MA","getCandleTooltip","elRect","side","axisValue","componentSubType","_val","getCandleVisualMap","downColor","upColor","getCandleGrid","showVol","getCandleXAxis","gridIndex","getCandleYAxis","getCandleDataZoom","xAxisIndex","getCandleSeries","values","volumes","color0","borderColor0","calculateMA","dayCount","candle","_settings$MA","_settings$showMA","_settings$showVol","_settings$showDataZoo","showDataZoom","_settings$downColor","_settings$upColor","_settings$start","_settings$end","isLiteData","candleMetrics","volumeMetrics","_status","dataZoom$$1","VeCandle","getTooltip$3","_options$data","getSeries$3","seriesMap","dataName","gauge$1","_settings$seriesMap","_settings$dataName","VeGauge","getTreeLegend","getTreeTooltip","triggerOn","getTreeSeries","tree$1","VeTree","getTooltip$4","getSeries$4","wave","itemWave","itemMap","liquidfill","_settings$wave","VeLiquidfill","getSeries$5","sizeMax","sizeMin","baseType","random","getTooltip$5","_params$data","wordcloud","_settings$color","_settings$sizeMax","_settings$sizeMin","_settings$shape","VeWordcloud","install","Vue","properties","excludes","includes","PI2","RADIAN","minAngle","validDataCount","unitRadian","stillShowZeroSum","restAngle","valueSumLargerThanMinAngle","currentAngle","dir","paletteScope","categoriesData","getCategoriesData","categoryNameIdxMap","getColorFromPalette","category","keep","dataView","lang","back","magicType","tiled","restore","saveAsImage","STYLE_COMMON_PROPS","createLinearGradient","canvasGradient","createRadialGradient","lineDashOffset","shadowBlur","shadowOffsetX","shadowOffsetY","textRect","transformText","textOrigin","truncate","blend","prevStyle","firstDraw","fillStyle","strokeStyle","globalAlpha","globalCompositeOperation","hasStroke","getLineScale","hasFill","otherStyle","overwrite","newStyle","getGradient","colorStops","addColorStop","styleProto","hasKeys","supplementVisualOption","mappings","createMappings","visualData","isValidType","__hidden","__alphaForOpacity","Creater","replaceVisualOption","scope","visualTypesMap","eachItem","valueOrIndex","rawDataItem","prepareVisualTypes","resetSingleAxis","filterSingleAxis","filterData","percentRange","getDataPercentWindow","valueRange","setRawRange","startValue","endValue","debugMode","barPolar","borderColorQuery","globalColors","eachRawSeriesByType","defaulColor","legendSymbol","getMarkerPosition","offsetIndex","DEFAULT_BAR_BOUND","ContinuousModel","hoverLinkDataSize","hoverLinkOnHandle","_resetRange","resetItemSize","auto","getSelected","oVals","getColorStopValues","iVals","iIdx","oIdx","iLen","oLen","first","stopsLen","stopValues","markerHelper","LineDraw","MarkerView","markLineTransform","mlModel","mlType","valueDataDim","axisInfo","getAxisInfo","numCalculate","valueIndex","baseIndex","mlFrom","mlTo","dataTransform","isInifinity","ifMarkLineHasOnlyDim","fromCoord","toCoord","otherDimIndex","containData","markLineFilter","dataFilter","updateSingleMarkerEndLayout","isFrom","xPx","yPx","markLineModel","fromData","__from","toData","__to","markerGroupMap","renderSeries","lineDrawMap","lineDraw","updateDataVisualAndLayout","lineColor","fromSymbolSize","fromSymbol","toSymbolSize","toSymbol","dataModel","__keep","coordDimsInfos","optData","dimValueGetter","_event","Dispatcher","requestAnimationFrame","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","addAnimator","clips","removeAnimator","_update","getTime","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","sankeyLayout","sankeyVisual","_echarts","_export","DATAS","MAIN_DATA","main","linkAll","TRANSFERABLE_METHODS","wrapMethod","transferInjection","cloneShallowInjection","CHANGABLE_METHODS","changeInjection","assert","isMainData","linkSingle","cloneShallow","getLinkedData","Region","roams","InsideZoomView","shouldRecordRange","allCoordIds","coordInfo","generateCoordId","coordModel","dataZoomOption","coordId","containsPoint","throttleRate","panGetRange","_onPan","zoomGetRange","_onZoom","zoomLock","disabled","roamControllerOpt","zoomOnMouseWheel","moveOnMouseMove","preventDefaultMouseMove","oldX","oldY","newX","newY","directionInfo","getDirectionInfo","percentDelta","signal","pixel","pixelLength","percentPoint","pixelStart","oldPoint","newPoint","angleExtent","singleAxis","amplitude","waveLength","phase","waveAnimation","animationEasingUpdate","outline","borderDistance","shadowColor","backgroundStyle","insideColor","baseline","getDataItemValue","converDataValue","isDataItemOption","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","creator","creators","registeredCoordSys","completeDimOpt","encodeDef","dimsDef","axesInfo","getDimensionsInfo","categoryIndex","nameList","createNameList","itemOpt","categoryAxesModels","isStackable","getDimTypeByAxis","cartesian2d","axesModels","xAxisModel","yAxisModel","stackable","isXAxisCateogry","isYAxisCategory","singleAxisModel","singleAxisType","single","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","categoryAxisModel","categoryDim","dataLen","isNumeric","_helper","BAR_BORDER_WIDTH_QUERY","LAYOUT_ATTRS","posDesc","pathForLineWidth","BarView","cartesian","coordSysRect","coordSysExtent","hasValue","symbolMeta","getSymbolMeta","createBar","updateCommon","newIndex","oldIndex","pictorialShapeStr","getShapeStr","__pictorialShapeStr","updateBar","__pictorialSymbolMeta","removeBar","animationModel","symbolRepeat","symbolClip","symbolPosition","symbolPatternSize","symbolRepeatDirection","prepareBarLength","prepareSymbolSize","boundingLength","pxSign","prepareLineWidth","symbolScale","prepareLayoutInfo","valueLineWidth","repeatCutLength","symbolBoundingData","zeroPx","pxSignIdx","symbolBoundingExtent","convertToCoordOnAxis","categorySize","unitLength","pathLen","absBoundingLength","symbolMargin","hasEndGap","lastIndexOf","uLenWithMargin","endFix","repeatSpecified","repeatTimes","toIntTimes","mDiff","sizeFix","pathPosition","bundlePosition","barRectShape","createPath","createOrUpdateRepeatSymbols","bundle","__pictorialBundle","unit","eachPath","__pictorialAnimationIndex","__pictorialRepeatTimes","updateAttr","makeTarget","updateHoverAnimation","onMouseOver","onMouseOut","createOrUpdateSingleSymbol","mainPath","__pictorialMainPath","createOrUpdateBarRect","rectShape","barRect","__pictorialBarRect","createOrUpdateClip","__pictorialClipPath","labelRect","pathes","immediateAttrs","animationAttrs","barRectHoverStyle","barPositionOutside","times","roundedTimes","transformPath","cc","vMag","vRatio","vAngle","acos","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","createPathProxyFromString","cs","prevCmd","cpx","cpy","str","charAt","ctlPtx","ctlPty","createPathOptions","pathProxy","pathEls","pathList","pathEl","createPathProxy","__dirtyPath","pathBundle","TimelineView","_axis","_viewRect","_timer","_currentPointer","_mainGroup","_labelGroup","_layout","mainGroup","_createGroup","labelGroup","_createAxis","_renderAxisLabel","_position","_doPlayStop","_clearTimer","labelPosOpt","horizontal","vertical","playPosition","prevBtnPosition","nextBtnPosition","labelAlignMap","labelBaselineMap","rotationMap","mainLength","controlModel","showControl","controlSize","controlGap","sizePlusGap","labelRotation","controlPosition","showPlayBtn","showPrevBtn","showNextBtn","xLeft","xRight","labelAlign","labelBaseline","rotateOriginX","rotateOriginY","viewBound","getBound","mainBound","labelBound","mainPosition","labelsPosition","mainBoundIdx","toBound","setOrigin","targetGroup","fromPos","boundIdx","_customizeScale","getTicksLabels","newGroup","_renderAxisLine","lineCap","_renderAxisTick","tickCoord","hoverStyleModel","symbolOpt","_changeTimeline","giveSymbol","labels","tick","normalLabelModel","_renderControl","playState","getPlayState","makeBtn","iconPath","willRotate","btn","makeIcon","_handlePlayClick","_renderCurrentPointer","currentIndex","getCurrentIndex","pointerModel","onCreate","pointer","_handlePointerDrag","_handlePointerDragend","pointerMoveTo","onUpdate","nextState","_pointerChangeTimeline","mousePos","_toAxisCoord","targetDataIndex","_findNearestTick","handleFrame","trans","axisCoord","nextIndex","objPath","noAnimation","DataZoomModel","SliderZoomModel","dataBackground","fillerColor","handleIcon","handleSize","handleStyle","showDetail","RADIAN_EPSILON","_trim","domain","clamp","subDomain","subRange","all","returnStr","getPrecision","getPrecisionSafe","eIndex","dotIndex","pixelExtent","dataQuantity","sizeQuantity","getPercentWithPrecision","valueList","acc","digits","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","pi2","isRadianAroundZero","TIME_REG","exec","hour","toUpperCase","UTC","quantity","quantityExponent","nf","exponent","littleThan","currClose","makeStyleMapper","getLineDash","lineType","dotSize","dashSize","setCurrentIndex","isIndexMax","setPlayState","resetOption","maxOpacity","minOpacity","AxisProxy","eachAxisDim","filterMode","minValueSpan","maxValueSpan","rangeMode","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","_rangePropMode","rawOption","retrieveRaw","doInit","_setDefaultThrottle","updateRangeUse","_resetTarget","_giveAxisProxies","axisProxies","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","normalizeToArray","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxisIndex","axisIndices","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","globalOption","firstAxisModel","ignoreUpdateRangeUsg","getValueRange","axisDimName","hostedBy","getRangePropMode","rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","HOVER_LINK_SIZE","HOVER_LINK_OUT","ContinuousView","_shapes","_dataInterval","_useHandle","_hoverLinkDataIndices","_hovering","_renderBar","dataRangeText","_enableHoverLinkToSeries","_enableHoverLinkFromSeries","endsIndex","_applyTransform","shapes","useHandle","_createBarGroup","outOfRange","createPolygon","_dragHandle","getTextRect","textSize","handleThumbs","handleLabelPoints","_createHandle","_createIndicator","onDrift","onDragEnd","handleThumb","createHandlePoints","handleLabel","handleLabelPoint","indicatorLabel","indicatorLabelPoint","isEnd","_clearHoverLinkToSeries","useHoverLinkOnHandle","_doHoverLinkToSeries","forSketch","outOfRangeHandleEnds","inRangeHandleEnds","visualInRange","_createBarVisual","visualOutOfRange","barColor","barPoints","_updateHandle","forceState","convertOpacityToAlpha","_makeColorGradient","symbolSizes","_createBarPoints","handlesColor","sampleNumber","currValue","_showIndicator","cursorValue","textValue","rangeSymbol","halfHoverLinkSize","createIndicatorPoints","_hoverLinkFromSeriesMouseOver","_hideIndicator","_clearHoverLinkFromSeries","cursorPos","hoverOnBar","getHalfHoverLinkSize","hoverRange","oldBatch","newBatch","resultBatches","compressBatches","_dispatchHighDown","isTargetSeries","element","isRange","extentMax","zrender","timsort","GlobalModel","ExtensionAPI","OptionManager","backwardCompat","ComponentView","_throttle","seriesColor","loadingDefault","parseClassType","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_BRUSH","PROCESSOR","FILTER","STATISTIC","LAYOUT","GLOBAL","CHART","COMPONENT","IN_MAIN_PROCESS","HAS_GRADIENT_OR_PATTERN_BG","OPTION_UPDATED","ACTION_REG","createRegisterEventWithLowercaseName","MessageCenter","ECharts","dom","themeStorage","_dom","defaultRenderer","renderer","_throttledZrFlush","flush","prioritySortFunc","prio","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","createExtensionAPI","_messageCenter","_initEvents","_pendingActions","visualFuncs","dataProcessorFuncs","_onframe","setAsPrimitive","echartsProto","doConvertPixel","coordSysList","parseFinder","updateMethods","prepareAndUpdate","flushPendingActions","triggerUpdatedEvent","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","getOption","getDevicePixelRatio","getRenderedCanvas","pixelRatio","storage","getDisplayList","getSvgDataUrl","pathToSvg","getDataURL","excludeComponents","excludesComponentViews","view","__viewId","toDataURL","getConnectedDataURL","groupId","MAX_NUMBER","connectedGroups","canvasList","instances","chart","getBoundingClientRect","targetCanvas","createCanvas","refreshImmediately","containPixel","models","defaultMainType","dataIndexInside","indexOfRawIndex","getViewOfComponentModel","componentModel","getViewOfSeriesModel","coordSysMgr","restoreData","processData","stackSeriesData","doVisualEncoding","isSingleCanvas","configLayer","clearColor","colorArr","background","postUpdateFuncs","func","updateView","clearAllVisual","invokeUpdateMethod","updateVisual","doLayout","prepareView","updateDirectly","ecIns","condition","callView","__alive","__model","doDispatchAction","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","updateMethod","payloads","batched","eventObj","eventObjBatch","isHighDown","batchItem","pendingActions","updateZ","updateProgressiveAndBlend","updateHoverLayerStatus","isComponent","viewList","viewMap","viewId","classType","Clazz","getClass","__id","__ecComponentInfo","stackedDataMap","previousStack","stackedOn","isLayout","excludesLayout","clearColorPalette","componentView","chartView","optionChanged","_loadingFX","showLoading","cfg","hideLoading","loadingEffects","makeActionFromEvent","eventActionMap","MOUSE_EVENT_NAMES","elCount","frameDrawNum","needProgressive","blendMode","ecInstance","getComponentByElement","modelInfo","eveName","actionType","_disposed","idBase","groupIdBase","DOM_ATTRIBUTE_KEY","mapDataStores","enableConnect","STATUS_PENDING","STATUS_UPDATING","STATUS_UPDATED","STATUS_KEY","updateConnectedChartsStatus","charts","otherChart","otherCharts","existInstance","setAttribute","connect","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","preprocessorFunc","priority","processorFunc","registerPostUpdate","postUpdateFunc","getCoordinateSystemDimensions","coordSysCreator","layoutFunc","visualFunc","registerLoading","loadingFx","setCanvasCreator","$override","mapName","getMap","dataTool","___ec_export","_core","textContain","textHelper","arrayJoin","NONE","mathRound","degree","round4","isAroundZero","pathHasFill","isText","pathHasStroke","svgEl","attrXLink","setAttributeNS","bindStyle","strokeWidth","strokeScale","miterLimit","pathDataToString","dataLength","cmdStr","nData","dThetaPositive","isCircle","large","svgPath","__svgEl","pathStr","svgTextDrawRectText","svgImage","HTMLImageElement","dw","dh","__imageSrc","svgText","tmpRect","normalizeTextStyle","textSvgEl","__textSvgEl","distance","DEFAULT_FONT","getVerticalAlignForSvg","lineHeight","adjustTextPositionOnRect","textLines","nTextLines","textAnchor","__text","__textFont","tspanList","__tspanList","tspan","createTextNode","scaleAndAdd","lenSquare","lengthSquare","div","dot","distanceSquare","distSquare","negate","lerp","LRU","kCSSColorTable","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","setRgba","copyRgba","colorCache","lastRemovedArr","putToCache","colorStr","rgbaArr","put","cached","op","ep","fname","substr","hsla2rgba","iv","hsla","rgba2hsla","H","S","G","B","vMin","vMax","deltaR","deltaG","deltaB","fastLerp","normalizedValue","leftIndex","rightIndex","leftColor","rightColor","dv","fastMapToColor","fullOutput","mapToColor","modifyHSL","modifyAlpha","arrColor","WhiskerPath","pts","WhiskerBox","styleUpdater","_createContent","whiskerBoxProto","transInit","makeWhiskerEndsShape","ends","WhiskerBoxDraw","whiskerBoxDrawProto","symbolEl","Gradient","findPointFromSeries","globalListener","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","dataByCoordSys","tooltipOption","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","coordSysAxesInfo","buildTooltipModel","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","globalTooltipModel","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","dataByAxis","seriesDefaultHTML","valueLabel","getValueLabel","seriesDataIndices","valueLabelOpt","idxItem","dataParams","getAxisRawValue","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","defaultHtml","asyncTicket","tooltipOpt","subTooltipModel","formatTpl","cbTicket","contentSize","vAlign","calcTooltipPosition","refixTooltipPosition","isCenterAlign","confineTooltipPosition","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","newIdxItem","modelCascade","resultModel","gapH","gapV","getOuterSize","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","domWidth","domHeight","rectWidth","rectHeight","clazzUtil","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","doGet","getParent","getParentMethod","parsePath","thisParentModel","Ctor","setReadOnly","customizeGetParent","enableClassExtend","Single","singles","actionTypes","handleRootToNode","targetInfo","retrieveTargetInfo","originViewRoot","getViewRoot","aboveViewRoot","resetViewRoot","easingFuncs","_life","_initialized","onrestart","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","_createPolyline","polylineProto","_updateCommonStl","hoverLineStyle","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","rangeInfo","getRangeInfo","cellWidth","getCellWidth","cellHeight","getCellHeight","weeks","allDay","SymbolDraw","EffectSymbol","_symbolDraw","effectSymbolDraw","HeatmapLayer","getIsInPiecewiseRange","dataSpan","lastIndex","getIsInContinuousRange","isGeoCoordSys","visualMapOfThisSeries","targetSeries","_renderOnCartesianAndCalendar","_renderOnGeo","itemStyleQuery","hoverItemStyleQuery","labelQuery","hoverLabelQuery","coordSysType","dataToRect","contentShape","rawValue","inRangeVisuals","targetVisuals","outOfRangeVisuals","hmLayer","_hmLayer","roamTransform","isInRange","getNormalizer","getColorMapper","curveTool","v3","v2DistSquare","intersectCurveCircle","curvePoints","radiusSquare","_t","next","nextDiff","tmp0","quadraticSubdivide","pts2","__original","originalPoints","globalCoord","AxisPointerModel","snap","triggerTooltip","shadowStyle","axisModelCreator","AxisModel","gridId","getAxisType","extraOption","_roamHelper","updateCenterAndZoom","seriesGroup","interactionMutex","pointerChecker","_opt","mousedownHandler","mousedown","mousemoveHandler","mousemove","mouseupHandler","mouseup","mousewheelHandler","mousewheel","pinchHandler","controlType","disable","isDragging","isPinching","_pinching","notLeftMouse","checkKeyBinding","gestureEvent","isTaken","wheelDelta","roamController","_vector","v2Create","mathPow","EPSILON_NUMERIC","THREE_SQRT","ONE_THIRD","_v0","_v1","_v2","onet","cubicDerivativeAt","cubicRootAt","roots","t1","disc","K","discSqrt","Y1","Y2","T","ASqrt","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","prev","d1","d2","quadraticRootAt","quadraticExtremum","divider","quadraticProjectPoint","BaseAxisPointer","viewHelper","cartesianAxisHelper","CartesianAxisPointer","makeElOption","elOption","axisPointerModel","axisPointerType","otherExtent","getCartesian","getGlobalExtent","pixelValue","buildElStyle","pointerOption","pointerShapeBuilder","graphicKey","buildCartesianSingleLabelElOption","getHandleTransform","labelMargin","getTransformedPosition","updateHandleTransform","currPosition","cursorOtherValue","cursorPoint","tooltipOptions","targetShape","makeLineShape","getAxisDimIndex","shadow","makeRectShape","registerAxisPointerClass","fixClipWithShadow","unitX","unitY","ZText","MARK_UNUSED","MARK_USED","Definable","svgRoot","tagNames","markLabel","_svgRoot","_tagNames","_markLabel","nextId","getDefs","isForceCreating","defs","getElementsByTagName","insertBefore","firstChild","addDom","removeDom","getDoms","doms","tagName","tags","markAllUnused","that","markUsed","removeUnused","getSvgProxy","displayable","getTextSvgElement","getSvgElement","Overlay","BMapCoordSys","_bmap","_projection","BMap","MercatorProjection","createOverlayCtor","_root","initialize","getPanes","labelPane","lngLatToPoint","Point","px","pointToOverlayPixel","overlayPixelToPoint","prepareCustoms","bmapCoordSys","bmapModel","__bmap","bmapRoot","overlay","addOverlay","centerAndZoom","SingleAxis","_init","axisPointerEnabled","_adjustAxis","_updateAxisTransform","coordBase","extentSum","toLocalCoord","getAxes","getTooltipAxes","baseAxes","coordToData","positiveBorderColorQuery","negativeBorderColorQuery","positiveColorQuery","negativeColorQuery","FunnelPiece","funnelPieceProto","opacityAccessPath","FunnelView","funnelPiece","GaugeSeries","dataOpt","offsetCenter","dev","dataSelectableMixin","MapSeries","needsDrawMap","_fillOption","getMapType","seriesNames","otherIndex","originalData","showLegendSymbol","dataRangeHoverLink","featureManager","saveAsImageLang","SaveAsImage","unusable","proto","$a","download","href","MouseEvent","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","charCodeAt","blob","Blob","tab","write","evt","bubbles","cancelable","dispatchEvent","getTooltipMarker","_clazz","colorPaletteMixin","mergeLayoutParam","inputPositionParams","themeSubType","hasClass","getTheme","getDefaultOption","fillDataTextStyle","newSeriesOption","dataDimToCoordDim","dataDim","multipleSeries","formatArrayValue","vertially","dimItem","tooltipName","tooltipDims","otherDimToDataDim","setEachItem","otherDims","dimType","valStr","colorEl","getAxisTooltipData","smoothSpline","smoothBezier","controlPoints","cp2","AXIS_DIMS","COORDS","isCoordSupported","coordType","createNameEach","capitalNames","capitalAttrs","nameObj","capital","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","sourceNode","existsLink","edgeType","absorb","processSingleNode","isNodeAbsorded","isLinked","hasLink","edgeId","themeRiverLayout","baseY0","layerPoints","singleLayer","base","computeBaseline","baseLine","ky","layerIndex","layerNum","pointNum","sums","temp","colorList","getBorderLineDash","ATTR","dataZoomInfo","store","giveStore","theDataZoomId","theCoordId","dataZoomInfos","cleanStore","createController","controllerParams","mergeControllerParams","newRecord","onPan","onZoom","wrapAndDispatch","getRange","typePriority","true","move","false","oneType","r1","r2","r3","r4","_forceHelper","_simpleLayoutHelper","_circularLayoutHelper","graphSeries","preservedPoints","forceModel","initLayout","nodeDataExtent","edgeDataExtent","repulsion","edgeLength","rep","fixed","getEdgeByIndex","n1","n2","forceInstance","gravity","oldStep","getNodeByIndex","stopped","Cartesian2D","Axis2D","ifAxisCrossZero","isAxisUsedInTheGrid","rotateTextRect","rotateRadians","boundingBox","plain","beforeWidth","beforeHeight","afterWidth","afterHeight","rotatedRect","getLabelUnionRect","axisLabelModel","labelCount","unrotatedSingleRect","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","gridProto","fixAxisOnZero","axesMap","otherAxisDim","canNotOnZeroToAxis","updateAxisTransfrom","axisExtentSum","_updateScale","ignoreContainLabel","axesList","adjustAxes","labelUnionRect","axesMapOnDim","coordList","getCartesians","_findConvertTarget","coordsList","axisPositionUsed","axesCount","createAxisCreator","addAxis","isCartesian2D","findAxesModels","otherAxes","axesTypes","grids","SankeyShape","cpx1","cpy1","cpx2","cpy2","halfExtent","curvature","n1Layout","n2Layout","edgeLayout","v2Equal","mapStyle","Pattern","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","config","motionBlur","lastFrameAlpha","initContext","__currentValues","createBackBuffer","clearAll","clearColorGradientOrPattern","haveMotionBLur","clearRect","__canvasGradient","getCanvasPattern","save","fillRect","globalImageCache","findExistImage","newImageOrSrc","cachedImgObj","hostEl","cbPayload","__zrImageSrc","pendingWrap","pending","imageOnLoad","__cachedImgObj","_listComponent","makeBackground","_contentGroup","_backgroundEl","viewportSize","legendDrawnMap","selectMode","getSeriesByName","legendSymbolType","_createItem","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","eachRawSeries","newline","inactiveColor","itemIcon","legendGlobalTooltipModel","hitRect","formatterParams","legendIndex","CATEGORY_DEFAULT_VISUAL_INDEX","_normalizeData","normalizers","visualHandler","visualHandlers","_doMap","normalizeVisualRange","preprocessForPiecewise","preprocessForSpecifiedCategory","normalized","makeApplyVisual","isNormalized","doMapCategory","returnRGBArray","parsedVisual","linear","piecewise","getSpecifiedVisual","doMapFixed","colorHue","makePartialColorVisualHandler","colorSaturation","colorLightness","colorAlpha","makeDoMap","symbolCfg","doMapToArray","hasSpecialVisual","originIndex","categoryMap","visualArr","setVisualToOption","doNotNeedPair","applyValue","sourceExtent","addVisualHandler","eachVisual","mapVisual","isPrimary","newVisual","newVal","hasVisual","types","type1","type2","dependsOn","visualType1","visualType2","findClosestWhenOutside","possibleI","pieceValue","updatePossible","newAbs","isDomLevel2","MOUSE_EVENT_REG","calculate","defaultGetZrXY","layerX","layerY","clientX","clientY","isTouch","targetTouches","changedTouches","zrDelta","button","which","attachEvent","detachEvent","stopPropagation","cancelBubble","returnValue","SMOOTH","ParallelView","_dataGroup","_renderForNormal","dataGroup","updateElCommon","newDataIndex","addEl","oldDataIndex","createLinePoints","isEmptyValue","seriesStyleModel","active","inactive","UNDEFINED","globalObj","dataCtors","float","Float64Array","Int32Array","ordinal","TRANSFERABLE_PROPERTIES","transferProperties","__wrappedMethods","DefaultDataProvider","dataArray","_array","pure","getItem","dimensionInfos","dimensionName","dimensionInfo","coordDimIndex","_dimensionInfos","_storage","_nameList","_idList","_optionModels","_visual","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","originalStorage","dimStore","isDataArray","nameDimIdx","dimensionInfoMap","idList","nameRepeatCount","DataCtor","dimStorage","stackedValue","dimData","dimExtent","rawDataIndex","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","rawIdx","dimSize","filterSelf","tmpRetValue","retValue","downSample","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","prefix","itemVisual","setItemDataAndSeriesIndex","dimensionInfoList","injectFunction","originalMethod","v2Distance","interpolate","isLoop","segs","w2","w3","TYPE_DELIMITER","IS_CONTAINER","MEMBER_PRIFIX","checkClassType","RootClass","mandatoryMethods","$constructor","superClass","ExtendedClass","enableClassManagement","entity","makeContainer","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","getAllClassMainTypes","hasSubTypes","registerWhenExtend","originalExtend","ignoreSize","subtext","subtarget","subtextStyle","titleModel","subtextStyleModel","textBaseline","subText","subTextEl","sublink","groupRect","layoutOption","alignStyle","createParallelIfNeeded","mergeAxisOptionFromParallel","hasParallelSeries","axisOption","parallelOption","axisPointerModelHelper","_axisPointer","fixValue","updateAxisPointer","disposeAxisPointer","axisView","forceRender","getAxisPointerClass","getAxisPointerModel","axisPointerClazz","clazz","timelineOpt","compatibleEC2","ec2Types","transferItem","controlStyle","itemStyleEmphasis","labelNormal","excludeLabelAttr","_labelInterval","legendModels","findComponents","categoryNames","mapSymbolLayout","mapDataStatistic","createDataSelectAction","effectType","showEffectOn","rippleEffect","barItemStyle","coordinateSystemType","_render","isHorizontalOrRadial","elementCreator","removeRect","removeSector","animateProperty","animateTarget","isRadial","fixedLineWidth","getLineWidth","signX","signY","isPolar","getBarItemStyle","labelPositionOutside","rawLayout","_curve","containStroke","_l","registerSubTypeDefaulter","axisDataLen","scaleType","originalExtent","setBlank","tickCoords","axisRotate","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","guid","Handler","Storage","Painter","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","delInstance","rendererType","vml","handerProxy","_needsRefresh","oldDelFromStorage","delFromStorage","oldAddToStorage","addToStorage","removeSelfFromZr","addSelfToZr","addRoot","delRoot","zLevel","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","eventHandler","EffectPolyline","_lastFrame","_lastFramePercent","effectPolylineProto","_points","accLenArr","_offsets","_length","offsets","PolarAxisPointer","animationThreshold","coordValue","labelPos","getLabelPosition","buildLabelElOption","innerTextLayout","makeSectorShape","geoCoordMap","Russia","United States","United States of America","_buildAxes","_buildSplitLineAndArea","axisBuilders","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","ticksRadius","getColorIndex","realSplitNumber","axesTicksPoints","prevPoints","areaOrLine","areaOrLineColorList","themeRiverVisual","componentUtil","boxLayoutMixin","arrayPush","getUID","themeModel","newCptOption","optList","Class","getDependencies","deps","enableSubTypeDefaulter","enableTopologicalTravel","v2ApplyTransform","TransformDummy","_roamTransform","setBoundingRect","setViewRect","centerCoord","_updateCenterAndZoom","getDefaultCenter","rawRect","viewTransformMatrix","defaultCenter","_layoutHelper","_oldTree","symbolNeedsDraw","updateNode","removeNode","getTreeNodeStyle","virtualRoot","sourceSymbolEl","sourceLayout","sourceOldLayout","rawX","__radialOldRawX","rawY","__radialOldRawY","targetLayout","__radialRawX","__radialRawY","isLeft","rootLayout","__edge","getEdgeShape","radialCoor1","radialCoor2","radialCoor3","radialCoor4","BUILTIN_OBJECT","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","TYPED_ARRAY","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","objToString","arrayProto","nativeForEach","nativeFilter","nativeSlice","nativeMap","nativeReduce","typeStr","isPrimitive","isDom","targetProp","sourceProp","isBuiltInObject","mergeAll","targetAndSources","baseClazz","clazzPrototype","F","memo","find","nodeType","ownerDocument","value0","value1","retrieve3","value2","primitiveKey","HashMap","HASH_MAP_PREFIX","HASH_MAP_PREFIX_LENGTH","prefixedKey","removeKey","eachAfter","eachBefore","newSnapshot","snapshot","head","targetList","_targetList","_selectTargetMap","targetMap","select","unSelect","toggleSelected","nameRotate","nameTruncate","ellipsis","placeholder","showMinLabel","showMaxLabel","alignWithLabel","timeAxis","logAxis","logBase","idxMap","preprocessOption","fromName","toName","LinesSeries","effect","trailLength","largeThreshold","autoPositionValues","targetValue","visualCluster","visualObj","controllerVisuals","visualMapping","positionElement","generateNodeKey","_directed","_nodesMap","_edgesMap","graphProto","Node","inEdges","outEdges","hostGraph","Edge","isDirected","nodesMap","edgesMap","getEdge","breadthFirstTraverse","startNode","__visited","queue","currentNode","otherNode","inDegree","outDegree","createGraphDataProxyMixin","hostName","getGraphicEl","LineGroup","isPointNaN","lineNeedsDraw","_ctor","lineDrawProto","oldLineData","_lineData","LineCtor","lineGroup","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","asin","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_mapDraw","dataViewLang","BLOCK_SPLITER","ITEM_SPLITER","groupSeries","seriesGroupByCategoryAxis","otherSeries","meta","other","assembleSeriesWithCategoryAxis","tables","valueAxisDim","headers","lines","assembleOtherSeries","vals","getContentFromModel","trim","isTSVFormat","block","itemSplitRegex","parseTSVContents","tsv","tsvLines","header","parseListContents","hasName","parseContents","blockMetaList","blocks","blockMeta","axisKey","DataView","tryMergeDataOption","readOnly","optionToContent","contentToOption","textColor","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","viewMain","textarea","htmlOrDom","buttonContainer","buttonStyle","closeButton","refreshButton","keyCode","selectionStart","selectionEnd","substring","newSeriesOptList","needDrawText","renderText","getStroke","actionInfos","polarOptArr","polarNotRadar","polarOpt","polarIndex","radarIndex","foundAxisModel","layoutBox","boxLayoutParams","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","setImmediate","msSetImmediate","webkitSetImmediate","mozSetImmediate","oSetImmediate","postMessage","callbacks","setZeroTimeout","stopImmediatePropagation","clearImmediate","msClearImmediate","webkitClearImmediate","mozClearImmediate","oClearImmediate","fillText","minFontSize","hanWidth","mWidth","measureText","shuffleArray","WordCloud","elements","getElementById","weightFactor","drawMask","maskColor","maskGapWidth","wait","abortThreshold","abort","classes","hover","click","factor","thetaPrime","ngx","ngy","maxRadius","escapeTime","maskRectWidth","random_hsl_color","getTextClasses","hovered","interactive","infoGrid","getInfoGridFromMouseTouchEvent","currentTarget","eventX","eventY","wordcloudhover","wordcloudclick","pointsAtRadius","getPointsAtRadius","exceedTime","getRotateDeg","getTextInfo","word","weight","rotateDeg","debug","mu","fcanvas","fctx","willReadFrequently","fw","fh","boxWidth","boxHeight","fgw","fgh","fillTextOffsetX","fillTextOffsetY","cgh","cgw","strokeRect","occupied","bounds","singleGridLoop","gw","gh","fillTextWidth","fillTextHeight","canFitText","py","drawText","attributes","transformRule","styleRules","whiteSpace","webkitTransform","msTransform","transformOrigin","webkitTransformOrigin","msTransformOrigin","cssProp","textContent","attribute","className","fillGridAt","updateGrid","putWord","tryToPutWordAtPoint","gxy","rot","sendEvent","createEvent","initCustomEvent","loopingFunction","stoppingFunction","bctx","bgPixel","webkitTapHighlightColor","stopInteraction","listener","anotherWordCloudStart","canceled","positions","fromPoints","bbWidth","bbHeight","viewCoordSys","BrushController","history","dataZoomLang","DATA_ZOOM_ID_BASE","DataZoom","_brushController","_onBrush","mount","_isZoomActive","featureModel","updateZoomBtnStatus","updateBackBtnStatus","handlers","unmount","nextActive","dataZoomSelectActive","retrieveAxisSetting","setIconStatus","zoomActive","include","setPanels","makePanelOpts","xAxisDeclared","yAxisDeclared","enableBrush","brushStyle","updateCovers","matchOutputRanges","coordRange","setBatch","findDataZoom","found","dzModel","dataZoomOpts","toolboxOpt","feature","dataZoomOpt","addForAxis","axisIndicesName","givenAxisIndices","forEachComponent","$fromToolbox","coordSysLists","coordIndex","LinePath","SYMBOL_CATEGORIES","makeSymbolTypeKey","symbolCategory","setLinePoints","updateSymbolAndLabelBeforeLineUpdate","symbolFrom","symbolTo","invScale","pointAt","toPos","tangent","tangentAt","__position","halfPercent","__verticalAlign","__textAlign","_createLine","lineProto","beforeUpdate","visualOpacity","defaultLabelColor","normalText","emphasisText","rawVal","labelStyle","linePath","globalDefault","colorPaletteMinin","OPTION_INNER_KEY","_optionManager","baseOption","mountOption","initBase","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","componentsMap","newCptTypes","visitComponent","newCptOptionList","mapResult","mappingToExists","makeIdAndName","keyInfo","determineSubType","exist","getComponentsByTypes","resultItem","ComponentModelClass","_seriesIndices","createSeriesIndices","componentOption","topologicalTravel","isIdInner","cpts","isIdArray","cpt","isNameArray","filterBySubType","queryCond","getQueryCond","doFilter","q","indexAttr","idAttr","nameAttr","queryResult","oneSeries","assertSeriesInitialized","rawSeriesIndex","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","mergeTheme","themeItem","existComponent","graphicUtil","graphicOption","GraphicModel","parentId","_elOptionsToUpdate","existList","flattenedList","_flatten","mappingResult","elOptionsToUpdate","newElOption","setKeyInfoToNewElOption","mergeNewElOptionToExist","setLayoutInfoToExist","$action","optionList","parentOption","useElOptionsToUpdate","els","createEl","targetElParent","graphicType","Clz","__ecGraphicId","removeEl","existEl","existElParent","getCleanedElOption","LOCATION_PARAMS","isSetLoc","isSet","existElOption","newElParentOption","newElOptCopy","copyLayoutParams","existItem","hv","_elMap","_lastGraphicModel","graphicModel","_clear","_updateElements","_relocate","rootGroup","elOptionStyle","elOptionCleaned","__ecGraphicWidth","__ecGraphicHeight","elOptions","parentEl","containerInfo","boundingMode","bounding","straightLineProto","bezierCurveProto","isLine","defaultSymbolType","itemSymbolType","itemSymbolSize","defaultKeyGetter","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","existence","_add","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","nest","nodeWidth","nodeGap","computeNodeValues","filteredNodes","iterations","layoutSankey","computeNodeBreadths","computeNodeDepths","computeEdgeDepths","getEdgeValue","remainNodes","nextNode","kx","lenj","moveSinksRight","scaleNodeBreadths","nodesByBreadth","sortKeys","entries","initializeNodeDepth","resolveCollisions","relaxRightToLeft","relaxLeftToRight","kyArray","ky0","nodeDy","edgeDy","ascendingDepth","nodeY","weightedTarget","weightedSource","ascendingTargetDepth","ascendingSourceDepth","updateMarkerLayout","markPointModel","mpModel","symbolDrawMap","symbolDraw","sizeCalculable","CalendarModel","cellSize","dayLabel","firstDay","monthLabel","yearLabel","mergeAndNormalizeLayoutParams","raw","hvIdx","echartsAPIList","chartInstance","parallelAxisModel","setActiveIntervals","intervals","Parallel","fixExtentWithBands","nTick","normalizedExtent","bands","getBands","getLabelsCoords","getRotate","LegendModel","_updateData","hasSelected","availableNames","_availableNames","borderRadius","normalizeRadian","OTHER_DIMS","sysDims","dataDimNameMap","coordDimNameMap","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","resultDimIdx","applyDim","availDimIdx","sysDimIndex","sysDimItemOtherDims","extraPrefix","genName","extraFromZero","isExtraCoord","fromZero","pointsConverter","svgURI","createElementNS","x_","targetNode","targetNodeId","getPathToRoot","viewRoot","viewPath","wrapTreePathInfo","treePathInfo","nodeDataIndex","createGraphFromNodeEdge","GraphSeries","_categoriesData","_updateCategoriesData","categoriesModels","_categoriesModels","categoryIdx","categoryModel","edgeLabelModel","fakeSeriesModel","edgeGetParent","getEdgeData","sourceName","targetName","focusNodeAdjacency","circular","rotateLabel","layoutAnimation","edgeSymbol","edgeSymbolSize","nodeScaleRatio","polyHelper","ORIGIN_METHOD","RATE","THROTTLE_TYPE","currCall","debounceNextCall","lastCall","lastExec","thisDelay","thisDebounce","debounceDelay","fnAttr","originFn","lastThrottleType","lastRate","markerModelKey","DELIMITER","subTypeDefaulters","defaulter","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","noEntryList","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","targetNameList","targetNameSet","currComponentType","currVertex","isInTargetNameSet","removeEdgeAndAdd","removeEdge","succComponentType","platform","progressiveThreshold","shadowTemp","orignalBrush","modified","clipPaths","roundNumber","_intervalPrecision","thisExtent","getIntervalPrecision","intervalScaleGetTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","wrap-class","view-class","gutter","histogramChartData","histogramChartSettings","mark-line","histogramChartMarkLine","lineChartData","lineChartSettings","mark-point","lineChartMarkPoint","pieChartData","pieChartSettings","ringChartData","ringChartSettings","vue_runtime_esm","use","lib_default","Chartsvue_type_script_lang_js_","日期","直接访问","邮件营销","联盟广告","视频广告","搜索引擎","百度","谷歌","必应","其他","广告","成本","利润","占比","Form_Chartsvue_type_script_lang_js_","componentNormalizer","__file","__webpack_exports__","roundingErrorFix","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","fixRoundingError","__fixMax","err","originalVal","dataColor","radarLayout","colorUtil","markAreaTransform","maModel","lt","rb","ltCoord","rbCoord","markAreaFilter","getSingleMarkerEndPoint","dimPermutations","areaData","markAreaModel","areaGroupMap","polygonGroup","__data","ToolboxModel","featureOpt","featureName","Feature","showTitle","iconStyle","_zrender","ITEM_STYLE_NORMAL","seriesItemStyleModel","levelItemStyles","travelTree","designatedVisual","viewRootAncestors","nodeModel","nodeLayout","isInView","thisNodeColor","nodeItemStyleModel","levelItemStyle","visuals","buildVisuals","borderColorSaturation","calculateColor","calculateBorderColor","buildVisualMapping","childVisual","visualName","getValueVisualDefine","rangeVisual","getRangeVisual","visualMin","visualMax","colorMappingBy","__drColorMappingBy","childVisuals","mappingType","mapIdToIndex","hasXOrY","hasXAndY","markerTypeCalculatorWithExtent","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","markerTypeCalculator","average","baseDataDim","RadiusAxis","dataToRadius","radiusToData","_viewRoot","clipWindow","squareRatio","leafDepth","drillDownIcon","zoomToNodeRatio","nodeClick","breadcrumb","emptyItemWidth","gapWidth","visualDimension","visibleMin","childrenVisibleMin","completeTreeValue","setDefault","setLayoutInfo","idIndexMap","_idIndexMap","_idIndexMapCount","childValue","thisValue","globalColorList","hasColorDefine","modelColor","level0","mapLocation","safeLimit","barLayoutGrid","unitAngle","x12","y12","_a","_b","_s","adjustEdge","nodeOpacityPath","lineOpacityPath","getItemOpacity","opacityPath","fadeOutItem","opacityRatio","fadeInItem","_lineDraw","_firstRender","_nodeScaleRatio","_getNodeGlobalScale","_updateNodeAndLinkScale","_layoutTimeout","_startForceLayoutIteration","warmUp","_layouting","setFixed","setUnfixed","__focusNodeAdjacency","__unfocusNodeAdjacency","edgeDataIndex","circularRotateLabel","adjacentEdge","unfocusNodeAdjacency","nodeScale","groupScale","groupZoom","roamZoom","lb","rt","maxX","maxY","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","dataAll","filteredIdx","singleDataColor","mask","animateShape","v2Min","v2Max","v2Scale","v2Add","v2Clone","v2Sub","constraint","prevPoint","nextPoint","cps","d0","cp0","PATH_BORDER_WIDTH","PATH_GAP_WIDTH","PATH_UPPER_LABEL_SHOW","PATH_UPPER_LABEL_HEIGHT","ecWidth","ecHeight","seriesOption","containerWidth","containerHeight","rootRect","viewAbovePath","rootSize","estimateRootSize","viewRootLayout","squarify","upperHeight","treeRoot","calculateRootPosition","prunning","hideChildren","thisLayout","halfGapWidth","upperLabelHeight","getUpperLabelHeight","layoutOffset","layoutOffsetUpper","totalArea","initChildren","rowFixedLength","best","score","worst","orderBy","overLeafDepth","statistic","filterByThreshold","isLeafRoot","orderedChildren","deletePoint","areaMax","areaMin","squareArea","idx0WhenH","idx1WhenH","rowOtherLength","rowLen","wh1","remain","modWH","wh0","currNode","defaultSize","viewArea","currNodeValue","defaultPosition","targetCenter","clipRect","nodeInViewAbovePath","isAboveViewRoot","childClipRect","STACK_PREFIX","getLayoutOnAxis","widthAndOffsets","doCalBarWidthAndOffset","calBarWidthAndOffset","seriesInfoList","seriesInfo","lastCoord","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","linkedNodesFinder","effectedModels","ClippathManager","updateDom","clipPathEl","svgProxy","cloneNode","_textDom","RadarSeries","Triangle","Diamond","Pin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","inBundle","proxySymbol","symbolPathSetColor","innerColor","symbolStyle","symbolShape","__isEmptyBrush","keepAspect","lineContain","quadraticContain","LargeLineShape","isPolyline","seg","findDataIndex","LargeLineDraw","_lineEl","largeLineProto","lineEl","funnelLayout","take","resourceKey","userKey","getStore","release","uKey","mapModel","_renderSymbols","fullData","mainSeries","fullIndex","polygonGroups","__mapOriginalZ2","roundRectHelper","VALID_TEXT_ALIGN","VALID_TEXT_VERTICAL_ALIGN","middle","normalizeStyle","makeFont","renderRichText","renderPlainText","setCtx","contentBlock","__textCotentBlock","parsePlainText","outerHeight","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","adjustTextY","needDrawBg","needDrawBackground","boxX","adjustTextX","drawBackground","getTextXForPadding","getFill","strokeText","parseRichText","drawRichText","contentWidth","lineTop","token","tokens","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","tokenStyle","isLineHolder","isPlainBg","onBgImageLoaded","blockHeiht","PointerPath","parsePosition","formatLabel","GaugeView","posInfo","_renderMain","axisLineModel","angleRangeSpan","prevEndAngle","axisLineWidth","getColor","_renderTicks","_renderPointer","_renderTitle","_renderDetail","minVal","maxVal","tickModel","subSplitNumber","splitLineLen","tickLen","subStep","splitLineStyle","tickLineStyle","tickLine","detailModel","linesLayout","linesVisual","vmlCore","comma","imageTransformPrefix","Z2","ZLEVEL_BASE","Z_BASE","initRootElStyle","coordsize","coordorigin","encodeHtmlAttribute","rgb2Str","append","getZIndex","setColorAndOpacity","getColorAndAlpha","updateFillNode","zrEl","gradientType","focus","expansion","cs1","cs2","colorAndAlphaList","colorAndAlpha","color1","color2","opacity1","opacity2","focusposition","updateStrokeNode","dashstyle","updateFillAndStroke","vmlEl","isFill","createNode","nPoint","brushVML","vmlRoot","_vmlEl","needTransform","strokeEl","zIndex","removeRectText","onRemove","onAdd","appendRectText","isImage","ow","oh","_imageSrc","_imageWidth","_imageHeight","imageRuntimeStyle","runtimeStyle","oldRuntimeWidth","oldRuntimeHeight","sw","sh","hasCrop","doc","vmlElStyle","hasRotation","transformFilter","imageEl","_imageEl","cropEl","_cropEl","imageELStyle","tmpImage","overflow","cropElStyle","filterStr","textMeasureEl","DEFAULT_STYLE_NORMAL","fontStyleCache","fontStyleCacheCount","MAX_FONT_CACHE_SIZE","fontEl","getFontStyle","fontString","variant","fontVariant","family","ex","offsetWidth","fromTextEl","textLine","textPathEl","skewEl","textVmlEl","_textVmlEl","nextSibling","textpathok","textVmlElStyle","string","polygonContain","getLineSelectors","lineIntersectPolygon","xyIndex","inLineRange","layoutRange","lx","ly","l2x","l2y","lineIntersect","a1x","a1y","a2x","a2y","b1x","b1y","b2x","b2y","determinant","nearZero","namenda","miu","v4","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","extraCssText","crossStyle","AngleAxis","angleToData","processSingleVisualMap","prepareVisualMeta","visualMetaList","visualMeta","resultVisual","opacityMap","LargeSymbolDraw","_normalSymbolDraw","_largeSymbolDraw","largeSymbolDraw","normalSymbolDraw","someVectorAt","isTangent","DATA_NAME_INDEX","ThemeRiverSeries","fixData","rawDataLength","dataByName","layData","dataList","largestLayer","timeValue","keyIndex","lenCount","indexArr","comparer","index1","index2","nestestValue","nearestIdx","theValue","htmlName","htmlValue","hasEffect","isLarge","_hasEffet","_isPolyline","_isLarge","isSvg","_lastZlevel","DEFAULT_TOOLBOX_BTNS","isNew","brushComponents","brushComponentSpecifiedBtns","brushOpt","tbs","toolboxFeature","toolboxBrush","brushTypes","removeDuplicate","flag","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","displayList","_updateAndAddDisplayable","afterUpdate","userSetClipPath","currentClipPath","parentClipPath","_children","__storage","addChildrenToStorage","delChildrenFromStorage","_renderList","displayableSortFunc","brushHelper","elementList","fromAxisAreaSelect","oldAxisGroup","_axisGroup","coordSysModel","areaSelectStyle","getAreaSelectStyle","areaWidth","axisLayout","getAxisLayout","builderOpt","strokeContainThreshold","_refreshBrushController","getCoverInfoList","extentLen","enableGlobalPan","panelId","makeRectPanelClipPath","isTargetByCursor","makeRectIsTargetByCursor","getLinearBrushOtherExtent","makeLinearBrushOtherExtent","removeOnClick","coverInfoList","coverInfo","parallelAxisId","activeIntervals","componentProto","zrLog","GradientManager","addWithoutUpdate","svgElement","gradient","splitList","Breadcrumb","animationUtil","DRAG_THRESHOLD","PATH_LABEL_NOAMAL","PATH_LABEL_EMPHASIS","PATH_UPPERLABEL_NORMAL","PATH_UPPERLABEL_EMPHASIS","Z_BG","Z_CONTENT","getItemStyleEmphasis","getItemStyleNormal","createStorage","_breadcrumb","_state","thisStorage","reRoot","rootNodeGroup","nodeGroup","_giveContainerGroup","renderResult","_doRender","renderFinally","_doAnimation","_resetController","_renderBreadcrumb","thisTree","oldTree","lastsForAnimation","oldStorage","willInvisibleEls","doRenderNode","renderNode","dualTravel","willDeleteEls","clearStorage","thisViewChildren","oldViewChildren","parentGroup","sameTree","getKey","processNode","thisNode","oldNode","storageName","delEls","__tmWillDelete","animationWrap","createWrap","__tmNodeWidth","__tmNodeHeight","targetX","targetY","old","fadein","_clearController","findTarget","_rootToNode","_zoomToNode","linkTarget","onSelect","bgEl","thisWidth","thisHeight","thisInvisible","thisRawIndex","oldRawIndex","isParent","itemStyleNormalModel","itemStyleEmphasisModel","giveGraphic","bg","renderContent","useUpperLabel","visualBorderColor","emphasisBorderColor","upperLabelWidth","prepareText","contentHeight","__tmWillVisible","upperLabelRect","iconChar","emphasisLabelModel","minChar","lasts","prepareAnimationWhenHasOld","calculateZ","__tmDepth","__tmStorageName","prepareAnimationWhenNoOld","lastCfg","parentOldX","parentOldY","parentOldBg","zInLevel","zb","getAxisLineShape","rExtent","getRadiusIdx","ticksAngles","_axisLine","_axisTick","tickAngle","_axisLabel","categoryData","labelsAngles","labelTextAlign","labelTextVerticalAlign","prevAngle","ecHelper","_List","_Model","_Axis","_env","_parseGeoJson","ecUtil","setAreas","adjustSingleSide","shiftDown","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","hasLabelRotate","labelLineLen2","singleAxisHelper","ifIgnoreOnTick","selfBuilderAttr","SingleAxisView","lineInterval","Animatable","animators","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","seriesModelMixin","CandlestickSeries","defaultValueDimensions","animationUpdate","COORD_CONVERTS","INCLUDE_FINDER_MAIN_TYPES","targetInfoList","_targetInfoList","foundCpts","targetInfoBuilders","builder","formatMinMax","includeMainTypes","setOutputRanges","coordRanges","coordConvert","__rangeOffset","diffProcessor","xyMinMax","findTargetInfo","coordSyses","rangeOffset","getScales","getDefaultBrushType","getPanelRect","defaultBrushType","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","panelRectBuilder","geoModels","axisConvert","rangeOrCoordRange","xminymin","xmaxymax","axisNameIndex","axisDiffProcessor","refer","scales","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","sizeOrigin","decode","UTF8Encoding","encodeScale","UTF8Scale","coordinates","encodeOffsets","coordinate","decodePolygon","c2","prevX","prevY","featureObj","pieLayout","emphasisTextStyleModel","forMerge","updateController","modelId","$from","IRRELEVANT_EXCLUDES","targetCoordSysModel","topTarget","labelDims","EFFECT_RIPPLE_NUMBER","updateRipplePath","rippleGroup","effectCfg","ripplePath","effectSymbolProto","stopEffectAnimation","startEffectAnimation","effectOffset","rippleScale","updateEffectAnimation","oldEffectCfg","_effectCfg","DIFFICULT_PROPS","LargeSymbolPath","sizes","symbolProxy","symbolProxyShape","_symbolEl","largeSymbolProto","QUERY_REG","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","mediaDefault","timelineOptions","mediaList","media","singleMedia","preProcess","applyMediaQuery","realMap","aspectratio","applicatable","matched","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","Draggable","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dispatchToElement","dropTarget","lastDropTarget","_dropTarget","LiquidLayout","outlineDistance","outlineBorderWidth","showOutline","outterRadius","innerRadius","paddingRadius","isFillContainer","getOutline","wavePath","getBackground","waves","getPath","isForClipping","bouding","outlinePath","strokePath","fillPath","getWave","isInverse","oldWave","radiusX","radiusY","waterLevel","_waterLevel","setWaveAnimation","maxSpeed","defaultSpeed","cnt","speed","phaseOffset","getText","formatted","defaultLabel","textOption","outsideTextRect","insideTextRect","insColor","boundingCircle","waveElement","newWave","shapeAttrs","styleAttrs","axisTrigger","collect","realIndex","paramsSet","reals","fakeValue","layoutInput","rParam","pathContain","pathProxyForDraw","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","_fillGradient","_strokeGradient","ctxLineDash","shapeCfg","needsUpdateRect","rectWithStroke","_rectWithStroke","lineScale","localPos","dirtyPath","__clipTarget","Sub","defaultShape","thisShape","Cartesian","getAxesByScale","axisX","axisY","_dimName","_axisIndex","_valueWindow","_percentWindow","_dataExtent","_minMaxSpan","_dataZoomModel","calculateDataExtent","seriesExtent","fixExtentByAxis","isCategoryAxis","setAxisModel","isRestore","percentWindow","useOrigin","setMinMaxSpan","valueSpan","getOtherAxisModel","coordSysIndexName","foundOtherAxisModel","isCartesian","otherAxisModel","boundValue","boundPercent","dataWindow","leftOut","rightOut","thisHasValue","thisLeftOut","thisRightOut","isInWindow","getWaterPositions","curves","waveRight","seriesInvolved","coordSysMap","collectAxesInfo","collectSeriesInfo","globalAxisPointerModel","linksOption","linkGroups","coordSysKey","makeKey","axesInfoInCoordSys","baseTooltipModel","saveTooltipAxisInfo","triggerAxis","cross","tooltipAxes","fromTooltip","axisPointerShow","isHandleTrigger","makeAxisPointerModel","involveSeries","groupIndex","getLinkGroupIndex","linkGroup","mapper","tooltipAxisPointerModel","volatileOption","field","labelOption","seriesTooltipTrigger","seriesTooltipShow","seriesDataCount","linkOption","checkPropInLink","linkPropValue","axisPropValue","GRADIENT_LEVELS","Heatmap","_gradientPixels","colorFunc","_getBrush","gradientInRange","_getGradient","gradientOutOfRange","pixels","pixelLen","diffOpacity","gradientOffset","brushCanvas","_brushCanvas","gradientPixels","pixelsSingleState","Uint8ClampedArray","TOUCH_CLICK_DELAY","mouseHandlerNames","touchHandlerNames","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","pointerHandlerNames","nm","eventNameFix","processGesture","proxy","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","domHandlers","mouseout","toElement","relatedTarget","touchstart","_lastTouchMoment","touchmove","touchend","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","_handlers","HandlerDomProxy","mountHandlers","handlerNames","handlerDomProxyProto","setCursor","processedMapType","mapSymbolOffsets","subMapSeries","dimAxisMapper","_axes","_dimList","_dataCoordConvert","dimList","SankeySeries","rawDataOpt","layoutIterations","makeAction","PROXIMATE_ONE_DAY","Calendar","calendarModel","_rangeInfo","_sw","_sh","getFirstDayOfWeek","_firstDayOfWeek","getDateInfo","day","getDay","formatedDate","getNextNDay","setDate","_lineWidth","_getRangeInfo","_initRangeOption","whNames","cellNumbers","cellSizeSpecified","whGlobal","calendarRect","dayInfo","week","nthWeek","pointToDate","tl","br","bl","nthX","nthY","_getDateByWeeksAndDay","setMonth","reversed","startDateNum","endDateNum","fweek","lweek","nthDay","calendarList","calendarSeries","legendFilter","SILENT","makeEventPacket","eveType","EmptyProxy","painterRoot","_hovered","isHover","lastHovered","lastHoveredTarget","hoveredTarget","innerDom","eventArgs","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","magicTypeLang","MagicType","getIcons","availableIcons","icons","seriesOptGenreator","radioTypes","generateNewSeriesTypes","newSeriesOpt","radio","currentType","doCreateNode","urn","win","vmlInited","namespaces","zrvml","initVML","styleSheets","createStyleSheet","addRule","AxisPointerView","_updatePathDirty","vec2Min","vec2Max","v2Copy","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","getBoundingBox","ptMin","ptMax","stackedOnBBox","LinkedList","tail","linkedListProto","insert","entry","Entry","insertEntry","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","leastUsedEntry","PictorialBarSeries","previousZoom","fixX","fixY","cubic","quadratic","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","windingQuadratic","y_","windingArc","containPath","isStroke","_axesLayout","restrict","layoutAxisWithoutExpand","layoutLength","axisCount","axisNameAvailableWidth","axisLabelShow","layoutAxisWithExpand","nameTruncateMaxWidth","axisCollapseWidth","winInnerIndices","axisExpandWindow0Pos","axisExpandWindow","_updateAxesFromSeries","_makeLayoutInfo","axisBase","layoutBase","pixelDimIndex","pAxis","pLayout","axisLength","_layoutAxes","winSize","layoutExtent","positionTable","rotationTable","axisCoordToPoint","hasActiveSet","getActiveState","getSlidedAxisExpandWindow","behavior","pointCoord","triggerArea","useJump","PolarAxisModel","polarId","polarAxisDefaultExtendedOption","treemapVisual","treemapLayout","listComponentHelper","toolboxModel","featureOpts","_features","featureNames","_featureNames","processFeature","titleText","__title","needPutOnTop","topOffset","oldName","isUserFeatureName","createIconPaths","iconName","iconPaths","iconStatus","iconStyleModel","titles","parseInt10","checkParentAvailable","insertAfter","prevSibling","prepend","SVGPainter","_opts","gradientManager","clipPathManager","viewport","_viewport","_visibleList","createMethodNotSupport","_paintList","visibleList","listLen","newVisibleList","prevSvgElement","textSvgElement","_getDefs","_getSize","_width","_height","viewportStyle","whIdx","cwh","plt","prb","outerHTML","unescape","repeat","createPattern","moveAnimation","propsEqual","lastProp","lastProps","newProps","updateLabelShowHide","labelEl","getHandleTransProps","updateMandatoryProps","_group","_lastGraphicKey","_handle","_lastValue","_lastStatus","_payloadInfo","_axisModel","_axisPointerModel","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","useSnap","pointerEl","handleModel","onmousedown","_onHandleDragMove","_onHandleDragEnd","includeStyles","_moveHandleToValue","_doDispatchAxisPointer","payloadInfo","doClear","buildLabel","xDimIndex","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Charts_vue_vue_type_style_index_0_id_079fd192_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Charts_vue_vue_type_style_index_0_id_079fd192_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","BoxplotView","TimelineModel","SliderTimelineModel","checkpointStyle","playIcon","stopIcon","nextIcon","prevIcon","idStart","colorQuery","opacityQuery","restoreLang","Restore","barGrid","prepareCartesian2d","prepareGeo","prepareSingleAxis","preparePolar","prepareCalendar","ITEM_STYLE_NORMAL_PATH","ITEM_STYLE_EMPHASIS_PATH","LABEL_NORMAL","LABEL_EMPHASIS","GROUP_DIFF_PREFIX","__customPathData","__customImagePath","__customText","__customGraphicType","updateEl","targetProps","targetStyle","prepareStyleTransition","targetOpacity","styleEmphasis","oldElStyle","makeRenderItem","customSeries","prepareResult","currDataIndexInside","currItemModel","currLabelNormalModel","currLabelEmphasisModel","currLabelValueDim","currVisualColor","userAPI","barLayout","currentSeriesIndices","userParams","dataInsideLength","encode","wrapEncodeDef","currDirty","updateCache","dataDimIndex","doCreateOrUpdate","elOptionType","oldChildren","newChildren","diffChildrenByName","diffGroupChildren","processAddUpdate","processRemove","childOption","nubmerUtil","subOpts","emphasisOpt","normalOpt","subOptName","createDataFormatModel","labelProp","newCptOptions","cptOption","idMap","existCpt","idNum","batchA","batchB","mapA","mapB","makeMap","mapToArray","sourceBatch","otherMap","otherDataIndices","isData","hostObj","parsedKey","queryType","queryParam","_setting","_isBlank","childCount","_doAdd","addBefore","includeChildren","tmpMat","childRect","extremity","_baseAxisDim","addOrdinal","baseAxisDimIndex","baseAxisDim","whiskerBoxDraw","_whiskerBoxDraw","colorIdx","colorNameMap","colorPalette","doneCallback","elExistsMap","fixPosition","textWidthCache","textWidthCacheCounter","TEXT_CACHE_MAX","STYLE_REG","getRichTextRect","getPlainTextRect","halfHeight","truncateText","prepareTruncateOptions","truncateSingleLine","maxIterations","cnCharWidth","ascCharWidth","ellipsisWidth","subLength","estimateLength","charCode","getLineHeight","truncOuterHeight","truncOuterWidth","matchedIndex","pushTokens","stlPadding","truncateWidth","truncateHeight","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","paddingW","remianTruncWidth","isEmptyStr","strs","tokensLen","Chart","toggleHighlight","chartProto","elSetState","VMLPainter","vmlViewport","_vmlRoot","_vmlViewport","_firstPaint","__alreadyNotVisible","_getWidth","_getHeight","vmlViewportStyle","DEFAULT_COLOR","replacableOptionKeys","dataBound","contentColor","getTargetSeriesIndices","optionSeriesIndex","isMinMax","optDim","completeSingle","defa","completeInactive","stateExist","stateAbsent","optExist","optAbsent","completeController","symbolExists","symbolSizeExists","positionMap","directionMap","modelHelper","illegalPoint","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","coordSysItem","coordSysId","coordSysIndex","coordSysMainType","outputAxesInfo","valItem","highDownKey","lastHighlights","newHighlights","toHighlight","toDownplay","setScrollDataIndex","groupResult","groupSeriesByAxis","groupItem","calculateBase","layoutSingleSeries","boxOffsetList","boxWidthList","axisList","seriesCount","boundList","maxDataCount","boxWidthBound","availableWidth","boxGap","halfWidth","median","end1","end5","layEndLine","endCenter","MAX_PROGRESSIVE_LAYER_NUMBER","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","singleCanvas","nodeName","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layerConfig","mainLayer","_domRoot","_progressiveLayers","_hoverlayer","_hoverElements","paintAll","_startProgessive","__hoverMir","elMirror","hoverElements","hoverLayer","originalEl","_doPaintEl","_furtherProgressive","_progressiveToken","_progress","_doPaintList","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","flushProgressiveLayer","elZLevel","elFrame","__frame","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","clearLayer","imageLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","upperCaseFirst","group1","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","paramsList","seriesLen","alias","formatTplSimple","s2d","isUTC","utc","autoPlay","rewind","playInterval","_names","_initData","dataArr","idxArr","newItem","MONTH_TEXT","EN","CN","WEEK_TEXT","_tlpoints","_blpoints","_firstDayOfMonth","_firstDayPoints","rangeData","_renderDayRect","_renderLines","_renderYearText","_renderMonthText","_renderWeekText","itemRectStyleModel","addPoints","_getLinePointsOfOneWeek","_drawSplitline","_getEdgesPoints","rs","poyline","tmpD","_formatterLabel","_yearTextPositionControl","aligns","xc","yc","posPoints","yearText","_monthTextPositionControl","isCenter","termPoints","firstDayPoints","yyyy","yy","MM","monthText","_weekTextPositionControl","isStart","firstDayOfWeek","weekText","keysFunction","sortKeysFunction","keyFunction","mapObject","valuesByKey","keyValue","entriesMap","sortKeyFunction","mathAtan2","resizeGeo","leftTop","rightBottom","boxLayoutOption","useCenterAndSize","setGeoCoords","geoList","mapData","mapModelGroupBySeries","nameMapList","singleMapSeries","originRegionArr","regionsArr","dataNameMap","pp","friction","v12","nLen","repFact","extentSpan","originalDistSign","getSpanSign","extentMinSpan","realExtent","currDistSign","dataSample","orthogonalLayout","radialLayout","getStackedOnPoint","stackedOnSameSign","valueStart","baseDataOffset","stackedData","diffData","diffResult","idx1","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","nextPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","stackedOnCurrent","stackedOnNext","SingleAxisPointer","getPointDimIndex","ScrollableLegendModel","pageButtonItemGap","pageIcons","pageIconColor","pageIconInactiveColor","pageTextStyle","lineAnimationDiff","isPointsSame","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","getStackedOnPoints","xExtent","yExtent","createPolarClipShape","createClipShape","turnPointsIntoStep","stepTurnAt","stepPoints","stepPt","stepPt2","getVisualGradient","stopLen","tinyExtent","minCoord","maxCoord","coordSpan","_lineGroup","isCoordSysPolar","prevCoordSys","_coordSys","_polyline","_polygon","isAreaChart","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_updateAnimation","_newPolyline","stackedOnSeries","__points","updatedDataInfo","diffStatus","ptIdx","CartesianAxisView","areaInterval","loopGeo","parallelPreprocessor","CLICK_THRESHOLD","_throttledDispatchExpand","_dispatchExpand","checkTrigger","_mouseDownPoint","mouseDownPoint","DEFAULT_OUT_OF_BRUSH_COLOR","BrushModel","brushMode","transformable","inBrush","outOfBrush","generateBrushOption","normalizeRect","localPoints","specifiedXYIndex","brushWidth","targetModel","localCursorPoint","TEXT_PADDING","ITEM_GAP","ARRAY_LENGTH","makeItemPoints","packEventData","itemNode","selfType","normalStyleModel","layoutParam","totalWidth","renderList","_prepare","_renderContent","lastX","availableSize","getAvailableSize","dataStatistics","statisticType","mapKey","seriesGroups","hostGeoModel","seriesList","symbolCtor","_symbolCtor","symbolDrawProto","isIgnore","SymbolCtor","enableAnimation","PieSeries","hoverOffset","avoidLabelOverlap","percentPrecision","HV_NAMES","boxLayout","maxHeight","currentLineMaxSize","nextX","nextY","nextChild","nextChildRect","moveX","moveY","vbox","hbox","containerRect","verticalMargin","horizontalMargin","elPos","targetOption","hResult","vResult","newParams","newValueCount","merged","mergedValueCount","enoughParamNumber","hasProp","boxplotVisual","boxplotLayout","matrixUtil","makeAxisEventDataBase","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","pt1","pt2","arrows","arrowSize","symbolWidth","symbolHeight","axisTickLabel","tickEls","buildAxisTick","labelEls","buildAxisLabel","fixMinMaxLabelShow","gapSignal","isNameLocationCenter","nameRotation","endTextLayout","truncateOpt","truncatedText","__fullText","__truncatedText","targetType","axisRotation","rotationDiff","textRotate","onLeft","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","firstRect","nextRect","mRotationBack","ticksCnt","rawTick","tickInterval","tickEl","tickVal","itemLabelModel","labelStr","_traversalHelper","sep","coorX","coorY","finalCoor","compatStyle","compatLayoutProperties","LAYOUT_PROPERTIES","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","clockWise","pointerColor","dataRange","componentName","COVER_Z","UNSELECT_THRESHOLD","MIN_RESIZE_LINE_WIDTH","MUTEX_RESOURCE_KEY","DIRECTION_MAP","CURSOR_MAP","ne","nw","se","DEFAULT_BRUSH_OPT","baseUID","_brushType","_brushOption","_panels","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","mouseHandlers","doEnableBrush","doDisableBrush","createCover","cover","coverRenderers","__brushOption","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","updateCoverAfterCreation","getPanelByPoint","panel","panels","pn","getPanelByCover","clearCovers","covers","originalLength","shouldShowCover","getTrackEnds","createBaseRectCover","doDrift","edgeNames","makeStyle","updateBaseRect","localRange","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","mainEl","globalDir","getGlobalDirection","pointsToRect","clipByPanel","formatRectRange","localDirection","inverseMap","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","driftPolygon","localD","localZero","xmin","ymin","xmax","ymax","resetCursor","currPanel","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","determineBrushType","coverBrushOption","getCreatingRange","panelOpts","eachCover","brushOptionList","tmpIdPrefix","oldCovers","newCovers","oldGetKey","addOrUpdate","newBrushOption","handleDragEnd","getLineRenderer","localTrack","_radiusAxis","_angleAxis","maxAngle","encodeColor","colorAccessPath","samplers","nearest","indexSampler","sampler","PATH_COLOR","BoxplotSeries","brushLang","Brush","_brushMode","isBrushed","command","styleModel","paddings","confineInContainer","bgColor"],"mappings":"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","file":"js/chunk-3e664e3d.616dd662.js","sourcesContent":["var List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.normal.color',\n  getInitialData: function (option, ecModel) {\n    var parallelModel = ecModel.getComponent('parallel', this.get('parallelIndex'));\n    var parallelAxisIndices = parallelModel.parallelAxisIndex;\n    var rawData = option.data;\n    var modelDims = parallelModel.dimensions;\n    var dataDims = generateDataDims(modelDims, rawData);\n    var dataDimsInfo = zrUtil.map(dataDims, function (dim, dimIndex) {\n      var modelDimsIndex = zrUtil.indexOf(modelDims, dim);\n      var axisModel = modelDimsIndex >= 0 && ecModel.getComponent('parallelAxis', parallelAxisIndices[modelDimsIndex]);\n\n      if (axisModel && axisModel.get('type') === 'category') {\n        translateCategoryValue(axisModel, dim, rawData);\n        return {\n          name: dim,\n          type: 'ordinal'\n        };\n      } else if (modelDimsIndex < 0) {\n        return completeDimensions.guessOrdinal(rawData, dimIndex) ? {\n          name: dim,\n          type: 'ordinal'\n        } : dim;\n      } else {\n        return dim;\n      }\n    });\n    var list = new List(dataDimsInfo, this);\n    list.initData(rawData); // Anication is forbiden in progressive data mode.\n\n    if (this.option.progressive) {\n      this.option.animation = false;\n    }\n\n    return list;\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function (activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      normal: {\n        show: false\n      },\n      emphasis: {\n        show: false\n      }\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      normal: {\n        width: 1,\n        opacity: 0.45,\n        type: 'solid'\n      }\n    },\n    progressive: false,\n    // 100\n    smooth: false,\n    animationEasing: 'linear'\n  }\n});\n\nfunction translateCategoryValue(axisModel, dim, rawData) {\n  var axisData = axisModel.get('data');\n  var numberDim = convertDimNameToNumber(dim);\n\n  if (axisData && axisData.length) {\n    zrUtil.each(rawData, function (dataItem) {\n      if (!dataItem) {\n        return;\n      } // FIXME\n      // time consuming, should use hash?\n\n\n      var index = zrUtil.indexOf(axisData, dataItem[numberDim]);\n      dataItem[numberDim] = index >= 0 ? index : NaN;\n    });\n  } // FIXME\n  // 如果没有设置axis data, 应自动算出，或者提示。\n\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nfunction generateDataDims(modelDims, rawData) {\n  // parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  // We detect max dim by parallelModel.dimensions and fist\n  // item in rawData arbitrarily.\n  var maxDimNum = 0;\n  zrUtil.each(modelDims, function (dimName) {\n    var numberDim = convertDimNameToNumber(dimName);\n    numberDim > maxDimNum && (maxDimNum = numberDim);\n  });\n  var firstItem = rawData[0];\n\n  if (firstItem && firstItem.length - 1 > maxDimNum) {\n    maxDimNum = firstItem.length - 1;\n  }\n\n  var dataDims = [];\n\n  for (var i = 0; i <= maxDimNum; i++) {\n    dataDims.push('dim' + i);\n  }\n\n  return dataDims;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"./helper\");\n\nvar PiecewiseVisualMapView = VisualMapView.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, renderItem, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n\n    function renderItem(item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            textVerticalAlign: 'middle',\n            textAlign: itemAlign,\n            textFont: textFont,\n            textFill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLink: function (itemGroup, pieceIndex) {\n    itemGroup.on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight')).on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n    function onHoverLink(method) {\n      var visualMapModel = this.visualMapModel;\n      visualMapModel.option.hoverLink && this.api.dispatchAction({\n        type: method,\n        batch: helper.convertDataIndex(visualMapModel.findTargetDataIndices(pieceIndex))\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getItemAlign: function () {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        textVerticalAlign: 'middle',\n        textAlign: showLabel ? itemAlign : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  },\n\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n  _getViewData: function () {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n        endsText = endsText.slice().reverse();\n      }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  },\n\n  /**\n   * @private\n   */\n  _createItemSymbol: function (group, representValue, shapeParam) {\n    group.add(createSymbol(this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], this.getControllerVisual(representValue, 'color')));\n  },\n\n  /**\n   * @private\n   */\n  _onItemClick: function (piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  }\n});\nvar _default = PiecewiseVisualMapView;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    var dimensions = completeDimensions(['value'], option.data);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option.labelLine, ['show']);\n    var labelLineNormalOpt = option.labelLine.normal;\n    var labelLineEmphasisOpt = option.labelLine.emphasis; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.normal.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.label.emphasis.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var sum = data.getSum('value'); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      normal: {\n        show: true,\n        position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    labelLine: {\n      normal: {\n        show: true,\n        length: 20,\n        lineStyle: {\n          // color: 各异,\n          width: 1,\n          type: 'solid'\n        }\n      },\n      emphasis: {}\n    },\n    itemStyle: {\n      normal: {\n        // color: 各异,\n        borderColor: '#fff',\n        borderWidth: 1\n      },\n      emphasis: {// color: 各异,\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getBoundingRect();\n  return {\n    coordSys: {\n      type: 'geo',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: zrUtil.bind(coordSys.dataToPoint, coordSys),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar parseGeoJson = require(\"./parseGeoJson\");\n\nvar View = require(\"../View\");\n\nvar fixNanhai = require(\"./fix/nanhai\");\n\nvar fixTextCoord = require(\"./fix/textCoord\");\n\nvar fixGeoCoord = require(\"./fix/geoCoord\");\n\nvar fixDiaoyuIsland = require(\"./fix/diaoyuIsland\");\n\n// Geo fix functions\nvar geoFixFuncs = [fixNanhai, fixTextCoord, fixGeoCoord, fixDiaoyuIsland];\n/**\n * [Geo description]\n * @param {string} name Geo name\n * @param {string} map Map type\n * @param {Object} geoJson\n * @param {Object} [specialAreas]\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n */\n\nfunction Geo(name, map, geoJson, specialAreas, nameMap) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  this._nameCoordMap = zrUtil.createHashMap();\n  this.loadGeoJson(geoJson, specialAreas, nameMap);\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param {Object} geoJson\n   * @param {Object} [specialAreas]\n   *        Specify the positioned areas by left, top, width, height\n   * @param {Object.<string, string>} [nameMap]\n   *        Specify name alias\n   */\n  loadGeoJson: function (geoJson, specialAreas, nameMap) {\n    // https://jsperf.com/try-catch-performance-overhead\n    try {\n      this.regions = geoJson ? parseGeoJson(geoJson) : [];\n    } catch (e) {\n      throw 'Invalid geoJson format\\n' + e.message;\n    }\n\n    specialAreas = specialAreas || {};\n    nameMap = nameMap || {};\n    var regions = this.regions;\n    var regionsMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionName = regions[i].name; // Try use the alias in nameMap\n\n      regionName = nameMap.hasOwnProperty(regionName) ? nameMap[regionName] : regionName;\n      regions[i].name = regionName;\n      regionsMap.set(regionName, regions[i]); // Add geoJson\n\n      this.addGeoCoord(regionName, regions[i].center); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        regions[i].transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    }\n\n    this._regionsMap = regionsMap;\n    this._rect = null;\n    zrUtil.each(geoFixFuncs, function (fixFunc) {\n      fixFunc(this);\n    }, this);\n  },\n  // Overwrite\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    rect = rect.clone(); // Longitute is inverted\n\n    rect.y = -rect.y - rect.height;\n    var viewTransform = this._viewTransform;\n    viewTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    viewTransform.decomposeTransform();\n    var scale = viewTransform.scale;\n    scale[1] = -scale[1];\n    viewTransform.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function (name) {\n    return this._nameCoordMap.get(name);\n  },\n  // Overwrite\n  getBoundingRect: function () {\n    if (this._rect) {\n      return this._rect;\n    }\n\n    var rect;\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionRect = regions[i].getBoundingRect();\n      rect = rect || regionRect.clone();\n      rect.union(regionRect);\n    } // FIXME Always return new ?\n\n\n    return this._rect = rect || new BoundingRect(0, 0, 0, 0);\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data);\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar List = require(\"./List\");\n\nvar linkList = require(\"./helper/linkList\");\n\nvar completeDimensions = require(\"./helper/completeDimensions\");\n\n/**\n * Tree data structure\n *\n * @module echarts/data/Tree\n */\n\n/**\n * @constructor module:echarts/data/Tree~TreeNode\n * @param {string} name\n * @param {module:echarts/data/Tree} hostTree\n */\nvar TreeNode = function (name, hostTree) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * Depth of node\n   *\n   * @type {number}\n   * @readOnly\n   */\n\n  this.depth = 0;\n  /**\n   * Height of the subtree rooted at this node.\n   * @type {number}\n   * @readOnly\n   */\n\n  this.height = 0;\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n\n  this.parentNode = null;\n  /**\n   * Reference to list item.\n   * Do not persistent dataIndex outside,\n   * besause it may be changed by list.\n   * If dataIndex -1,\n   * this node is logical deleted (filtered) in list.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.dataIndex = -1;\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @readOnly\n   */\n\n  this.children = [];\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @pubilc\n   */\n\n  this.viewChildren = [];\n  /**\n   * @type {moduel:echarts/data/Tree}\n   * @readOnly\n   */\n\n  this.hostTree = hostTree;\n};\n\nTreeNode.prototype = {\n  constructor: TreeNode,\n\n  /**\n   * The node is removed.\n   * @return {boolean} is removed.\n   */\n  isRemoved: function () {\n    return this.dataIndex < 0;\n  },\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb If in preorder and return false,\n   *                      its subtree will not be visited.\n   * @param {Object} [context]\n   */\n  eachNode: function (options, cb, context) {\n    if (typeof options === 'function') {\n      context = cb;\n      cb = options;\n      options = null;\n    }\n\n    options = options || {};\n\n    if (zrUtil.isString(options)) {\n      options = {\n        order: options\n      };\n    }\n\n    var order = options.order || 'preorder';\n    var children = this[options.attr || 'children'];\n    var suppressVisitSub;\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\n\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\n      children[i].eachNode(options, cb, context);\n    }\n\n    order === 'postorder' && cb.call(context, this);\n  },\n\n  /**\n   * Update depth and height of this subtree.\n   *\n   * @param  {number} depth\n   */\n  updateDepthAndHeight: function (depth) {\n    var height = 0;\n    this.depth = depth;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.updateDepthAndHeight(depth + 1);\n\n      if (child.height > height) {\n        height = child.height;\n      }\n    }\n\n    this.height = height + 1;\n  },\n\n  /**\n   * @param  {string} id\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeById: function (id) {\n    if (this.getId() === id) {\n      return this;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].getNodeById(id);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~TreeNode} node\n   * @return {boolean}\n   */\n  contains: function (node) {\n    if (node === this) {\n      return true;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].contains(node);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {boolean} includeSelf Default false.\n   * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\n   */\n  getAncestors: function (includeSelf) {\n    var ancestors = [];\n    var node = includeSelf ? this : this.parentNode;\n\n    while (node) {\n      ancestors.push(node);\n      node = node.parentNode;\n    }\n\n    ancestors.reverse();\n    return ancestors;\n  },\n\n  /**\n   * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\n   * @return {number} Value.\n   */\n  getValue: function (dimension) {\n    var data = this.hostTree.data;\n    return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n  },\n\n  /**\n   * @param {Object} layout\n   * @param {boolean=} [merge=false]\n   */\n  setLayout: function (layout, merge) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\n  },\n\n  /**\n   * @return {Object} layout\n   */\n  getLayout: function () {\n    return this.hostTree.data.getItemLayout(this.dataIndex);\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var hostTree = this.hostTree;\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\n    var levelModel = this.getLevelModel();\n    var leavesModel;\n\n    if (!levelModel && (this.children.length === 0 || this.children.length !== 0 && this.isExpand === false)) {\n      leavesModel = this.getLeavesModel();\n    }\n\n    return itemModel.getModel(path, (levelModel || leavesModel || hostTree.hostModel).getModel(path));\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLevelModel: function () {\n    return (this.hostTree.levelModels || [])[this.depth];\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLeavesModel: function () {\n    return this.hostTree.leavesModel;\n  },\n\n  /**\n   * @example\n   *  setItemVisual('color', color);\n   *  setItemVisual({\n   *      'color': color\n   *  });\n   */\n  setVisual: function (key, value) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\n  },\n\n  /**\n   * Get item visual\n   */\n  getVisual: function (key, ignoreParent) {\n    return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\n  },\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getRawIndex: function () {\n    return this.hostTree.data.getRawIndex(this.dataIndex);\n  },\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getId: function () {\n    return this.hostTree.data.getId(this.dataIndex);\n  }\n};\n/**\n * @constructor\n * @alias module:echarts/data/Tree\n * @param {module:echarts/model/Model} hostModel\n * @param {Array.<Object>} levelOptions\n * @param {Object} leavesOption\n */\n\nfunction Tree(hostModel, levelOptions, leavesOption) {\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n  this.root;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * Index of each item is the same as the raw index of coresponding list item.\n   * @private\n   * @type {Array.<module:echarts/data/Tree~TreeNode}\n   */\n\n  this._nodes = [];\n  /**\n   * @private\n   * @readOnly\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @private\n   * @readOnly\n   * @type {Array.<module:echarts/model/Model}\n   */\n\n  this.levelModels = zrUtil.map(levelOptions || [], function (levelDefine) {\n    return new Model(levelDefine, hostModel, hostModel.ecModel);\n  });\n  this.leavesModel = new Model(leavesOption || {}, hostModel, hostModel.ecModel);\n}\n\nTree.prototype = {\n  constructor: Tree,\n  type: 'tree',\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb\n   * @param {Object}   [context]\n   */\n  eachNode: function (options, cb, context) {\n    this.root.eachNode(options, cb, context);\n  },\n\n  /**\n   * @param {number} dataIndex\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByDataIndex: function (dataIndex) {\n    var rawIndex = this.data.getRawIndex(dataIndex);\n    return this._nodes[rawIndex];\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByName: function (name) {\n    return this.root.getNodeByName(name);\n  },\n\n  /**\n   * Update item available by list,\n   * when list has been performed options like 'filterSelf' or 'map'.\n   */\n  update: function () {\n    var data = this.data;\n    var nodes = this._nodes;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n  },\n\n  /**\n   * Clear all layouts\n   */\n  clearLayouts: function () {\n    this.data.clearItemLayouts();\n  }\n};\n/**\n * data node format:\n * {\n *     name: ...\n *     value: ...\n *     children: [\n *         {\n *             name: ...\n *             value: ...\n *             children: ...\n *         },\n *         ...\n *     ]\n * }\n *\n * @static\n * @param {Object} dataRoot Root node.\n * @param {module:echarts/model/Model} hostModel\n * @param {Object} treeOptions\n * @param {Array.<Object>} treeOptions.levels\n * @param {Array.<Object>} treeOptions.leaves\n * @return module:echarts/data/Tree\n */\n\nTree.createTree = function (dataRoot, hostModel, treeOptions) {\n  var tree = new Tree(hostModel, treeOptions.levels, treeOptions.leaves);\n  var listData = [];\n  var dimMax = 1;\n  buildHierarchy(dataRoot);\n\n  function buildHierarchy(dataNode, parentNode) {\n    var value = dataNode.value;\n    dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\n    listData.push(dataNode);\n    var node = new TreeNode(dataNode.name, tree);\n    parentNode ? addChild(node, parentNode) : tree.root = node;\n\n    tree._nodes.push(node);\n\n    var children = dataNode.children;\n\n    if (children) {\n      for (var i = 0; i < children.length; i++) {\n        buildHierarchy(children[i], node);\n      }\n    }\n  }\n\n  tree.root.updateDepthAndHeight(0);\n  var dimensions = completeDimensions([{\n    name: 'value'\n  }], listData, {\n    dimCount: dimMax\n  });\n  var list = new List(dimensions, hostModel);\n  list.initData(listData);\n  linkList({\n    mainData: list,\n    struct: tree,\n    structAttr: 'tree'\n  });\n  tree.update();\n  return tree;\n};\n/**\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\n * so this function is not ready and not necessary to be public.\n *\n * @param {(module:echarts/data/Tree~TreeNode|Object)} child\n */\n\n\nfunction addChild(child, node) {\n  var children = node.children;\n\n  if (child.parentNode === node) {\n    return;\n  }\n\n  children.push(child);\n  child.parentNode = node;\n}\n\nvar _default = Tree;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar _number = require(\"../../util/number\");\n\nvar reformIntervals = _number.reformIntervals;\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * Order Rule:\n   *\n   * option.categories / option.pieces / option.text / option.selected:\n   *     If !option.inverse,\n   *     Order when vertical: ['top', ..., 'bottom'].\n   *     Order when horizontal: ['left', ..., 'right'].\n   *     If option.inverse, the meaning of\n   *     the order should be reversed.\n   *\n   * this._pieceList:\n   *     The order is always [low, ..., high].\n   *\n   * Mapping from location to low-high:\n   *     If !option.inverse\n   *     When vertical, top is high.\n   *     When horizontal, right is high.\n   *     If option.inverse, reverse.\n   */\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     * @private\n     * @type {Array.<Object>}\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\n     * 'pieces', 'categories', 'splitNumber'\n     * @type {string}\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function (newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\n   * @public\n   */\n  getSelectedMapKey: function (piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\n   * @public\n   */\n  getPieceList: function () {\n    return this._pieceList;\n  },\n\n  /**\n   * @private\n   * @return {string}\n   */\n  _determineMode: function () {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getValueState: function (value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\n   * @public\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, true, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @private\n   * @param {Object} piece piece.value or piece.interval is required.\n   * @return {number} Can be Infinity or -Infinity\n   */\n  getRepresentValue: function (piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function (getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n    var index = 0;\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var curr = dataExtent[0], len = index + splitNumber; index < len; curr += splitStep) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        index: index++,\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function () {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;","require(\"./gauge/GaugeSeries\");\n\nrequire(\"./gauge/GaugeView\");","var echarts = require(\"../echarts\");\n\nrequire(\"../component/parallel\");\n\nrequire(\"./parallel/ParallelSeries\");\n\nrequire(\"./parallel/ParallelView\");\n\nvar parallelVisual = require(\"./parallel/parallelVisual\");\n\necharts.registerVisual(parallelVisual);","var echarts = require(\"../echarts\");\n\nrequire(\"./candlestick/CandlestickSeries\");\n\nrequire(\"./candlestick/CandlestickView\");\n\nvar preprocessor = require(\"./candlestick/preprocessor\");\n\nvar candlestickVisual = require(\"./candlestick/candlestickVisual\");\n\nvar candlestickLayout = require(\"./candlestick/candlestickLayout\");\n\necharts.registerPreprocessor(preprocessor);\necharts.registerVisual(candlestickVisual);\necharts.registerLayout(candlestickLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../../coord/Axis\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar TimelineAxis = function (dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._autoLabelInterval;\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var timelineModel = this.model;\n    var labelModel = timelineModel.getModel('label.normal');\n    var labelInterval = labelModel.get('interval');\n\n    if (labelInterval != null && labelInterval != 'auto') {\n      return labelInterval;\n    }\n\n    var labelInterval = this._autoLabelInterval;\n\n    if (!labelInterval) {\n      labelInterval = this._autoLabelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisHelper.getFormattedLabels(this, labelModel.get('formatter')), labelModel.getFont(), timelineModel.get('orient') === 'horizontal' ? 0 : 90, labelModel.get('rotate'));\n    }\n\n    return labelInterval;\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @public\n   * @param  {number} idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar subPixelOptimize = _graphic.subPixelOptimize;\nvar retrieve2 = zrUtil.retrieve2;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('candlestick', function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var chartLayout = seriesModel.get('layout');\n    var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n    var constDim = 1 - variableDim;\n    var coordDims = ['x', 'y'];\n    var vDims = [];\n    var cDim;\n    zrUtil.each(data.dimensions, function (dimName) {\n      var dimInfo = data.getDimensionInfo(dimName);\n      var coordDim = dimInfo.coordDim;\n\n      if (coordDim === coordDims[constDim]) {\n        vDims.push(dimName);\n      } else if (coordDim === coordDims[variableDim]) {\n        cDim = dimName;\n      }\n    });\n\n    if (cDim == null || vDims.length < 4) {\n      return;\n    }\n\n    var dataIndex = 0;\n    data.each([cDim].concat(vDims), function () {\n      var args = arguments;\n      var axisDimVal = args[0];\n      var idx = args[vDims.length + 1];\n      var openVal = args[1];\n      var closeVal = args[2];\n      var lowestVal = args[3];\n      var highestVal = args[4];\n      var ocLow = Math.min(openVal, closeVal);\n      var ocHigh = Math.max(openVal, closeVal);\n      var ocLowPoint = getPoint(ocLow);\n      var ocHighPoint = getPoint(ocHigh);\n      var lowestPoint = getPoint(lowestVal);\n      var highestPoint = getPoint(highestVal);\n      var whiskerEnds = [[subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint)], [subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint)]];\n      var bodyEnds = [];\n      addBodyEnd(ocHighPoint, 0);\n      addBodyEnd(ocLowPoint, 1);\n      var sign;\n\n      if (openVal > closeVal) {\n        sign = -1;\n      } else if (openVal < closeVal) {\n        sign = 1;\n      } else {\n        // If close === open, compare with close of last record\n        if (dataIndex > 0) {\n          sign = data.getItemModel(dataIndex - 1).get()[2] <= closeVal ? 1 : -1;\n        } else {\n          // No record of previous, set to be positive\n          sign = 1;\n        }\n      }\n\n      data.setItemLayout(idx, {\n        chartLayout: chartLayout,\n        sign: sign,\n        initBaseline: openVal > closeVal ? ocHighPoint[constDim] : ocLowPoint[constDim],\n        // open point.\n        bodyEnds: bodyEnds,\n        whiskerEnds: whiskerEnds,\n        brushRect: makeBrushRect()\n      });\n      ++dataIndex;\n\n      function getPoint(val) {\n        var p = [];\n        p[variableDim] = axisDimVal;\n        p[constDim] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[variableDim] = subPixelOptimize(point1[variableDim] + candleWidth / 2, 1, false);\n        point2[variableDim] = subPixelOptimize(point2[variableDim] - candleWidth / 2, 1, true);\n        start ? bodyEnds.push(point1, point2) : bodyEnds.push(point2, point1);\n      }\n\n      function makeBrushRect() {\n        var pmin = getPoint(Math.min(openVal, closeVal, lowestVal, highestVal));\n        var pmax = getPoint(Math.max(openVal, closeVal, lowestVal, highestVal));\n        pmin[variableDim] -= candleWidth / 2;\n        pmax[variableDim] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: constDim ? candleWidth : pmax[0] - pmin[0],\n          height: constDim ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[variableDim] = subPixelOptimize(point[variableDim], 1);\n        return point;\n      }\n    }, true);\n  });\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nmodule.exports = _default;","var echarts = require('echarts/lib/echarts');\nvar layoutUtil = require('echarts/lib/util/layout');\n\nrequire('./WordCloudSeries');\nrequire('./WordCloudView');\n\nvar wordCloudLayoutHelper = require('./layout');\n\nif (!wordCloudLayoutHelper.isSupported) {\n    throw new Error('Sorry your browser not support wordCloud');\n}\n\n// https://github.com/timdream/wordcloud2.js/blob/c236bee60436e048949f9becc4f0f67bd832dc5c/index.js#L233\nfunction updateCanvasMask(maskCanvas) {\n    var ctx = maskCanvas.getContext('2d');\n    var imageData = ctx.getImageData(\n        0, 0, maskCanvas.width, maskCanvas.height);\n    var newImageData = ctx.createImageData(imageData);\n\n    var toneSum = 0;\n    var toneCnt = 0;\n    for (var i = 0; i < imageData.data.length; i += 4) {\n        var alpha = imageData.data[i + 3];\n        if (alpha > 128) {\n            var tone = imageData.data[i]\n                + imageData.data[i + 1]\n                + imageData.data[i + 2];\n            toneSum += tone;\n            ++toneCnt;\n        }\n    }\n    var threshold = toneSum / toneCnt;\n\n    for (var i = 0; i < imageData.data.length; i += 4) {\n        var tone = imageData.data[i]\n            + imageData.data[i + 1]\n            + imageData.data[i + 2];\n        var alpha = imageData.data[i + 3];\n\n        if (alpha < 128 || tone > threshold) {\n            // Area not to draw\n            newImageData.data[i] = 0;\n            newImageData.data[i + 1] = 0;\n            newImageData.data[i + 2] = 0;\n            newImageData.data[i + 3] = 0;\n        }\n        else {\n            // Area to draw\n            // The color must be same with backgroundColor\n            newImageData.data[i] = 255;\n            newImageData.data[i + 1] = 255;\n            newImageData.data[i + 2] = 255;\n            newImageData.data[i + 3] = 255;\n        }\n    }\n\n    ctx.putImageData(newImageData, 0, 0);\n}\n\necharts.registerLayout(function (ecModel, api) {\n    ecModel.eachSeriesByType('wordCloud', function (seriesModel) {\n        var gridRect = layoutUtil.getLayoutRect(\n            seriesModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }\n        );\n        var data = seriesModel.getData();\n\n        var canvas = document.createElement('canvas');\n        canvas.width = gridRect.width;\n        canvas.height = gridRect.height;\n\n        var ctx = canvas.getContext('2d');\n        var maskImage = seriesModel.get('maskImage');\n        if (maskImage) {\n            try {\n                ctx.drawImage(maskImage, 0, 0, canvas.width, canvas.height);\n                updateCanvasMask(canvas);\n            }\n            catch (e) {\n                console.error('Invalid mask image');\n                console.error(e.toString());\n            }\n        }\n\n        var sizeRange = seriesModel.get('sizeRange');\n        var rotationRange = seriesModel.get('rotationRange');\n        var valueExtent = data.getDataExtent('value');\n\n        var DEGREE_TO_RAD = Math.PI / 180;\n        var gridSize = seriesModel.get('gridSize');\n        wordCloudLayoutHelper(canvas, {\n            list: data.mapArray('value', function (value, idx) {\n                var itemModel = data.getItemModel(idx);\n                return [\n                    data.getName(idx),\n                    itemModel.get('textStyle.normal.textSize', true)\n                        || echarts.number.linearMap(value, valueExtent, sizeRange),\n                    idx\n                ];\n            }).sort(function (a, b) {\n                // Sort from large to small in case there is no more room for more words\n                return b[1] - a[1];\n            }),\n            fontFamily: seriesModel.get('textStyle.normal.fontFamily')\n                || seriesModel.get('textStyle.emphasis.fontFamily')\n                || ecModel.get('textStyle.fontFamily'),\n            fontWeight: seriesModel.get('textStyle.normal.fontWeight')\n                || seriesModel.get('textStyle.emphasis.fontWeight')\n                || ecModel.get('textStyle.fontWeight'),\n            gridSize: gridSize,\n\n            ellipticity: gridRect.height / gridRect.width,\n\n            minRotation: rotationRange[0] * DEGREE_TO_RAD,\n            maxRotation: rotationRange[1] * DEGREE_TO_RAD,\n\n            clearCanvas: !maskImage,\n\n            rotateRatio: 1,\n\n            rotationStep: seriesModel.get('rotationStep') * DEGREE_TO_RAD,\n\n            drawOutOfBound: seriesModel.get('drawOutOfBound'),\n\n            shuffle: false,\n\n            shape: seriesModel.get('shape')\n        });\n\n        function onWordCloudDrawn(e) {\n            var item = e.detail.item;\n            if (e.detail.drawn && seriesModel.layoutInstance.ondraw) {\n                e.detail.drawn.gx += gridRect.x / gridSize;\n                e.detail.drawn.gy += gridRect.y / gridSize;\n                seriesModel.layoutInstance.ondraw(\n                    item[0], item[1], item[2], e.detail.drawn\n                );\n            }\n        }\n\n        canvas.addEventListener('wordclouddrawn', onWordCloudDrawn);\n\n        if (seriesModel.layoutInstance) {\n            // Dispose previous\n            seriesModel.layoutInstance.dispose();\n        }\n\n        seriesModel.layoutInstance = {\n            ondraw: null,\n\n            dispose: function () {\n                canvas.removeEventListener('wordclouddrawn', onWordCloudDrawn);\n                // Abort\n                canvas.addEventListener('wordclouddrawn', function (e) {\n                    // Prevent default to cancle the event and stop the loop\n                    e.preventDefault();\n                });\n            }\n        };\n    });\n});\n\necharts.registerPreprocessor(function (option) {\n    var series = (option || {}).series;\n    !echarts.util.isArray(series) && (series = series ? [series] : []);\n\n    var compats = ['shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n\n    echarts.util.each(series, function (seriesItem) {\n        if (seriesItem && seriesItem.type === 'wordCloud') {\n            var textStyle = seriesItem.textStyle || {};\n\n            compatTextStyle(textStyle.normal);\n            compatTextStyle(textStyle.emphasis);\n        }\n    });\n\n    function compatTextStyle(textStyle) {\n        textStyle && echarts.util.each(compats, function (key) {\n            if (textStyle.hasOwnProperty(key)) {\n                textStyle['text' + echarts.format.capitalFirst(key)] = textStyle[key];\n            }\n        });\n    }\n});\n","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SliderZoomModel\");\n\nrequire(\"./dataZoom/SliderZoomView\");\n\nrequire(\"./dataZoom/InsideZoomModel\");\n\nrequire(\"./dataZoom/InsideZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var commonLayout = require(\"./commonLayout\");\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nmodule.exports = _default;","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;","require(\"./legend\");\n\nrequire(\"./legend/ScrollableLegendModel\");\n\nrequire(\"./legend/ScrollableLegendView\");\n\nrequire(\"./legend/scrollableLegendAction\");","// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function (oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function (a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function (components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function (basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function (value) {\n    return value.slice();\n  },\n  join: function (value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"./RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nfunction getFixedItemStyle(model, scale) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, group, api, fromView) {\n  group.off('click');\n  group.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    group.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    group.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, group);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, group) {\n  // FIXME\n  group.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    var group = this.group;\n    var scale = geo.scale;\n    var groupNewProp = {\n      position: geo.position,\n      scale: scale\n    }; // No animation when first draw or in action\n\n    if (!group.childAt(0) || payload) {\n      group.attr(groupNewProp);\n    } else {\n      graphic.updateProps(group, groupNewProp, mapOrGeoModel);\n    }\n\n    group.removeAll();\n    var itemStyleAccessPath = ['itemStyle', 'normal'];\n    var hoverItemStyleAccessPath = ['itemStyle', 'emphasis'];\n    var labelAccessPath = ['label', 'normal'];\n    var hoverLabelAccessPath = ['label', 'emphasis'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel, scale);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          shape: {\n            points: geometry.exterior\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            shape: {\n              points: geometry.interiors[i]\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get('value', dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: region.center.slice(),\n          scale: [1 / scale[0], 1 / scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      graphic.setHoverStyle(regionGroup, hoverItemStyle, {\n        hoverSilentOnTouch: !!mapOrGeoModel.get('selectedMode')\n      });\n      group.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, group, api, fromView);\n    updateMapSelected(mapOrGeoModel, group);\n  },\n  remove: function () {\n    this.group.removeAll();\n\n    this._controller.dispose();\n\n    this._controllerHost = {};\n  },\n  _updateController: function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (dx, dy) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: dx,\n        dy: dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (zoom, mouseX, mouseY) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      }));\n\n      if (this._updateGroup) {\n        var group = this.group;\n        var scale = group.scale;\n        group.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file Visual encoding for sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    nodes.sort(function (a, b) {\n      return a.getLayout().value - b.getLayout().value;\n    });\n    var minValue = nodes[0].getLayout().value;\n    var maxValue = nodes[nodes.length - 1].getLayout().value;\n    zrUtil.each(nodes, function (node) {\n      var mapping = new VisualMapping({\n        type: 'color',\n        mappingMethod: 'linear',\n        dataExtent: [minValue, maxValue],\n        visual: seriesModel.get('color')\n      });\n      var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n      node.setVisual('color', mapValueToColor); // If set itemStyle.normal.color\n\n      var itemModel = node.getModel();\n      var customColor = itemModel.get('itemStyle.normal.color');\n\n      if (customColor != null) {\n        node.setVisual('color', customColor);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * @constructor module:echarts/coord/parallel/ParallelAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n */\nvar ParallelAxis = function (dim, scale, coordExtent, axisType, axisIndex) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.axisIndex = axisIndex;\n};\n\nParallelAxis.prototype = {\n  constructor: ParallelAxis,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/parallel/AxisModel}\n   */\n  model: null,\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\n  }\n};\nzrUtil.inherits(ParallelAxis, Axis);\nvar _default = ParallelAxis;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar Line = require(\"./Line\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar curveUtil = require(\"zrender/lib/core/curve\");\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar selector = require(\"./selector\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n});\n/**\n * Register the visual encoding if this modules required.\n */\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}","module.exports = require('./dist/echarts-amap.min.js')\r\n","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./effectScatter/EffectScatterSeries\");\n\nrequire(\"./effectScatter/EffectScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\necharts.registerVisual(zrUtil.curry(visualSymbol, 'effectScatter', 'circle', null));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'effectScatter'));","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar findLabelValueDim = _labelHelper.findLabelValueDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\nvar normalLabelAccessPath = ['label', 'normal'];\nvar emphasisLabelAccessPath = ['label', 'emphasis'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  var valueDim = !useNameLabel && findLabelValueDim(data);\n\n  if (useNameLabel || valueDim != null) {\n    graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n      labelFetcher: seriesModel,\n      labelDataIndex: idx,\n      defaultText: useNameLabel ? data.getName(idx) : data.get(valueDim, idx),\n      isRectText: true,\n      autoColor: color\n    });\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function (seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle.normal').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle.normal');\n      var hoverAreaStyleModel = itemModel.getModel('areaStyle.emphasis');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle.normal').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n      var labelModel = itemModel.getModel('label.normal');\n      var labelHoverModel = itemModel.getModel('label.emphasis');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: data.get(data.dimensions[symbolPath.__dimIdx], idx),\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      function onEmphasis() {\n        polygon.attr('ignore', hoverPolygonIgnore);\n      }\n\n      function onNormal() {\n        polygon.attr('ignore', polygonIgnore);\n      }\n\n      itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n      itemGroup.on('emphasis', onEmphasis).on('mouseover', onEmphasis).on('normal', onNormal).on('mouseout', onNormal);\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea'];\n\nvar _default = AxisView.extend({\n  type: 'radiusAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this.group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: ticksCoords[i]\n        },\n        silent: true\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i],\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i];\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n/**\n * @inner\n */\n\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./scatter/ScatterSeries\");\n\nrequire(\"./scatter/ScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerVisual(zrUtil.curry(visualSymbol, 'scatter', 'circle', null));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'scatter'));","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"../axisDefault\");\n\nvar Model = require(\"../../model/Model\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar valueAxisDefault = axisDefault.valueAxis;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel = echarts.extendComponentModel({\n  type: 'radar',\n  optionUpdated: function () {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('name');\n    var showName = this.get('name.show');\n    var nameFormatter = this.get('name.formatter');\n    var nameGap = this.get('nameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        axisLabel: axisLabel,\n        // Competitable with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        indicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = indicatorOpt.name;\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\n      }\n\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n\n    this.getIndicatorModels = function () {\n      return indicatorModels;\n    };\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    name: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    nameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  }\n});\nvar _default = RadarModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordsOffsetMap = {\n  '南海诸岛': [32, 80],\n  // 全国\n  '广东': [0, -10],\n  '香港': [10, 5],\n  '澳门': [-10, 10],\n  //'北京': [-10, 0],\n  '天津': [5, 5]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var coordFix = coordsOffsetMap[region.name];\n\n    if (coordFix) {\n      var cp = region.center;\n      cp[0] += coordFix[0] / 10.5;\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\n    }\n  });\n}\n\nmodule.exports = _default;","var BaseBarSeries = require(\"./BaseBarSeries\");\n\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect'\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;","var MarkerModel = require(\"./MarkerModel\");\n\nvar _default = MarkerModel.extend({\n  type: 'markLine',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: ['circle', 'arrow'],\n    symbolSize: [8, 16],\n    //symbolRotate: 0,\n    precision: 2,\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      normal: {\n        show: true,\n        position: 'end'\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    lineStyle: {\n      normal: {\n        type: 'dashed'\n      },\n      emphasis: {\n        width: 3\n      }\n    },\n    animationEasing: 'linear'\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar viewMixin = _whiskerBoxCommon.viewMixin;\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  getStyleUpdater: function () {\n    return updateStyle;\n  },\n  dispose: zrUtil.noop\n});\nzrUtil.mixin(CandlestickView, viewMixin, true); // Update common properties\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n\nfunction updateStyle(itemGroup, data, idx) {\n  var itemModel = data.getItemModel(idx);\n  var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n  var color = data.getItemVisual(idx, 'color');\n  var borderColor = data.getItemVisual(idx, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['color', 'color0', 'borderColor', 'borderColor0']);\n  var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n  whiskerEl.useStyle(itemStyle);\n  whiskerEl.style.stroke = borderColor;\n  var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n  bodyEl.useStyle(itemStyle);\n  bodyEl.style.fill = color;\n  bodyEl.style.stroke = borderColor;\n  var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n  graphic.setHoverStyle(itemGroup, hoverStyle);\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemStyleModel.getModel('normal').getItemStyle()));\n  sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), itemModel.get('selected'), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label.normal');\n  var labelHoverModel = itemModel.getModel('label.emphasis');\n  var labelLineModel = itemModel.getModel('labelLine.normal');\n  var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;","var vec2 = require(\"zrender/lib/core/vector\");\n\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.normal.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Polar = require(\"./Polar\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./PolarModel\");\n\n// TODO Axis scale\n// 依赖 PolarModel 做预处理\n\n/**\n * Resize method bound to the polar\n * @param {module:echarts/coord/polar/PolarModel} polarModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizePolar(polar, polarModel, api) {\n  var center = polarModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  polar.cx = parsePercent(center[0], width);\n  polar.cy = parsePercent(center[1], height);\n  var radiusAxis = polar.getRadiusAxis();\n  var size = Math.min(width, height) / 2;\n  var radius = parsePercent(polarModel.get('radius'), size);\n  radiusAxis.inverse ? radiusAxis.setExtent(radius, 0) : radiusAxis.setExtent(0, radius);\n}\n/**\n * Update polar\n */\n\n\nfunction updatePolarScale(ecModel, api) {\n  var polar = this;\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\n\n  angleAxis.scale.setExtent(Infinity, -Infinity);\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem === polar) {\n      var data = seriesModel.getData();\n      radiusAxis.scale.unionExtentFromData(data, 'radius');\n      angleAxis.scale.unionExtentFromData(data, 'angle');\n    }\n  });\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\n\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\n    var extent = angleAxis.getExtent();\n    var diff = 360 / angleAxis.scale.count();\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\n    angleAxis.setExtent(extent[0], extent[1]);\n  }\n}\n/**\n * Set common axis properties\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n * @param {module:echarts/coord/polar/AxisModel}\n * @inner\n */\n\n\nfunction setAxis(axis, axisModel) {\n  axis.type = axisModel.get('type');\n  axis.scale = createScaleByModel(axisModel);\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\n  axis.inverse = axisModel.get('inverse');\n\n  if (axisModel.mainType === 'angleAxis') {\n    axis.inverse ^= axisModel.get('clockwise');\n    var startAngle = axisModel.get('startAngle');\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\n  } // Inject axis instance\n\n\n  axisModel.axis = axis;\n  axis.model = axisModel;\n}\n\nvar polarCreator = {\n  dimensions: Polar.prototype.dimensions,\n  create: function (ecModel, api) {\n    var polarList = [];\n    ecModel.eachComponent('polar', function (polarModel, idx) {\n      var polar = new Polar(idx); // Inject resize and update method\n\n      polar.update = updatePolarScale;\n      var radiusAxis = polar.getRadiusAxis();\n      var angleAxis = polar.getAngleAxis();\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\n      setAxis(radiusAxis, radiusAxisModel);\n      setAxis(angleAxis, angleAxisModel);\n      resizePolar(polar, polarModel, api);\n      polarList.push(polar);\n      polarModel.coordinateSystem = polar;\n      polar.model = polarModel;\n    }); // Inject coordinateSystem to series\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'polar') {\n        var polarModel = ecModel.queryComponents({\n          mainType: 'polar',\n          index: seriesModel.get('polarIndex'),\n          id: seriesModel.get('polarId')\n        })[0];\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\n      }\n    });\n    return polarList;\n  }\n};\nCoordinateSystem.register('polar', polarCreator);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutPolar(seriesType, ecModel, api) {\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\n  }));\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for polar only\n    if (seriesModel.coordinateSystem.type !== 'polar') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var angleAxis = polar.getAngleAxis();\n    var baseAxis = polar.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = polar.getOtherAxis(baseAxis);\n    var center = seriesModel.get('center') || ['50%', '50%'];\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\n    var valueAxisStart = valueAxis.getExtent()[0];\n    var valueMax = valueAxis.model.get('max');\n    var valueMin = valueAxis.model.get('min');\n    var coordDims = [seriesModel.coordDimToDataDim('radius')[0], seriesModel.coordDimToDataDim('angle')[0]];\n    var coords = data.mapArray(coordDims, function (radius, angle) {\n      return polar.dataToPoint([radius, angle]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = polar.pointToCoord(coords[idx]);\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var r0;\n      var r;\n      var startAngle;\n      var endAngle;\n\n      if (valueAxis.dim === 'radius') {\n        // radial sector\n        r0 = lastCoordOrigin;\n        r = coord[0];\n        startAngle = (-coord[1] + columnOffset) * Math.PI / 180;\n        endAngle = startAngle + columnWidth * Math.PI / 180;\n\n        if (Math.abs(r) < barMinHeight) {\n          r = r0 + (r < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoordsOrigin[stackId][idx][sign] = r;\n      } else {\n        // tangential sector\n        r0 = coord[0] + columnOffset;\n        r = r0 + columnWidth; // clamp data if min or max is defined for valueAxis\n\n        if (valueMax != null) {\n          value = Math.min(value, valueMax);\n        }\n\n        if (valueMin != null) {\n          value = Math.max(value, valueMin);\n        }\n\n        var angle = angleAxis.dataToAngle(value);\n\n        if (Math.abs(angle - lastCoordOrigin) < barMinAngle) {\n          angle = lastCoordOrigin - (value < 0 ? -1 : 1) * barMinAngle;\n        }\n\n        startAngle = -lastCoordOrigin * Math.PI / 180;\n        endAngle = -angle * Math.PI / 180; // if the previous stack is at the end of the ring,\n        // add a round to differentiate it from origin\n\n        var extent = angleAxis.getExtent();\n        var stackCoord = angle;\n\n        if (stackCoord === extent[0] && value > 0) {\n          stackCoord = extent[1];\n        } else if (stackCoord === extent[1] && value < 0) {\n          stackCoord = extent[0];\n        }\n\n        lastStackCoordsOrigin[stackId][idx][sign] = stackCoord;\n      }\n\n      data.setItemLayout(idx, {\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: endAngle\n      });\n    }, true);\n  }, this);\n}\n/**\n * Calculate bar width and offset for radial bar charts\n */\n\n\nfunction calRadialBar(barSeries, api) {\n  // Columns info on each category axis. Key is polar name\n  var columnsMap = {};\n  zrUtil.each(barSeries, function (seriesModel, idx) {\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n    var stackId = getSeriesStackId(seriesModel);\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    };\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n\n    if (barWidth && !stacks[stackId].width) {\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      stacks[stackId].width = barWidth;\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    barGap != null && (columnsOnAxis.gap = barGap);\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n\nvar _default = barLayoutPolar;\nmodule.exports = _default;","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar Model = require(\"../../model/Model\");\n\nvar selectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"./geoCreator\");\n\nvar GeoModel = ComponentModel.extend({\n  type: 'geo',\n\n  /**\n   * @type {module:echarts/coord/geo/Geo}\n   */\n  coordinateSystem: null,\n  layoutMode: 'box',\n  init: function (option) {\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n  },\n  optionUpdated: function () {\n    var option = this.option;\n    var self = this;\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\n      if (regionOpt.name) {\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\n      }\n\n      return optionModelMap;\n    }, zrUtil.createHashMap());\n    this.updateSelectedMap(option.regions);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    show: true,\n    left: 'center',\n    top: 'center',\n    // width:,\n    // height:,\n    // right\n    // bottom\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    silent: false,\n    // Map type\n    map: '',\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ]\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    // selectedMode: false\n    label: {\n      normal: {\n        show: false,\n        color: '#000'\n      },\n      emphasis: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      }\n    },\n    itemStyle: {\n      normal: {\n        // color: 各异,\n        borderWidth: 0.5,\n        borderColor: '#444',\n        color: '#eee'\n      },\n      emphasis: {\n        // 也是选中样式\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    regions: []\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (name) {\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function (name, status) {\n    var regionModel = this.getRegionModel(name);\n    var formatter = regionModel.get('label.' + status + '.formatter');\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatter.replace('{a}', name != null ? name : '');\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  }\n});\nzrUtil.mixin(GeoModel, selectableMixin);\nvar _default = GeoModel;\nmodule.exports = _default;","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;","var echarts = require(\"echarts\");\n\nvar _default = echarts.extendComponentView({\n  type: 'bmap',\n  render: function (bMapModel, ecModel, api) {\n    var rendering = true;\n    var bmap = bMapModel.getBMap();\n    var viewportRoot = api.getZr().painter.getViewportRoot();\n    var coordSys = bMapModel.coordinateSystem;\n\n    var moveHandler = function (type, target) {\n      if (rendering) {\n        return;\n      }\n\n      var offsetEl = viewportRoot.parentNode.parentNode.parentNode;\n      var mapOffset = [-parseInt(offsetEl.style.left, 10) || 0, -parseInt(offsetEl.style.top, 10) || 0];\n      viewportRoot.style.left = mapOffset[0] + 'px';\n      viewportRoot.style.top = mapOffset[1] + 'px';\n      coordSys.setMapOffset(mapOffset);\n      bMapModel.__mapOffset = mapOffset;\n      api.dispatchAction({\n        type: 'bmapRoam'\n      });\n    };\n\n    function zoomEndHandler() {\n      if (rendering) {\n        return;\n      }\n\n      api.dispatchAction({\n        type: 'bmapRoam'\n      });\n    }\n\n    bmap.removeEventListener('moving', this._oldMoveHandler); // FIXME\n    // Moveend may be triggered by centerAndZoom method when creating coordSys next time\n    // bmap.removeEventListener('moveend', this._oldMoveHandler);\n\n    bmap.removeEventListener('zoomend', this._oldZoomEndHandler);\n    bmap.addEventListener('moving', moveHandler); // bmap.addEventListener('moveend', moveHandler);\n\n    bmap.addEventListener('zoomend', zoomEndHandler);\n    this._oldMoveHandler = moveHandler;\n    this._oldZoomEndHandler = zoomEndHandler;\n    var roam = bMapModel.get('roam');\n\n    if (roam && roam !== 'scale') {\n      bmap.enableDragging();\n    } else {\n      bmap.disableDragging();\n    }\n\n    if (roam && roam !== 'move') {\n      bmap.enableScrollWheelZoom();\n      bmap.enableDoubleClickZoom();\n      bmap.enablePinchToZoom();\n    } else {\n      bmap.disableScrollWheelZoom();\n      bmap.disableDoubleClickZoom();\n      bmap.disablePinchToZoom();\n    }\n\n    var originalStyle = bMapModel.__mapStyle;\n    var newMapStyle = bMapModel.get('mapStyle') || {}; // FIXME, Not use JSON methods\n\n    var mapStyleStr = JSON.stringify(newMapStyle);\n\n    if (JSON.stringify(originalStyle) !== mapStyleStr) {\n      // FIXME May have blank tile when dragging if setMapStyle\n      if (Object.keys(newMapStyle).length) {\n        bmap.setMapStyle(newMapStyle);\n      }\n\n      bMapModel.__mapStyle = JSON.parse(mapStyleStr);\n    }\n\n    rendering = false;\n  }\n});\n\nmodule.exports = _default;","var features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;","var SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/**\n * @file Create data struct and define tree view's series model\n */\nvar _default = SeriesModel.extend({\n  type: 'series.tree',\n  layoutInfo: null,\n  // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n  layoutMode: 'box',\n\n  /**\n   * Init a tree data structure from data in option series\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var treeOption = {};\n    treeOption.leaves = leaves;\n    var tree = Tree.createTree(root, this, treeOption);\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex);\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return encodeHTML(name + (isNaN(value) || value == null ? '' : ' : ' + value));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    // the orient of orthoginal layout, can be setted to 'horizontal' or 'vertical'\n    orient: 'horizontal',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      normal: {\n        color: '#ccc',\n        width: 1.5,\n        curveness: 0.5\n      }\n    },\n    itemStyle: {\n      normal: {\n        color: 'lightsteelblue',\n        borderColor: '#c23531',\n        borderWidth: 1.5\n      }\n    },\n    label: {\n      normal: {\n        show: true,\n        color: '#555'\n      }\n    },\n    leaves: {\n      label: {\n        normal: {\n          show: true\n        }\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 1000\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      normal: {\n        position: 'top'\n      }\n    },\n    // itemStyle: {\n    //     normal: {},\n    //     emphasis: {}\n    // },\n    lineStyle: {\n      normal: {\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // areaStyle: {},\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Component = require(\"../../model/Component\");\n\nrequire(\"./AxisModel\");\n\nvar _default = Component.extend({\n  type: 'parallel',\n  dependencies: ['parallelAxis'],\n\n  /**\n   * @type {module:echarts/coord/parallel/Parallel}\n   */\n  coordinateSystem: null,\n\n  /**\n   * Each item like: 'dim0', 'dim1', 'dim2', ...\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * Coresponding to dimensions.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n  parallelAxisIndex: null,\n  layoutMode: 'box',\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    layout: 'horizontal',\n    // 'horizontal' or 'vertical'\n    // FIXME\n    // naming?\n    axisExpandable: false,\n    axisExpandCenter: null,\n    axisExpandCount: 0,\n    axisExpandWidth: 50,\n    // FIXME '10%' ?\n    axisExpandRate: 17,\n    axisExpandDebounce: 50,\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\n    // Do not doc to user until necessary.\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\n    axisExpandTriggerOn: 'click',\n    // 'mousemove' or 'click'\n    parallelAxisDefault: null\n  },\n\n  /**\n   * @override\n   */\n  init: function () {\n    Component.prototype.init.apply(this, arguments);\n    this.mergeOption({});\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var thisOption = this.option;\n    newOption && zrUtil.merge(thisOption, newOption, true);\n\n    this._initDimensions();\n  },\n\n  /**\n   * Whether series or axis is in this coordinate system.\n   * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\n   * @param {module:echarts/model/Global} ecModel\n   */\n  contains: function (model, ecModel) {\n    var parallelIndex = model.get('parallelIndex');\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\n  },\n  setAxisExpand: function (opt) {\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\n      if (opt.hasOwnProperty(name)) {\n        this.option[name] = opt[name];\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _initDimensions: function () {\n    var dimensions = this.dimensions = [];\n    var parallelAxisIndex = this.parallelAxisIndex = [];\n    var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\n      // Can not use this.contains here, because\n      // initialization has not been completed yet.\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\n    }, this);\n    zrUtil.each(axisModels, function (axisModel) {\n      dimensions.push('dim' + axisModel.get('dim'));\n      parallelAxisIndex.push(axisModel.componentIndex);\n    });\n  }\n});\n\nmodule.exports = _default;","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n * @see https://github.com/d3/d3-hierarchy\n */\n\n/**\n * Initialize all computational message for following algorithm\n * @param  {module:echarts/data/Tree~TreeNode} root   The virtual root of the tree\n */\nfunction init(root) {\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param {Function} separation\n */\n\n\nfunction firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * Computes all real x-coordinates by summing up the modifiers recursively.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\n\nfunction separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate\n * @param  {number} x\n * @param  {number} y\n * @return {Object}\n */\n\n\nfunction radialCoordinate(x, y) {\n  var radialCoor = {};\n  x -= Math.PI / 2;\n  radialCoor.x = y * Math.cos(x);\n  radialCoor.y = y * Math.sin(x);\n  return radialCoor;\n}\n/**\n * Get the layout position of the whole view\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n * @param  {module:echarts/data/Tree~TreeNode} subtreeV\n * @param  {module:echarts/data/Tree~TreeNode} subtreeW\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @param  {Function} separation\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n * @param  {module:echarts/data/Tree~TreeNode} nodeInLeft\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * Shifts the current subtree rooted at wr. This is done by increasing prelim(w+) and modifier(w+) by shift.\n * @param  {module:echarts/data/Tree~TreeNode} wl\n * @param  {module:echarts/data/Tree~TreeNode} wr\n * @param  {number} shift [description]\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}\n\nexports.init = init;\nexports.firstWalk = firstWalk;\nexports.secondWalk = secondWalk;\nexports.separation = separation;\nexports.radialCoordinate = radialCoordinate;\nexports.getViewRect = getViewRect;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar Image = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = Image;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar throttle = require(\"../../util/throttle\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar layout = require(\"../../util/layout\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar Rect = graphic.Rect;\nvar linearMap = numberUtil.linearMap;\nvar asc = numberUtil.asc;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar SliderZoomView = DataZoomView.extend({\n  type: 'dataZoom.slider',\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {Object}\n     */\n    this._displayables = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this._orient;\n    /**\n     * [0, 100]\n     * @private\n     */\n\n    this._range;\n    /**\n     * [coord of the first handle, coord of the second handle]\n     * @private\n     */\n\n    this._handleEnds;\n    /**\n     * [length, thick]\n     * @private\n     * @type {Array.<number>}\n     */\n\n    this._size;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleWidth;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleHeight;\n    /**\n     * @private\n     */\n\n    this._location;\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._dataShadowInfo;\n    this.api = api;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    SliderZoomView.superApply(this, 'render', arguments);\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.get('orient');\n\n    if (this.dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    SliderZoomView.superApply(this, 'remove', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    SliderZoomView.superApply(this, 'dispose', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n  _buildView: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.barGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  },\n\n  /**\n   * @private\n   */\n  _resetLocation: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      // vertical\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  },\n\n  /**\n   * @private\n   */\n  _positionGroup: function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var barGroup = this._displayables.barGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\n    } : orient === HORIZONTAL && inverse ? {\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\n    } : orient === VERTICAL && !inverse ? {\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\n\n    } : {\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([barGroup]);\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n  },\n\n  /**\n   * @private\n   */\n  _getViewExtent: function () {\n    return [0, this._size[0]];\n  },\n  _renderBackground: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.barGroup;\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    barGroup.add(new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\n    }));\n  },\n  _renderDataShadow: function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n    this._displayables.barGroup.add(new graphic.Polygon({\n      shape: {\n        points: areaPoints\n      },\n      style: zrUtil.defaults({\n        fill: dataZoomModel.get('dataBackgroundColor')\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\n      silent: true,\n      z2: -20\n    }));\n\n    this._displayables.barGroup.add(new graphic.Polyline({\n      shape: {\n        points: linePoints\n      },\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n      silent: true,\n      z2: -19\n    }));\n  },\n  _prepareDataShadowInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\n      zrUtil.each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n        var otherDim = getOtherDim(dimNames.name);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: dimNames.name,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  },\n  _renderHandle: function () {\n    var displaybles = this._displayables;\n    var handles = displaybles.handles = [];\n    var handleLabels = displaybles.handleLabels = [];\n    var barGroup = this._displayables.barGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    barGroup.add(displaybles.filler = new Rect({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false),\n      style: {\n        fill: dataZoomModel.get('fillerColor'),\n        textPosition: 'inside'\n      }\n    })); // Frame border.\n\n    barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })));\n    each([0, 1], function (handleIndex) {\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false)\n      }, {\n        x: -1,\n        y: 0,\n        width: 2,\n        height: 2\n      });\n      var bRect = path.getBoundingRect();\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      barGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.textStyleModel;\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: {\n          x: 0,\n          y: 0,\n          text: '',\n          textVerticalAlign: 'middle',\n          textAlign: 'center',\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        },\n        z2: 10\n      }));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} delta\n   */\n  _updateInterval: function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scale: [handleHeight / 2, handleHeight / 2],\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n\n    this._updateDataInfo(nonRealtime);\n  },\n\n  /**\n   * @private\n   */\n  _updateDataInfo: function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        textAlign: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _formatLabel: function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  },\n\n  /**\n   * @private\n   * @param {boolean} showOrHide true: show, false: hide\n   */\n  _showDataInfo: function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var handleLabels = this._displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide);\n  },\n  _onDragMove: function (handleIndex, dx, dy) {\n    this._dragging = true; // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.barGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime);\n\n    if (realtime) {\n      realtime && this._dispatchZoomAction();\n    }\n  },\n  _onDragEnd: function () {\n    this._dragging = false;\n\n    this._showDataInfo(false);\n\n    this._dispatchZoomAction();\n  },\n  _onClickPanelClick: function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    this._dispatchZoomAction();\n  },\n\n  /**\n   * This action will be throttled.\n   * @private\n   */\n  _dispatchZoomAction: function () {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      start: range[0],\n      end: range[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _findCoordRect: function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\n      if (!rect && coordInfoList.length) {\n        var coordSys = coordInfoList[0].model.coordinateSystem;\n        rect = coordSys.getRect && coordSys.getRect();\n      }\n    });\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  }\n});\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = SliderZoomView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar Graph = require(\"../../data/Graph\");\n\nvar linkList = require(\"../../data/helper/linkList\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar createListFromArray = require(\"./createListFromArray\");\n\nfunction _default(nodes, edges, hostModel, directed, beforeLink) {\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = hostModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, hostModel, hostModel.ecModel);\n  } else {\n    // FIXME\n    var coordSysCtor = CoordinateSystem.get(coordSys); // FIXME\n\n    var dimensionNames = completeDimensions((coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []).concat(['value']), nodes);\n    nodeData = new List(dimensionNames, hostModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], hostModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar IndicatorAxis = require(\"./IndicatorAxis\");\n\nvar IntervalScale = require(\"../../scale/Interval\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _axisHelper = require(\"../axisHelper\");\n\nvar getScaleExtent = _axisHelper.getScaleExtent;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n// TODO clockwise\nfunction Radar(radarModel, ecModel, api) {\n  this._model = radarModel;\n  /**\n   * Radar dimensions\n   * @type {Array.<string>}\n   */\n\n  this.dimensions = [];\n  this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n    var dim = 'indicator_' + idx;\n    var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n    indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\n\n    indicatorAxis.model = indicatorModel;\n    indicatorModel.axis = indicatorAxis;\n    this.dimensions.push(dim);\n    return indicatorAxis;\n  }, this);\n  this.resize(radarModel, api);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cx;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cy;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.startAngle;\n}\n\nRadar.prototype.getIndicatorAxes = function () {\n  return this._indicatorAxes;\n};\n\nRadar.prototype.dataToPoint = function (value, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n};\n\nRadar.prototype.coordToPoint = function (coord, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  var angle = indicatorAxis.angle;\n  var x = this.cx + coord * Math.cos(angle);\n  var y = this.cy - coord * Math.sin(angle);\n  return [x, y];\n};\n\nRadar.prototype.pointToData = function (pt) {\n  var dx = pt[0] - this.cx;\n  var dy = pt[1] - this.cy;\n  var radius = Math.sqrt(dx * dx + dy * dy);\n  dx /= radius;\n  dy /= radius;\n  var radian = Math.atan2(-dy, dx); // Find the closest angle\n  // FIXME index can calculated directly\n\n  var minRadianDiff = Infinity;\n  var closestAxis;\n  var closestAxisIdx = -1;\n\n  for (var i = 0; i < this._indicatorAxes.length; i++) {\n    var indicatorAxis = this._indicatorAxes[i];\n    var diff = Math.abs(radian - indicatorAxis.angle);\n\n    if (diff < minRadianDiff) {\n      closestAxis = indicatorAxis;\n      closestAxisIdx = i;\n      minRadianDiff = diff;\n    }\n  }\n\n  return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n};\n\nRadar.prototype.resize = function (radarModel, api) {\n  var center = radarModel.get('center');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var viewSize = Math.min(viewWidth, viewHeight) / 2;\n  this.cx = numberUtil.parsePercent(center[0], viewWidth);\n  this.cy = numberUtil.parsePercent(center[1], viewHeight);\n  this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n  this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n  zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n    indicatorAxis.setExtent(0, this.r);\n    var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\n\n    angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n    indicatorAxis.angle = angle;\n  }, this);\n};\n\nRadar.prototype.update = function (ecModel, api) {\n  var indicatorAxes = this._indicatorAxes;\n  var radarModel = this._model;\n  zrUtil.each(indicatorAxes, function (indicatorAxis) {\n    indicatorAxis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n    if (radarSeries.get('coordinateSystem') !== 'radar' || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n      return;\n    }\n\n    var data = radarSeries.getData();\n    zrUtil.each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.unionExtentFromData(data, indicatorAxis.dim);\n    });\n  }, this);\n  var splitNumber = radarModel.get('splitNumber');\n\n  function increaseInterval(interval) {\n    var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\n\n    var f = interval / exp10;\n\n    if (f === 2) {\n      f = 5;\n    } else {\n      // f is 2 or 5\n      f *= 2;\n    }\n\n    return f * exp10;\n  } // Force all the axis fixing the maxSplitNumber.\n\n\n  zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n    var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    var axisModel = indicatorAxis.model;\n    var scale = indicatorAxis.scale;\n    var fixedMin = axisModel.getMin();\n    var fixedMax = axisModel.getMax();\n    var interval = scale.getInterval();\n\n    if (fixedMin != null && fixedMax != null) {\n      // User set min, max, divide to get new interval\n      scale.setExtent(+fixedMin, +fixedMax);\n      scale.setInterval((fixedMax - fixedMin) / splitNumber);\n    } else if (fixedMin != null) {\n      var max; // User set min, expand extent on the other side\n\n      do {\n        max = fixedMin + interval * splitNumber;\n        scale.setExtent(+fixedMin, max); // Interval must been set after extent\n        // FIXME\n\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n    } else if (fixedMax != null) {\n      var min; // User set min, expand extent on the other side\n\n      do {\n        min = fixedMax - interval * splitNumber;\n        scale.setExtent(min, +fixedMax);\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n    } else {\n      var nicedSplitNumber = scale.getTicks().length - 1;\n\n      if (nicedSplitNumber > splitNumber) {\n        interval = increaseInterval(interval);\n      } // PENDING\n\n\n      var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n      var halfSplitNumber = Math.round(splitNumber / 2);\n      scale.setExtent(numberUtil.round(center - halfSplitNumber * interval), numberUtil.round(center + (splitNumber - halfSplitNumber) * interval));\n      scale.setInterval(interval);\n    }\n  });\n};\n/**\n * Radar dimensions is based on the data\n * @type {Array}\n */\n\n\nRadar.dimensions = [];\n\nRadar.create = function (ecModel, api) {\n  var radarList = [];\n  ecModel.eachComponent('radar', function (radarModel) {\n    var radar = new Radar(radarModel, ecModel, api);\n    radarList.push(radar);\n    radarModel.coordinateSystem = radar;\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries) {\n    if (radarSeries.get('coordinateSystem') === 'radar') {\n      // Inject coordinate system\n      radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n    }\n  });\n  return radarList;\n};\n\nCoordinateSystem.register('radar', Radar);\nvar _default = Radar;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./graph/GraphSeries\");\n\nrequire(\"./graph/GraphView\");\n\nrequire(\"./graph/graphAction\");\n\nvar categoryFilter = require(\"./graph/categoryFilter\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar categoryVisual = require(\"./graph/categoryVisual\");\n\nvar edgeVisual = require(\"./graph/edgeVisual\");\n\nvar simpleLayout = require(\"./graph/simpleLayout\");\n\nvar circularLayout = require(\"./graph/circularLayout\");\n\nvar forceLayout = require(\"./graph/forceLayout\");\n\nvar createView = require(\"./graph/createView\");\n\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(zrUtil.curry(visualSymbol, 'graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt.label, ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function () {\n    return this._data;\n  },\n  setData: function (data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, modelUtil.dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueArr = data.mapArray('value', function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label.normal');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine.normal');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n      textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n      textAlign = 'center';\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent('value');\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function (idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get('value', idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + itemHeight);\n      y += itemHeight + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e(require(\"echarts\")):\"function\"==typeof define&&define.amd?define([\"echarts\"],e):\"object\"==typeof exports?exports.amap=e(require(\"echarts\")):(t.echarts=t.echarts||{},t.echarts.amap=e(t.echarts))}(this,function(t){return function(t){function e(n){if(o[n])return o[n].exports;var a=o[n]={i:n,l:!1,exports:{}};return t[n].call(a.exports,a,a.exports,e),a.l=!0,a.exports}var o={};return e.m=t,e.c=o,e.i=function(t){return t},e.d=function(t,o,n){e.o(t,o)||Object.defineProperty(t,o,{configurable:!1,enumerable:!0,get:n})},e.n=function(t){var o=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(o,\"a\",o),o},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"\",e(e.s=4)}([function(e,o){e.exports=t},function(t,e,o){function n(t,e){this._amap=t,this.dimensions=[\"lng\",\"lat\"],this._mapOffset=[0,0],this._api=e}var a=o(0);n.prototype.dimensions=[\"lng\",\"lat\"],n.prototype.setZoom=function(t){this._zoom=t},n.prototype.setCenter=function(t){this._center=this._amap.lnglatToPixel(t)},n.prototype.setMapOffset=function(t){this._mapOffset=t},n.prototype.getAMap=function(){return this._amap},n.prototype.dataToPoint=function(t){var e=new AMap.LngLat(t[0],t[1]),o=this._amap.lngLatToContainer(e),n=this._mapOffset;return[o.x-n[0],o.y-n[1]]},n.prototype.pointToData=function(t){var e=this._mapOffset,t=this._amap.containerToLngLat({x:t[0]+e[0],y:t[1]+e[1]});return[t.lng,t.lat]},n.prototype.getViewRect=function(){var t=this._api;return new a.graphic.BoundingRect(0,0,t.getWidth(),t.getHeight())},n.prototype.getRoamTransform=function(){return a.matrix.create()};n.dimensions=n.prototype.dimensions,n.create=function(t,e){var o,r=e.getDom();t.eachComponent(\"amap\",function(t){var i=e.getZr().painter.getViewportRoot();if(\"undefined\"==typeof AMap)throw new Error(\"AMap api is not loaded\");if(o)throw new Error(\"Only one amap component can exist\");if(!t.__amap){var p=r.querySelector(\".ec-extension-amap\");p&&(i.style.left=\"0px\",i.style.top=\"0px\",r.removeChild(p)),p=document.createElement(\"div\"),p.style.cssText=\"width:100%;height:100%\",p.classList.add(\"ec-extension-amap\"),r.appendChild(p);var s=t.get()||{};s=t.__options=a.util.clone(s);var c=t.__amap=new AMap.Map(p,s),f=t.__layer=new AMap.CustomLayer(i);f.setMap(c)}var c=t.getAMap(),f=t.getLayer();f.hide();var m=c.getZoom(),u=c.getCenter();o=new n(c,e),o.setMapOffset(t.__mapOffset||[0,0]),o.setZoom(m),o.setCenter([u.lng,u.lat]),t.coordinateSystem=o,f.show()}),t.eachSeries(function(t){\"amap\"===t.get(\"coordinateSystem\")&&(t.coordinateSystem=o)})},t.exports=n},function(t,e,o){function n(t,e){return t&&e&&t[0]===e[0]&&t[1]===e[1]}t.exports=o(0).extendComponentModel({type:\"amap\",getAMap:function(){return this.__amap},getLayer:function(){return this.__layer},getMapOptions:function(){return this.__options},setCenterAndZoom:function(t,e){this.option.center=t,this.option.zoom=e},centerOrZoomChanged:function(t,e){var o=this.option;return!(n(t,o.center)&&e===o.zoom)},defaultOption:{center:[116.397475,39.908695],zoom:4}})},function(t,e,o){function n(t,e,o){var n,a,r,i;return i=function(){n=!1,a&&(r.apply(o,a),a=!1)},r=function(){n?a=arguments:(t.apply(o,arguments),setTimeout(i,e),n=!0)}}var a=o(0);t.exports=o(0).extendComponentView({type:\"amap\",render:function(t,e,o){function r(){p||o.dispatchAction({type:\"amapRoam\"})}function i(t){a.getInstanceByDom(o.getDom()).resize(),m.call(this,t)}var p=!0,s=t.getAMap(),c=o.getZr().painter.getViewportRoot(),f=t.coordinateSystem,m=function(e){if(!p){var n=c.parentNode.parentNode.parentNode,a=[-parseInt(n.style.left,10)||0,-parseInt(n.style.top,10)||0];c.style.left=a[0]+\"px\",c.style.top=a[1]+\"px\",f.setMapOffset(a),t.__mapOffset=a,o.dispatchAction({type:\"amapRoam\"})}},u=n(i,300,s);s.off(\"movestart\",this._oldMoveHandler),s.off(\"zoomend\",this._oldZoomEndHandler),s.off(\"moveend\",this._oldZoomEndHandler),s.off(\"complete\",this._oldZoomEndHandler),t.get(\"resizeEnable\")&&s.off(\"resize\",this._oldResizeHandler),s.on(\"movestart\",m),s.on(\"zoomend\",r),s.on(\"moveend\",r),s.on(\"complete\",r),t.get(\"resizeEnable\")&&s.on(\"resize\",u),this._oldMoveHandler=m,this._oldZoomEndHandler=r,this._oldResizeHandler=u,p=!1}})},function(t,e,o){o(0).registerCoordinateSystem(\"amap\",o(1)),o(2),o(3),o(0).registerAction({type:\"amapRoam\",event:\"amapRoam\",update:\"updateLayout\"},function(t,e){e.eachComponent(\"amap\",function(t){var e=t.getAMap(),o=e.getCenter();t.setCenterAndZoom([o.lng,o.lat],e.getZoom())})}),t.exports={version:\"1.0.0-rc.6\"}}])});\n//# sourceMappingURL=echarts-amap.min.js.map","var echarts = require(\"../../echarts\");\n\nvar _poly = require(\"../line/poly\");\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/**\n * @file  The file used to draw themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function () {\n    this._layers = [];\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label.normal');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('itemStyle.emphasis');\n      var itemStyleModel = itemModel.getModel('itemStyle.normal');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('echarts/lib/echarts'), require('echarts/lib/component/tooltip'), require('echarts/lib/component/legend'), require('echarts/lib/chart/bar'), require('echarts/lib/chart/line'), require('echarts/lib/chart/pie'), require('echarts/lib/chart/funnel'), require('echarts/lib/chart/radar'), require('echarts/lib/chart/map'), require('echarts/extension/bmap/bmap'), require('echarts-amap'), require('echarts/lib/chart/sankey'), require('echarts/lib/chart/heatmap'), require('echarts/lib/component/visualMap'), require('echarts/lib/chart/scatter'), require('echarts/lib/chart/candlestick'), require('echarts/lib/component/dataZoom'), require('echarts/lib/chart/gauge'), require('echarts/lib/chart/tree'), require('echarts-liquidfill'), require('echarts-wordcloud')) :\n  typeof define === 'function' && define.amd ? define(['echarts/lib/echarts', 'echarts/lib/component/tooltip', 'echarts/lib/component/legend', 'echarts/lib/chart/bar', 'echarts/lib/chart/line', 'echarts/lib/chart/pie', 'echarts/lib/chart/funnel', 'echarts/lib/chart/radar', 'echarts/lib/chart/map', 'echarts/extension/bmap/bmap', 'echarts-amap', 'echarts/lib/chart/sankey', 'echarts/lib/chart/heatmap', 'echarts/lib/component/visualMap', 'echarts/lib/chart/scatter', 'echarts/lib/chart/candlestick', 'echarts/lib/component/dataZoom', 'echarts/lib/chart/gauge', 'echarts/lib/chart/tree', 'echarts-liquidfill', 'echarts-wordcloud'], factory) :\n  (global.VeIndex = factory(global.echarts));\n}(this, (function (echartsLib) { 'use strict';\n\n  echartsLib = echartsLib && echartsLib.hasOwnProperty('default') ? echartsLib['default'] : echartsLib;\n\n  var DEFAULT_THEME = {\n    categoryAxis: {\n      axisLine: { show: false },\n      axisTick: { show: false },\n      splitLine: { show: false }\n    },\n    valueAxis: {\n      axisLine: { show: false }\n    },\n    line: {\n      smooth: true\n    },\n    grid: {\n      containLabel: true,\n      left: 10,\n      right: 10\n    }\n  };\n\n  var DEFAULT_COLORS = ['#19d4ae', '#5ab1ef', '#fa6e86', '#ffb980', '#0067a6', '#c4b4e4', '#d87a80', '#9cbbff', '#d9d0c7', '#87a997', '#d49ea2', '#5b4947', '#7ba3a8'];\n\n  var HEAT_MAP_COLOR = ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026'];\n\n  var HEAT_BMAP_COLOR = ['blue', 'blue', 'green', 'yellow', 'red'];\n\n  var itemPoint = function itemPoint(color) {\n    return ['<span style=\"', 'background-color:' + color + ';', 'display: inline-block;', 'width: 10px;', 'height: 10px;', 'border-radius: 50%;', 'margin-right:2px;', '\"></span>'].join('');\n  };\n\n  var STATIC_PROPS = ['initOptions', 'loading', 'dataEmpty', 'judgeWidth', 'widthChangeDelay'];\n\n  var ECHARTS_SETTINGS = ['grid', 'dataZoom', 'visualMap', 'toolbox', 'title', 'legend', 'xAxis', 'yAxis', 'radar', 'tooltip', 'axisPointer', 'brush', 'geo', 'timeline', 'graphic', 'series', 'backgroundColor', 'textStyle'];\n\n  var ABBR = {\n    th: 3,\n    mi: 6,\n    bi: 9,\n    tr: 12\n  };\n\n  var DEFAULT_OPTIONS = {\n    zeroFormat: null,\n    nullFormat: null,\n    defaultFormat: '0,0',\n    scalePercentBy100: true,\n    abbrLabel: {\n      th: 'k',\n      mi: 'm',\n      bi: 'b',\n      tr: 't'\n    }\n  };\n\n  var TRILLION = 1e12;\n  var BILLION = 1e9;\n  var MILLION = 1e6;\n  var THOUSAND = 1e3;\n\n  function numIsNaN(value) {\n    return typeof value === 'number' && isNaN(value);\n  }\n\n  function toFixed(value, maxDecimals, roundingFunction, optionals) {\n    var splitValue = value.toString().split('.');\n    var minDecimals = maxDecimals - (optionals || 0);\n    var boundedPrecision = splitValue.length === 2 ? Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals) : minDecimals;\n    var power = Math.pow(10, boundedPrecision);\n    var output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\n\n    if (optionals > maxDecimals - boundedPrecision) {\n      var optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n      output = output.replace(optionalsRegExp, '');\n    }\n\n    return output;\n  }\n\n  function numberToFormat(options, value, format, roundingFunction) {\n    var abs = Math.abs(value);\n    var negP = false;\n    var optDec = false;\n    var abbr = '';\n    var decimal = '';\n    var neg = false;\n    var abbrForce = void 0;\n    var signed = void 0;\n    format = format || '';\n\n    value = value || 0;\n\n    if (~format.indexOf('(')) {\n      negP = true;\n      format = format.replace(/[(|)]/g, '');\n    } else if (~format.indexOf('+') || ~format.indexOf('-')) {\n      signed = ~format.indexOf('+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\n      format = format.replace(/[+|-]/g, '');\n    }\n    if (~format.indexOf('a')) {\n      abbrForce = format.match(/a(k|m|b|t)?/);\n\n      abbrForce = abbrForce ? abbrForce[1] : false;\n\n      if (~format.indexOf(' a')) abbr = ' ';\n      format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n\n      if (abs >= TRILLION && !abbrForce || abbrForce === 't') {\n        abbr += options.abbrLabel.tr;\n        value = value / TRILLION;\n      } else if (abs < TRILLION && abs >= BILLION && !abbrForce || abbrForce === 'b') {\n        abbr += options.abbrLabel.bi;\n        value = value / BILLION;\n      } else if (abs < BILLION && abs >= MILLION && !abbrForce || abbrForce === 'm') {\n        abbr += options.abbrLabel.mi;\n        value = value / MILLION;\n      } else if (abs < MILLION && abs >= THOUSAND && !abbrForce || abbrForce === 'k') {\n        abbr += options.abbrLabel.th;\n        value = value / THOUSAND;\n      }\n    }\n    if (~format.indexOf('[.]')) {\n      optDec = true;\n      format = format.replace('[.]', '.');\n    }\n    var int = value.toString().split('.')[0];\n    var precision = format.split('.')[1];\n    var thousands = format.indexOf(',');\n    var leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\n\n    if (precision) {\n      if (~precision.indexOf('[')) {\n        precision = precision.replace(']', '');\n        precision = precision.split('[');\n        decimal = toFixed(value, precision[0].length + precision[1].length, roundingFunction, precision[1].length);\n      } else {\n        decimal = toFixed(value, precision.length, roundingFunction);\n      }\n\n      int = decimal.split('.')[0];\n      decimal = ~decimal.indexOf('.') ? '.' + decimal.split('.')[1] : '';\n      if (optDec && +decimal.slice(1) === 0) decimal = '';\n    } else {\n      int = toFixed(value, 0, roundingFunction);\n    }\n    if (abbr && !abbrForce && +int >= 1000 && abbr !== ABBR.trillion) {\n      int = '' + +int / 1000;\n      abbr = ABBR.million;\n    }\n    if (~int.indexOf('-')) {\n      int = int.slice(1);\n      neg = true;\n    }\n    if (int.length < leadingCount) {\n      for (var i = leadingCount - int.length; i > 0; i--) {\n        int = '0' + int;\n      }\n    }\n\n    if (thousands > -1) {\n      int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + ',');\n    }\n\n    if (!format.indexOf('.')) int = '';\n\n    var output = int + decimal + (abbr || '');\n\n    if (negP) {\n      output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\n    } else {\n      if (signed >= 0) {\n        output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\n      } else if (neg) {\n        output = '-' + output;\n      }\n    }\n\n    return output;\n  }\n\n  function extend(target, sub) {\n    Object.keys(sub).forEach(function (key) {\n      target[key] = sub[key];\n    });\n  }\n\n  var numerifyPercent = {\n    regexp: /%/,\n    format: function format(value, formatType, roundingFunction, numerify) {\n      var space = ~formatType.indexOf(' %') ? ' ' : '';\n      var output = void 0;\n\n      if (numerify.options.scalePercentBy100) value = value * 100;\n\n      formatType = formatType.replace(/\\s?%/, '');\n\n      output = numerify._numberToFormat(value, formatType, roundingFunction);\n\n      if (~output.indexOf(')')) {\n        output = output.split('');\n        output.splice(-1, 0, space + '%');\n        output = output.join('');\n      } else {\n        output = output + space + '%';\n      }\n\n      return output;\n    }\n  };\n\n  var options = {};\n  var formats = {};\n\n  extend(options, DEFAULT_OPTIONS);\n\n  function format(value, formatType, roundingFunction) {\n    formatType = formatType || options.defaultFormat;\n    roundingFunction = roundingFunction || Math.round;\n    var output = void 0;\n    var formatFunction = void 0;\n\n    if (value === 0 && options.zeroFormat !== null) {\n      output = options.zeroFormat;\n    } else if (value === null && options.nullFormat !== null) {\n      output = options.nullFormat;\n    } else {\n      for (var kind in formats) {\n        if (formats[kind] && formatType.match(formats[kind].regexp)) {\n          formatFunction = formats[kind].format;\n          break;\n        }\n      }\n      formatFunction = formatFunction || numberToFormat.bind(null, options);\n      output = formatFunction(value, formatType, roundingFunction, numerify);\n    }\n\n    return output;\n  }\n\n  function numerify(input, formatType, roundingFunction) {\n    var value = void 0;\n\n    if (input === 0 || typeof input === 'undefined') {\n      value = 0;\n    } else if (input === null || numIsNaN(input)) {\n      value = null;\n    } else if (typeof input === 'string') {\n      if (options.zeroFormat && input === options.zeroFormat) {\n        value = 0;\n      } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n        value = null;\n      } else {\n        value = +input;\n      }\n    } else {\n      value = +input || null;\n    }\n\n    return format(value, formatType, roundingFunction);\n  }\n\n  numerify.options = options;\n  numerify._numberToFormat = numberToFormat.bind(null, options);\n  numerify.register = function (name, format) {\n    formats[name] = format;\n  };\n  numerify.unregister = function (name) {\n    formats[name] = null;\n  };\n  numerify.setOptions = function (opts) {\n    extend(options, opts);\n  };\n  numerify.reset = function () {\n    extend(options, DEFAULT_OPTIONS);\n  };\n\n  numerify.register('percentage', numerifyPercent);\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  var defineProperty = function (obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  };\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var toArray = function (arr) {\n    return Array.isArray(arr) ? arr : Array.from(arr);\n  };\n\n  function debounce(fn, delay) {\n    var timer = null;\n    return function () {\n      var self = this;\n      var args = arguments;\n      clearTimeout(timer);\n      timer = setTimeout(function () {\n        fn.apply(self, args);\n      }, delay);\n    };\n  }\n\n  function set$1(target, path, value) {\n    if (!path) return;\n    var targetTemp = target;\n    var pathArr = path.split('.');\n    pathArr.forEach(function (item, index) {\n      if (index === pathArr.length - 1) {\n        targetTemp[item] = value;\n      } else {\n        if (!targetTemp[item]) targetTemp[item] = {};\n        targetTemp = targetTemp[item];\n      }\n    });\n  }\n\n  function get$1(target, path, defaultValue) {\n    if (!path) return target;\n    var pathArr = path.split('.');\n    var targetTemp = target;\n    pathArr.some(function (item, index) {\n      if (targetTemp[item] === undefined) {\n        targetTemp = defaultValue;\n        return true;\n      } else {\n        targetTemp = targetTemp[item];\n      }\n    });\n    return targetTemp;\n  }\n\n  var _typeof$1 = typeof Symbol === \"function\" && _typeof(Symbol.iterator) === \"symbol\" ? function (obj) {\n    return typeof obj === 'undefined' ? 'undefined' : _typeof(obj);\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof(obj);\n  };\n\n  function getType(v) {\n    return Object.prototype.toString.call(v);\n  }\n\n  function getTypeof(v) {\n    return typeof v === 'undefined' ? 'undefined' : _typeof$1(v);\n  }\n\n  function isObject(v) {\n    return getType(v) === '[object Object]';\n  }\n\n  function isArray(v) {\n    return getType(v) === '[object Array]';\n  }\n\n  function isFunction(v) {\n    return getType(v) === '[object Function]';\n  }\n\n  function cloneDeep(v) {\n    return JSON.parse(JSON.stringify(v));\n  }\n\n  function camelToKebab(s) {\n    return s.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n\n  function hasOwn(source, target) {\n    return Object.prototype.hasOwnProperty.call(source, target);\n  }\n\n  function isEqual(alice, bob) {\n    if (alice === bob) return true;\n    if (alice === null || bob === null || getTypeof(alice) !== 'object' || getTypeof(bob) !== 'object') {\n      return alice === bob;\n    }\n\n    for (var key in alice) {\n      if (!hasOwn(alice, key)) continue;\n      var aliceValue = alice[key];\n      var bobValue = bob[key];\n      var aliceType = getTypeof(aliceValue);\n\n      if (getTypeof(bobValue) === 'undefined') {\n        return false;\n      } else if (aliceType === 'object') {\n        if (!isEqual(aliceValue, bobValue)) return false;\n      } else if (aliceValue !== bobValue) {\n        return false;\n      }\n    }\n    for (var _key in bob) {\n      if (!hasOwn(bob, _key)) continue;\n      if (getTypeof(alice)[_key] === 'undefined') return false;\n    }\n\n    return true;\n  }\n\n  var getFormated = function getFormated(val, type, digit) {\n    var defaultVal = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '-';\n\n    if (isNaN(val)) return defaultVal;\n    if (!type) return val;\n    if (isFunction(type)) return type(val, numerify);\n\n    digit = isNaN(digit) ? 0 : ++digit;\n    var digitStr = '.[' + new Array(digit).join(0) + ']';\n    var formatter = type;\n    switch (type) {\n      case 'KMB':\n        formatter = digit ? '0,0' + digitStr + 'a' : '0,0a';\n        break;\n      case 'normal':\n        formatter = digit ? '0,0' + digitStr : '0,0';\n        break;\n      case 'percent':\n        formatter = digit ? '0,0' + digitStr + '%' : '0,0.[00]%';\n        break;\n    }\n    return numerify(val, formatter);\n  };\n\n  var getStackMap = function getStackMap(stack) {\n    var stackMap = {};\n    Object.keys(stack).forEach(function (item) {\n      stack[item].forEach(function (name) {\n        stackMap[name] = item;\n      });\n    });\n    return stackMap;\n  };\n\n  var $get = function $get(url) {\n    return new Promise(function (resolve, reject) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url);\n      xhr.send(null);\n      xhr.onload = function () {\n        resolve(JSON.parse(xhr.responseText));\n      };\n      xhr.onerror = function () {\n        reject(JSON.parse(xhr.responseText));\n      };\n    });\n  };\n\n  var mapPromise = {};\n\n  var getMapJSON = function getMapJSON(_ref) {\n    var position = _ref.position,\n        positionJsonLink = _ref.positionJsonLink,\n        beforeRegisterMapOnce = _ref.beforeRegisterMapOnce,\n        mapURLProfix = _ref.mapURLProfix;\n\n    var link = positionJsonLink || '' + mapURLProfix + position + '.json';\n    if (!mapPromise[link]) {\n      mapPromise[link] = $get(link).then(function (res) {\n        if (beforeRegisterMapOnce) res = beforeRegisterMapOnce(res);\n        return res;\n      });\n    }\n    return mapPromise[link];\n  };\n\n  var bmapPromise = null;\n  var amapPromise = null;\n\n  var getBmap = function getBmap(key, v) {\n    if (!bmapPromise) {\n      bmapPromise = new Promise(function (resolve, reject) {\n        var callbackName = 'bmap' + Date.now();\n        window[callbackName] = resolve;\n        var script = document.createElement('script');\n        script.src = ['https://api.map.baidu.com/api?v=' + (v || '2.0'), 'ak=' + key, 'callback=' + callbackName].join('&');\n\n        document.body.appendChild(script);\n      });\n    }\n    return bmapPromise;\n  };\n\n  var getAmap = function getAmap(key, v) {\n    if (!amapPromise) {\n      amapPromise = new Promise(function (resolve, reject) {\n        var callbackName = 'amap' + Date.now();\n        window[callbackName] = resolve;\n        var script = document.createElement('script');\n        script.src = ['https://webapi.amap.com/maps?v=' + (v || '1.4.3'), 'key=' + key, 'callback=' + callbackName].join('&');\n\n        document.body.appendChild(script);\n      });\n    }\n    return amapPromise;\n  };\n\n  function setArrayValue(arr, index, value) {\n    if (arr[index] !== undefined) {\n      arr[index].push(value);\n    } else {\n      arr[index] = [value];\n    }\n  }\n\n  // default opacity of bar while dim-axis type is 'value'\n  var VALUE_AXIS_OPACITY = 0.5;\n\n  function getBarDimAxis(args) {\n    var innerRows = args.innerRows,\n        dimAxisName = args.dimAxisName,\n        dimension = args.dimension,\n        axisVisible = args.axisVisible,\n        dimAxisType = args.dimAxisType,\n        dims = args.dims;\n\n    return dimension.map(function (item) {\n      return {\n        type: 'category',\n        name: dimAxisName,\n        nameLocation: 'middle',\n        nameGap: 22,\n        data: dimAxisType === 'value' ? getValueAxisData(dims) : innerRows.map(function (row) {\n          return row[item];\n        }),\n        axisLabel: {\n          formatter: function formatter(v) {\n            return String(v);\n          }\n        },\n        show: axisVisible\n      };\n    });\n  }\n\n  function getValueAxisData(dims) {\n    var max = Math.max.apply(null, dims);\n    var min = Math.min.apply(null, dims);\n    var result = [];\n    for (var i = min; i <= max; i++) {\n      result.push(i);\n    }\n    return result;\n  }\n\n  function getBarMeaAxis(args) {\n    var meaAxisName = args.meaAxisName,\n        meaAxisType = args.meaAxisType,\n        axisVisible = args.axisVisible,\n        digit = args.digit,\n        scale = args.scale,\n        min = args.min,\n        max = args.max;\n\n    var meaAxisBase = {\n      type: 'value',\n      axisTick: {\n        show: false\n      },\n      show: axisVisible\n    };\n    var meaAxis = [];\n\n    var _loop = function _loop(i) {\n      if (meaAxisType[i]) {\n        meaAxis[i] = _extends({}, meaAxisBase, {\n          axisLabel: {\n            formatter: function formatter(val) {\n              return getFormated(val, meaAxisType[i], digit);\n            }\n          }\n        });\n      } else {\n        meaAxis[i] = _extends({}, meaAxisBase);\n      }\n      meaAxis[i].name = meaAxisName[i] || '';\n      meaAxis[i].scale = scale[i] || false;\n      meaAxis[i].min = min[i] || null;\n      meaAxis[i].max = max[i] || null;\n    };\n\n    for (var i = 0; i < 2; i++) {\n      _loop(i);\n    }\n\n    return meaAxis;\n  }\n\n  function getBarTooltip(args) {\n    var axisSite = args.axisSite,\n        isHistogram = args.isHistogram,\n        meaAxisType = args.meaAxisType,\n        digit = args.digit,\n        labelMap = args.labelMap;\n\n    var secondAxis = isHistogram ? axisSite.right || [] : axisSite.top || [];\n    if (labelMap) {\n      secondAxis = secondAxis.map(function (item) {\n        return labelMap[item] === undefined ? item : labelMap[item];\n      });\n    }\n    return {\n      trigger: 'axis',\n      formatter: function formatter(items) {\n        var tpl = [];\n        tpl.push(items[0].name + '<br>');\n        items.forEach(function (item) {\n          var seriesName = item.seriesName;\n          var type = ~secondAxis.indexOf(seriesName) ? meaAxisType[1] : meaAxisType[0];\n          tpl.push(itemPoint(item.color));\n          tpl.push(seriesName + ': ');\n          tpl.push(getFormated(item.value, type, digit));\n          tpl.push('<br>');\n        });\n\n        return tpl.join('');\n      }\n    };\n  }\n\n  function getValueData(seriesTemp, dims) {\n    var max = Math.max.apply(null, dims);\n    var min = Math.min.apply(null, dims);\n    var result = [];\n    for (var i = min; i <= max; i++) {\n      var index = dims.indexOf(i);\n      if (~index) {\n        result.push(seriesTemp[index]);\n      } else {\n        result.push(null);\n      }\n    }\n    return result;\n  }\n\n  function getBarSeries(args) {\n    var innerRows = args.innerRows,\n        metrics = args.metrics,\n        stack = args.stack,\n        axisSite = args.axisSite,\n        isHistogram = args.isHistogram,\n        labelMap = args.labelMap,\n        itemStyle = args.itemStyle,\n        label = args.label,\n        _args$showLine = args.showLine,\n        showLine = _args$showLine === undefined ? [] : _args$showLine,\n        dimAxisType = args.dimAxisType,\n        barGap = args.barGap,\n        opacity = args.opacity,\n        dims = args.dims;\n\n    var series = [];\n    var seriesTemp = {};\n    var secondAxis = isHistogram ? axisSite.right || [] : axisSite.top || [];\n    var secondDimAxisIndex = isHistogram ? 'yAxisIndex' : 'xAxisIndex';\n    var stackMap = stack && getStackMap(stack);\n    metrics.forEach(function (item) {\n      seriesTemp[item] = [];\n    });\n    innerRows.forEach(function (row) {\n      metrics.forEach(function (item) {\n        seriesTemp[item].push(row[item]);\n      });\n    });\n    series = Object.keys(seriesTemp).map(function (item, index) {\n      var data = dimAxisType === 'value' ? getValueData(seriesTemp[item], dims) : seriesTemp[item];\n      var seriesItem = defineProperty({\n        name: labelMap[item] != null ? labelMap[item] : item,\n        type: ~showLine.indexOf(item) ? 'line' : 'bar',\n        data: data\n      }, secondDimAxisIndex, ~secondAxis.indexOf(item) ? '1' : '0');\n\n      if (stack && stackMap[item]) seriesItem.stack = stackMap[item];\n\n      if (label) seriesItem.label = label;\n      if (itemStyle) seriesItem.itemStyle = itemStyle;\n\n      var itemOpacity = opacity || get$1(seriesItem, 'itemStyle.normal.opacity');\n      if (dimAxisType === 'value') {\n        seriesItem.barGap = barGap;\n        seriesItem.barCategoryGap = '1%';\n        if (itemOpacity == null) itemOpacity = VALUE_AXIS_OPACITY;\n      }\n\n      if (itemOpacity != null) {\n        set$1(seriesItem, 'itemStyle.normal.opacity', itemOpacity);\n      }\n\n      return seriesItem;\n    });\n\n    return series.length ? series : false;\n  }\n\n  function getLegend(args) {\n    var metrics = args.metrics,\n        labelMap = args.labelMap,\n        legendName = args.legendName;\n\n    if (!legendName && !labelMap) return { data: metrics };\n    var data = labelMap ? metrics.map(function (item) {\n      return labelMap[item] == null ? item : labelMap[item];\n    }) : metrics;\n    return {\n      data: data,\n      formatter: function formatter(name) {\n        return legendName[name] != null ? legendName[name] : name;\n      }\n    };\n  }\n\n  function getDims(rows, dimension) {\n    return rows.map(function (row) {\n      return row[dimension[0]];\n    });\n  }\n\n  var bar$1 = function bar$$1(columns, rows, settings, extra) {\n    var innerRows = cloneDeep(rows);\n    var _settings$axisSite = settings.axisSite,\n        axisSite = _settings$axisSite === undefined ? {} : _settings$axisSite,\n        _settings$dimension = settings.dimension,\n        dimension = _settings$dimension === undefined ? [columns[0]] : _settings$dimension,\n        _settings$stack = settings.stack,\n        stack = _settings$stack === undefined ? {} : _settings$stack,\n        _settings$axisVisible = settings.axisVisible,\n        axisVisible = _settings$axisVisible === undefined ? true : _settings$axisVisible,\n        _settings$digit = settings.digit,\n        digit = _settings$digit === undefined ? 2 : _settings$digit,\n        _settings$dataOrder = settings.dataOrder,\n        dataOrder = _settings$dataOrder === undefined ? false : _settings$dataOrder,\n        _settings$scale = settings.scale,\n        scale = _settings$scale === undefined ? [false, false] : _settings$scale,\n        _settings$min = settings.min,\n        min = _settings$min === undefined ? [null, null] : _settings$min,\n        _settings$max = settings.max,\n        max = _settings$max === undefined ? [null, null] : _settings$max,\n        _settings$legendName = settings.legendName,\n        legendName = _settings$legendName === undefined ? {} : _settings$legendName,\n        _settings$labelMap = settings.labelMap,\n        labelMap = _settings$labelMap === undefined ? {} : _settings$labelMap,\n        label = settings.label,\n        itemStyle = settings.itemStyle,\n        showLine = settings.showLine,\n        _settings$barGap = settings.barGap,\n        barGap = _settings$barGap === undefined ? '-100%' : _settings$barGap,\n        opacity = settings.opacity;\n    var tooltipVisible = extra.tooltipVisible,\n        legendVisible = extra.legendVisible;\n\n    var metrics = columns.slice();\n    if (axisSite.top && axisSite.bottom) {\n      metrics = axisSite.top.concat(axisSite.bottom);\n    } else if (axisSite.bottom && !axisSite.right) {\n      metrics = axisSite.bottom;\n    } else if (settings.metrics) {\n      metrics = settings.metrics;\n    } else {\n      metrics.splice(columns.indexOf(dimension[0]), 1);\n    }\n    var meaAxisType = settings.xAxisType || ['normal', 'normal'];\n    var dimAxisType = settings.yAxisType || 'category';\n    var meaAxisName = settings.xAxisName || [];\n    var dimAxisName = settings.yAxisName || '';\n    var isHistogram = false;\n\n    if (dataOrder) {\n      var _label = dataOrder.label,\n          order = dataOrder.order;\n\n      if (!_label || !order) {\n        console.warn('Need to provide name and order parameters');\n      } else {\n        innerRows.sort(function (a, b) {\n          if (order === 'desc') {\n            return a[_label] - b[_label];\n          } else {\n            return b[_label] - a[_label];\n          }\n        });\n      }\n    }\n    var dims = getDims(innerRows, dimension);\n\n    var legend$$1 = legendVisible && getLegend({ metrics: metrics, labelMap: labelMap, legendName: legendName });\n    var yAxis = getBarDimAxis({\n      innerRows: innerRows,\n      dimAxisName: dimAxisName,\n      dimension: dimension,\n      axisVisible: axisVisible,\n      dimAxisType: dimAxisType,\n      dims: dims\n    });\n    var xAxis = getBarMeaAxis({\n      meaAxisName: meaAxisName,\n      meaAxisType: meaAxisType,\n      axisVisible: axisVisible,\n      digit: digit,\n      scale: scale,\n      min: min,\n      max: max\n    });\n    var series = getBarSeries({\n      innerRows: innerRows,\n      metrics: metrics,\n      stack: stack,\n      axisSite: axisSite,\n      isHistogram: isHistogram,\n      labelMap: labelMap,\n      itemStyle: itemStyle,\n      label: label,\n      showLine: showLine,\n      dimAxisType: dimAxisType,\n      dimension: dimension,\n      barGap: barGap,\n      opacity: opacity,\n      dims: dims\n    });\n    var tooltipParams = { axisSite: axisSite, isHistogram: isHistogram, meaAxisType: meaAxisType, digit: digit, labelMap: labelMap };\n    var tooltip$$1 = tooltipVisible && getBarTooltip(tooltipParams);\n    var options = { legend: legend$$1, yAxis: yAxis, series: series, xAxis: xAxis, tooltip: tooltip$$1 };\n    return options;\n  };\n\n  var histogram = function histogram(columns, rows, settings, status) {\n    var innerRows = cloneDeep(rows);\n    var _settings$axisSite2 = settings.axisSite,\n        axisSite = _settings$axisSite2 === undefined ? {} : _settings$axisSite2,\n        _settings$dimension2 = settings.dimension,\n        dimension = _settings$dimension2 === undefined ? [columns[0]] : _settings$dimension2,\n        _settings$stack2 = settings.stack,\n        stack = _settings$stack2 === undefined ? {} : _settings$stack2,\n        _settings$axisVisible2 = settings.axisVisible,\n        axisVisible = _settings$axisVisible2 === undefined ? true : _settings$axisVisible2,\n        _settings$digit2 = settings.digit,\n        digit = _settings$digit2 === undefined ? 2 : _settings$digit2,\n        _settings$dataOrder2 = settings.dataOrder,\n        dataOrder = _settings$dataOrder2 === undefined ? false : _settings$dataOrder2,\n        _settings$scale2 = settings.scale,\n        scale = _settings$scale2 === undefined ? [false, false] : _settings$scale2,\n        _settings$min2 = settings.min,\n        min = _settings$min2 === undefined ? [null, null] : _settings$min2,\n        _settings$max2 = settings.max,\n        max = _settings$max2 === undefined ? [null, null] : _settings$max2,\n        _settings$labelMap2 = settings.labelMap,\n        labelMap = _settings$labelMap2 === undefined ? {} : _settings$labelMap2,\n        _settings$legendName2 = settings.legendName,\n        legendName = _settings$legendName2 === undefined ? {} : _settings$legendName2,\n        label = settings.label,\n        itemStyle = settings.itemStyle,\n        showLine = settings.showLine,\n        _settings$barGap2 = settings.barGap,\n        barGap = _settings$barGap2 === undefined ? '-100%' : _settings$barGap2,\n        opacity = settings.opacity;\n\n\n    if (dataOrder) {\n      var _label2 = dataOrder.label,\n          order = dataOrder.order;\n\n      if (!_label2 || !order) {\n        console.warn('Need to provide name and order parameters');\n      } else {\n        innerRows.sort(function (a, b) {\n          if (order === 'desc') {\n            return a[_label2] - b[_label2];\n          } else {\n            return b[_label2] - a[_label2];\n          }\n        });\n      }\n    }\n\n    var tooltipVisible = status.tooltipVisible,\n        legendVisible = status.legendVisible;\n\n    var metrics = columns.slice();\n    if (axisSite.left && axisSite.right) {\n      metrics = axisSite.left.concat(axisSite.right);\n    } else if (axisSite.left && !axisSite.right) {\n      metrics = axisSite.left;\n    } else if (settings.metrics) {\n      metrics = settings.metrics;\n    } else {\n      metrics.splice(columns.indexOf(dimension[0]), 1);\n    }\n    var meaAxisType = settings.yAxisType || ['normal', 'normal'];\n    var dimAxisType = settings.xAxisType || 'category';\n    var meaAxisName = settings.yAxisName || [];\n    var dimAxisName = settings.xAxisName || '';\n    var isHistogram = true;\n    var dims = getDims(innerRows, dimension);\n\n    var legend$$1 = legendVisible && getLegend({ metrics: metrics, labelMap: labelMap, legendName: legendName });\n    var xAxis = getBarDimAxis({\n      innerRows: innerRows,\n      dimAxisName: dimAxisName,\n      dimension: dimension,\n      axisVisible: axisVisible,\n      dimAxisType: dimAxisType,\n      dims: dims\n    });\n    var yAxis = getBarMeaAxis({\n      meaAxisName: meaAxisName,\n      meaAxisType: meaAxisType,\n      axisVisible: axisVisible,\n      digit: digit,\n      scale: scale,\n      min: min,\n      max: max\n    });\n    var series = getBarSeries({\n      innerRows: innerRows,\n      metrics: metrics,\n      stack: stack,\n      axisSite: axisSite,\n      isHistogram: isHistogram,\n      labelMap: labelMap,\n      itemStyle: itemStyle,\n      label: label,\n      showLine: showLine,\n      dimAxisType: dimAxisType,\n      dimension: dimension,\n      barGap: barGap,\n      opacity: opacity,\n      dims: dims\n    });\n    var tooltipParams = { axisSite: axisSite, isHistogram: isHistogram, meaAxisType: meaAxisType, digit: digit, labelMap: labelMap };\n    var tooltip$$1 = tooltipVisible && getBarTooltip(tooltipParams);\n    var options = { legend: legend$$1, yAxis: yAxis, series: series, xAxis: xAxis, tooltip: tooltip$$1 };\n    return options;\n  };\n\n  var Loading = { render: function render() {\n      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: \"v-charts-component-loading\" }, [_c('div', { staticClass: \"loader\" }, [_c('div', { staticClass: \"loading-spinner\" }, [_c('svg', { staticClass: \"circular\", attrs: { \"viewBox\": \"25 25 50 50\" } }, [_c('circle', { staticClass: \"path\", attrs: { \"cx\": \"50\", \"cy\": \"50\", \"r\": \"20\", \"fill\": \"none\" } })])])])]);\n    }, staticRenderFns: []\n  };\n\n  var DataEmpty = { render: function render() {\n      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: \"v-charts-data-empty\" }, [_vm._v(\" 暂无数据 \")]);\n    }, staticRenderFns: []\n  };\n\n  function setExtend (options, extend) {\n    Object.keys(extend).forEach(function (attr) {\n      var value = extend[attr];\n      if (~attr.indexOf('.')) {\n        // eg: a.b.c a.1.b\n        set$1(options, attr, value);\n      } else if (typeof value === 'function') {\n        // get callback value\n        options[attr] = value(options[attr]);\n      } else {\n        // mixin extend value\n        if (isArray(options[attr]) && isObject(options[attr][0])) {\n          // eg: [{ xx: 1 }, { xx: 2 }]\n          options[attr].forEach(function (option, index) {\n            options[attr][index] = _extends({}, option, value);\n          });\n        } else if (isObject(options[attr])) {\n          // eg: { xx: 1, yy: 2 }\n          options[attr] = _extends({}, options[attr], value);\n        } else {\n          options[attr] = value;\n        }\n      }\n    });\n  }\n\n  function setMark (seriesItem, marks) {\n    Object.keys(marks).forEach(function (key) {\n      if (marks[key]) seriesItem[key] = marks[key];\n    });\n  }\n\n  function setAnimation (options, animation) {\n    Object.keys(animation).forEach(function (key) {\n      options[key] = animation[key];\n    });\n  }\n\n  var Core = {\n    render: function render(h) {\n      return h('div', {\n        class: [camelToKebab(this.$options.name || this.$options._componentTag)],\n        style: this.canvasStyle\n      }, [h('div', {\n        style: this.canvasStyle,\n        class: { 'v-charts-mask-status': this.dataEmpty || this.loading },\n        ref: 'canvas'\n      }), h(DataEmpty, {\n        style: { display: this.dataEmpty ? '' : 'none' }\n      }), h(Loading, {\n        style: { display: this.loading ? '' : 'none' }\n      }), this.$slots.default]);\n    },\n\n\n    props: {\n      data: { type: [Object, Array], default: function _default() {\n          return {};\n        }\n      },\n      settings: { type: Object, default: function _default() {\n          return {};\n        }\n      },\n      width: { type: String, default: 'auto' },\n      height: { type: String, default: '400px' },\n      beforeConfig: { type: Function },\n      afterConfig: { type: Function },\n      afterSetOption: { type: Function },\n      afterSetOptionOnce: { type: Function },\n      events: { type: Object },\n      grid: { type: [Object, Array] },\n      colors: { type: Array },\n      tooltipVisible: { type: Boolean, default: true },\n      legendVisible: { type: Boolean, default: true },\n      legendPosition: { type: String },\n      markLine: { type: Object },\n      markArea: { type: Object },\n      markPoint: { type: Object },\n      visualMap: { type: [Object, Array] },\n      dataZoom: { type: [Object, Array] },\n      toolbox: { type: [Object, Array] },\n      initOptions: { type: Object, default: function _default() {\n          return {};\n        }\n      },\n      title: [Object, Array],\n      legend: [Object, Array],\n      xAxis: [Object, Array],\n      yAxis: [Object, Array],\n      radar: Object,\n      tooltip: Object,\n      axisPointer: [Object, Array],\n      brush: [Object, Array],\n      geo: [Object, Array],\n      timeline: [Object, Array],\n      graphic: [Object, Array],\n      series: [Object, Array],\n      backgroundColor: [Object, String],\n      textStyle: [Object, Array],\n      animation: Object,\n      theme: Object,\n      themeName: String,\n      loading: Boolean,\n      dataEmpty: Boolean,\n      extend: Object,\n      judgeWidth: { type: Boolean, default: false },\n      widthChangeDelay: { type: Number, default: 300 },\n      tooltipFormatter: { type: Function },\n      resizeable: { type: Boolean, default: true },\n      resizeDelay: { type: Number, default: 200 },\n      changeDelay: { type: Number, default: 0 },\n      setOptionOpts: { type: [Boolean, Object], default: true },\n      cancelResizeCheck: Boolean,\n      notSetUnchange: Array,\n      log: Boolean\n    },\n\n    watch: {\n      data: {\n        deep: true,\n        handler: function handler(v) {\n          if (v) {\n            this.changeHandler();\n          }\n        }\n      },\n\n      settings: {\n        deep: true,\n        handler: function handler(v) {\n          if (v.type && this.chartLib) this.chartHandler = this.chartLib[v.type];\n          this.changeHandler();\n        }\n      },\n\n      width: 'nextTickResize',\n      height: 'nextTickResize',\n\n      events: {\n        deep: true,\n        handler: 'createEventProxy'\n      },\n\n      theme: {\n        deep: true,\n        handler: 'themeChange'\n      },\n\n      themeName: 'themeChange',\n\n      resizeable: 'resizeableHandler'\n    },\n\n    computed: {\n      canvasStyle: function canvasStyle() {\n        return {\n          width: this.width,\n          height: this.height,\n          position: 'relative'\n        };\n      },\n      chartColor: function chartColor() {\n        return this.colors || this.theme && this.theme.color || DEFAULT_COLORS;\n      }\n    },\n\n    methods: {\n      dataHandler: function dataHandler() {\n        if (!this.chartHandler) return;\n        var data = this.data;\n        var _data = data,\n            _data$columns = _data.columns,\n            columns = _data$columns === undefined ? [] : _data$columns,\n            _data$rows = _data.rows,\n            rows = _data$rows === undefined ? [] : _data$rows;\n\n        var extra = {\n          tooltipVisible: this.tooltipVisible,\n          legendVisible: this.legendVisible,\n          echarts: this.echarts,\n          color: this.chartColor,\n          tooltipFormatter: this.tooltipFormatter,\n          _once: this._once\n        };\n        if (this.beforeConfig) data = this.beforeConfig(data);\n\n        var options = this.chartHandler(columns, rows, this.settings, extra);\n        if (options) {\n          if (typeof options.then === 'function') {\n            options.then(this.optionsHandler);\n          } else {\n            this.optionsHandler(options);\n          }\n        }\n      },\n      nextTickResize: function nextTickResize() {\n        this.$nextTick(this.resize);\n      },\n      resize: function resize() {\n        if (!this.cancelResizeCheck) {\n          if (this.$el && this.$el.clientWidth && this.$el.clientHeight) {\n            this.echartsResize();\n          }\n        } else {\n          this.echartsResize();\n        }\n      },\n      echartsResize: function echartsResize() {\n        this.echarts && this.echarts.resize();\n      },\n      optionsHandler: function optionsHandler(options) {\n        var _this = this;\n\n        // legend\n        if (this.legendPosition && options.legend) {\n          options.legend[this.legendPosition] = 10;\n          if (~['left', 'right'].indexOf(this.legendPosition)) {\n            options.legend.top = 'middle';\n            options.legend.orient = 'vertical';\n          }\n        }\n        // color\n        options.color = this.chartColor;\n        // echarts self settings\n        ECHARTS_SETTINGS.forEach(function (setting) {\n          if (_this[setting]) options[setting] = _this[setting];\n        });\n        // animation\n        if (this.animation) setAnimation(options, this.animation);\n        // marks\n        if (this.markArea || this.markLine || this.markPoint) {\n          var marks = {\n            markArea: this.markArea,\n            markLine: this.markLine,\n            markPoint: this.markPoint\n          };\n          var series = options.series;\n          if (isArray(series)) {\n            series.forEach(function (item) {\n              setMark(item, marks);\n            });\n          } else if (isObject(series)) {\n            setMark(series, marks);\n          }\n        }\n        // change inited echarts settings\n        if (this.extend) setExtend(options, this.extend);\n        if (this.afterConfig) options = this.afterConfig(options);\n        var setOptionOpts = this.setOptionOpts;\n        // map chart not merge\n        if ((this.settings.bmap || this.settings.amap) && !isObject(setOptionOpts)) {\n          setOptionOpts = false;\n        }\n        // exclude unchange options\n        if (this.notSetUnchange && this.notSetUnchange.length) {\n          this.notSetUnchange.forEach(function (item) {\n            var value = options[item];\n            if (value) {\n              if (isEqual(value, _this._store[item])) {\n                options[item] = undefined;\n              } else {\n                _this._store[item] = cloneDeep(value);\n              }\n            }\n          });\n          if (isObject(setOptionOpts)) {\n            setOptionOpts.notMerge = false;\n          } else {\n            setOptionOpts = false;\n          }\n        }\n        if (this._isDestroyed) return;\n        if (this.log) console.log(options);\n        this.echarts.setOption(options, setOptionOpts);\n        this.$emit('ready', this.echarts, options, echartsLib);\n        if (!this._once['ready-once']) {\n          this._once['ready-once'] = true;\n          this.$emit('ready-once', this.echarts, options, echartsLib);\n        }\n        if (this.judgeWidth) this.judgeWidthHandler(options);\n        if (this.afterSetOption) this.afterSetOption(this.echarts, options, echartsLib);\n        if (this.afterSetOptionOnce && !this._once['afterSetOptionOnce']) {\n          this._once['afterSetOptionOnce'] = true;\n          this.afterSetOptionOnce(this.echarts, options, echartsLib);\n        }\n      },\n      judgeWidthHandler: function judgeWidthHandler(options) {\n        var _this2 = this;\n\n        var widthChangeDelay = this.widthChangeDelay,\n            resize = this.resize;\n\n        if (this.$el.clientWidth || this.$el.clientHeight) {\n          resize();\n        } else {\n          this.$nextTick(function (_) {\n            if (_this2.$el.clientWidth || _this2.$el.clientHeight) {\n              resize();\n            } else {\n              setTimeout(function (_) {\n                resize();\n                if (!_this2.$el.clientWidth || !_this2.$el.clientHeight) {\n                  console.warn(' Can\\'t get dom width or height ');\n                }\n              }, widthChangeDelay);\n            }\n          });\n        }\n      },\n      resizeableHandler: function resizeableHandler(resizeable) {\n        if (resizeable && !this._once.onresize) this.addResizeListener();\n        if (!resizeable && this._once.onresize) this.removeResizeListener();\n      },\n      init: function init() {\n        if (this.echarts) return;\n        var themeName = this.themeName || this.theme || DEFAULT_THEME;\n        this.echarts = echartsLib.init(this.$refs.canvas, themeName, this.initOptions);\n        if (this.data) this.changeHandler();\n        this.createEventProxy();\n        if (this.resizeable) this.addResizeListener();\n      },\n      addResizeListener: function addResizeListener() {\n        window.addEventListener('resize', this.resizeHandler);\n        this._once.onresize = true;\n      },\n      removeResizeListener: function removeResizeListener() {\n        window.removeEventListener('resize', this.resizeHandler);\n        this._once.onresize = false;\n      },\n      addWatchToProps: function addWatchToProps() {\n        var _this3 = this;\n\n        var watchedVariable = this._watchers.map(function (watcher) {\n          return watcher.expression;\n        });\n        Object.keys(this.$props).forEach(function (prop) {\n          if (!~watchedVariable.indexOf(prop) && !~STATIC_PROPS.indexOf(prop)) {\n            var opts = {};\n            if (~['[object Object]', '[object Array]'].indexOf(getType(_this3.$props[prop]))) {\n              opts.deep = true;\n            }\n            _this3.$watch(prop, function () {\n              _this3.changeHandler();\n            }, opts);\n          }\n        });\n      },\n      createEventProxy: function createEventProxy() {\n        var _this4 = this;\n\n        // 只要用户使用 on 方法绑定的事件都做一层代理，\n        // 是否真正执行相应的事件方法取决于该方法是否仍然存在 events 中\n        // 实现 events 的动态响应\n        var self = this;\n        var keys = Object.keys(this.events || {});\n        keys.length && keys.forEach(function (ev) {\n          if (_this4.registeredEvents.indexOf(ev) === -1) {\n            _this4.registeredEvents.push(ev);\n            _this4.echarts.on(ev, function (ev) {\n              return function () {\n                if (ev in self.events) {\n                  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                    args[_key] = arguments[_key];\n                  }\n\n                  self.events[ev].apply(null, args);\n                }\n              };\n            }(ev));\n          }\n        });\n      },\n      themeChange: function themeChange(theme) {\n        this.clean();\n        this.echarts = null;\n        this.init();\n      },\n      clean: function clean() {\n        if (this.resizeable) this.removeResizeListener();\n        this.echarts.dispose();\n      }\n    },\n\n    created: function created() {\n      this.echarts = null;\n      this.registeredEvents = [];\n      this._once = {};\n      this._store = {};\n      this.resizeHandler = debounce(this.resize, this.resizeDelay);\n      this.changeHandler = debounce(this.dataHandler, this.changeDelay);\n      this.addWatchToProps();\n    },\n    mounted: function mounted() {\n      this.init();\n    },\n    beforeDestroy: function beforeDestroy() {\n      this.clean();\n    },\n\n\n    _numerify: numerify\n  };\n\n  var VeBar = _extends({}, Core, {\n    name: 'VeBar',\n    data: function data() {\n      this.chartHandler = bar$1;\n      return {};\n    }\n  });\n\n  var VeHistogram = _extends({}, Core, {\n    name: 'VeHistogram',\n    data: function data() {\n      this.chartHandler = histogram;\n      return {};\n    }\n  });\n\n  function getLineXAxis(args) {\n    var dimension = args.dimension,\n        rows = args.rows,\n        xAxisName = args.xAxisName,\n        axisVisible = args.axisVisible,\n        xAxisType = args.xAxisType;\n\n    return dimension.map(function (item, index) {\n      return {\n        type: xAxisType,\n        nameLocation: 'middle',\n        nameGap: 22,\n        name: xAxisName[index] || '',\n        axisTick: { show: true, lineStyle: { color: '#eee' } },\n        data: rows.map(function (row) {\n          return row[item];\n        }),\n        show: axisVisible\n      };\n    });\n  }\n\n  function getLineSeries(args) {\n    var rows = args.rows,\n        axisSite = args.axisSite,\n        metrics = args.metrics,\n        area = args.area,\n        stack = args.stack,\n        nullAddZero = args.nullAddZero,\n        labelMap = args.labelMap,\n        label = args.label,\n        itemStyle = args.itemStyle,\n        lineStyle = args.lineStyle,\n        areaStyle = args.areaStyle,\n        dimension = args.dimension;\n\n    var series = [];\n    var dataTemp = {};\n    var stackMap = stack && getStackMap(stack);\n    metrics.forEach(function (item) {\n      dataTemp[item] = [];\n    });\n    rows.forEach(function (row) {\n      metrics.forEach(function (item) {\n        var value = null;\n        if (row[item] != null) {\n          value = row[item];\n        } else if (nullAddZero) {\n          value = 0;\n        }\n        dataTemp[item].push([row[dimension[0]], value]);\n      });\n    });\n    metrics.forEach(function (item) {\n      var seriesItem = {\n        name: labelMap[item] != null ? labelMap[item] : item,\n        type: 'line',\n        data: dataTemp[item]\n      };\n\n      if (area) seriesItem.areaStyle = { normal: {} };\n      if (axisSite.right) {\n        seriesItem.yAxisIndex = ~axisSite.right.indexOf(item) ? 1 : 0;\n      }\n\n      if (stack && stackMap[item]) seriesItem.stack = stackMap[item];\n\n      if (label) seriesItem.label = label;\n      if (itemStyle) seriesItem.itemStyle = itemStyle;\n      if (lineStyle) seriesItem.lineStyle = lineStyle;\n      if (areaStyle) seriesItem.areaStyle = areaStyle;\n\n      series.push(seriesItem);\n    });\n    return series;\n  }\n\n  function getLineYAxis(args) {\n    var yAxisName = args.yAxisName,\n        yAxisType = args.yAxisType,\n        axisVisible = args.axisVisible,\n        scale = args.scale,\n        min = args.min,\n        max = args.max,\n        digit = args.digit;\n\n    var yAxisBase = {\n      type: 'value',\n      axisTick: {\n        show: false\n      },\n      show: axisVisible\n    };\n    var yAxis = [];\n\n    var _loop = function _loop(i) {\n      if (yAxisType[i]) {\n        yAxis[i] = _extends({}, yAxisBase, {\n          axisLabel: {\n            formatter: function formatter(val) {\n              return getFormated(val, yAxisType[i], digit);\n            }\n          }\n        });\n      } else {\n        yAxis[i] = _extends({}, yAxisBase);\n      }\n      yAxis[i].name = yAxisName[i] || '';\n      yAxis[i].scale = scale[i] || false;\n      yAxis[i].min = min[i] || null;\n      yAxis[i].max = max[i] || null;\n    };\n\n    for (var i = 0; i < 2; i++) {\n      _loop(i);\n    }\n    return yAxis;\n  }\n\n  function getLineTooltip(args) {\n    var axisSite = args.axisSite,\n        yAxisType = args.yAxisType,\n        digit = args.digit,\n        labelMap = args.labelMap,\n        tooltipFormatter = args.tooltipFormatter;\n\n    var rightItems = axisSite.right || [];\n    var rightList = labelMap ? rightItems.map(function (item) {\n      return labelMap[item] === undefined ? item : labelMap[item];\n    }) : rightItems;\n    return {\n      trigger: 'axis',\n      formatter: function formatter(items) {\n        if (tooltipFormatter) {\n          return tooltipFormatter.apply(null, arguments);\n        }\n        var tpl = [];\n        var _items$ = items[0],\n            name = _items$.name,\n            axisValueLabel = _items$.axisValueLabel;\n\n        var title = name || axisValueLabel;\n        tpl.push(title + '<br>');\n        items.forEach(function (_ref) {\n          var seriesName = _ref.seriesName,\n              data = _ref.data,\n              marker = _ref.marker;\n\n          var showData = null;\n          var type = ~rightList.indexOf(seriesName) ? yAxisType[1] : yAxisType[0];\n          var itemData = isArray(data) ? data[1] : data;\n          showData = getFormated(itemData, type, digit);\n          tpl.push(marker);\n          tpl.push(seriesName + ': ' + showData);\n          tpl.push('<br>');\n        });\n        return tpl.join('');\n      }\n    };\n  }\n\n  function getLegend$1(args) {\n    var metrics = args.metrics,\n        legendName = args.legendName,\n        labelMap = args.labelMap;\n\n    if (!legendName && !labelMap) return { data: metrics };\n    var data = labelMap ? metrics.map(function (item) {\n      return labelMap[item] == null ? item : labelMap[item];\n    }) : metrics;\n    return {\n      data: data,\n      formatter: function formatter(name) {\n        return legendName[name] != null ? legendName[name] : name;\n      }\n    };\n  }\n\n  var line$1 = function line$$1(columns, rows, settings, extra) {\n    rows = isArray(rows) ? rows : [];\n    columns = isArray(columns) ? columns : [];\n    var _settings$axisSite = settings.axisSite,\n        axisSite = _settings$axisSite === undefined ? {} : _settings$axisSite,\n        _settings$yAxisType = settings.yAxisType,\n        yAxisType = _settings$yAxisType === undefined ? ['normal', 'normal'] : _settings$yAxisType,\n        _settings$xAxisType = settings.xAxisType,\n        xAxisType = _settings$xAxisType === undefined ? 'category' : _settings$xAxisType,\n        _settings$yAxisName = settings.yAxisName,\n        yAxisName = _settings$yAxisName === undefined ? [] : _settings$yAxisName,\n        _settings$dimension = settings.dimension,\n        dimension = _settings$dimension === undefined ? [columns[0]] : _settings$dimension,\n        _settings$xAxisName = settings.xAxisName,\n        xAxisName = _settings$xAxisName === undefined ? [] : _settings$xAxisName,\n        _settings$axisVisible = settings.axisVisible,\n        axisVisible = _settings$axisVisible === undefined ? true : _settings$axisVisible,\n        area = settings.area,\n        stack = settings.stack,\n        _settings$scale = settings.scale,\n        scale = _settings$scale === undefined ? [false, false] : _settings$scale,\n        _settings$min = settings.min,\n        min = _settings$min === undefined ? [null, null] : _settings$min,\n        _settings$max = settings.max,\n        max = _settings$max === undefined ? [null, null] : _settings$max,\n        _settings$nullAddZero = settings.nullAddZero,\n        nullAddZero = _settings$nullAddZero === undefined ? false : _settings$nullAddZero,\n        _settings$digit = settings.digit,\n        digit = _settings$digit === undefined ? 2 : _settings$digit,\n        _settings$legendName = settings.legendName,\n        legendName = _settings$legendName === undefined ? {} : _settings$legendName,\n        _settings$labelMap = settings.labelMap,\n        labelMap = _settings$labelMap === undefined ? {} : _settings$labelMap,\n        label = settings.label,\n        itemStyle = settings.itemStyle,\n        lineStyle = settings.lineStyle,\n        areaStyle = settings.areaStyle;\n    var tooltipVisible = extra.tooltipVisible,\n        legendVisible = extra.legendVisible,\n        tooltipFormatter = extra.tooltipFormatter;\n\n    var metrics = columns.slice();\n\n    if (axisSite.left && axisSite.right) {\n      metrics = axisSite.left.concat(axisSite.right);\n    } else if (axisSite.left && !axisSite.right) {\n      metrics = axisSite.left;\n    } else if (settings.metrics) {\n      metrics = settings.metrics;\n    } else {\n      metrics.splice(columns.indexOf(dimension[0]), 1);\n    }\n\n    var legend$$1 = legendVisible && getLegend$1({ metrics: metrics, legendName: legendName, labelMap: labelMap });\n    var tooltip$$1 = tooltipVisible && getLineTooltip({\n      axisSite: axisSite,\n      yAxisType: yAxisType,\n      digit: digit,\n      labelMap: labelMap,\n      xAxisType: xAxisType,\n      tooltipFormatter: tooltipFormatter\n    });\n    var xAxis = getLineXAxis({\n      dimension: dimension,\n      rows: rows,\n      xAxisName: xAxisName,\n      axisVisible: axisVisible,\n      xAxisType: xAxisType\n    });\n    var yAxis = getLineYAxis({\n      yAxisName: yAxisName,\n      yAxisType: yAxisType,\n      axisVisible: axisVisible,\n      scale: scale,\n      min: min,\n      max: max,\n      digit: digit\n    });\n    var series = getLineSeries({\n      rows: rows,\n      axisSite: axisSite,\n      metrics: metrics,\n      area: area,\n      stack: stack,\n      nullAddZero: nullAddZero,\n      labelMap: labelMap,\n      label: label,\n      itemStyle: itemStyle,\n      lineStyle: lineStyle,\n      areaStyle: areaStyle,\n      xAxisType: xAxisType,\n      dimension: dimension\n    });\n    var options = { legend: legend$$1, xAxis: xAxis, series: series, yAxis: yAxis, tooltip: tooltip$$1 };\n    return options;\n  };\n\n  var VeLine = _extends({}, Core, {\n    name: 'VeLine',\n    data: function data() {\n      this.chartHandler = line$1;\n      return {};\n    }\n  });\n\n  var pieRadius = 100;\n  var ringRadius = [80, 100];\n  var roseRingRadius = [20, 100];\n  var pieOffsetY = 200;\n\n  function getPieSeries(args) {\n    var innerRows = args.innerRows,\n        dataType = args.dataType,\n        percentShow = args.percentShow,\n        dimension = args.dimension,\n        metrics = args.metrics,\n        radius = args.radius,\n        offsetY = args.offsetY,\n        selectedMode = args.selectedMode,\n        hoverAnimation = args.hoverAnimation,\n        digit = args.digit,\n        roseType = args.roseType,\n        label = args.label,\n        level = args.level,\n        limitShowNum = args.limitShowNum,\n        isRing = args.isRing,\n        labelLine = args.labelLine,\n        itemStyle = args.itemStyle;\n\n\n    var series = [];\n    var levelTemp = {};\n    var rowsTemp = [];\n    if (level) {\n      level.forEach(function (levelItems, index) {\n        levelItems.forEach(function (item) {\n          setArrayValue(levelTemp, item, index);\n        });\n      });\n      innerRows.forEach(function (row) {\n        var itemLevel = levelTemp[row[dimension]];\n        if (itemLevel && itemLevel.length) {\n          itemLevel.forEach(function (levelItem) {\n            setArrayValue(rowsTemp, levelItem, row);\n          });\n        }\n      });\n    } else {\n      rowsTemp.push(innerRows);\n    }\n    var seriesBase = {\n      type: 'pie',\n      selectedMode: selectedMode,\n      hoverAnimation: hoverAnimation,\n      roseType: roseType,\n      center: ['50%', offsetY]\n    };\n    var rowsTempLength = rowsTemp.length;\n    rowsTemp.forEach(function (dataRows, index) {\n      var seriesItem = _extends({ data: [] }, seriesBase);\n      var centerWidth = radius / rowsTempLength;\n      if (!index) {\n        seriesItem.radius = isRing ? radius : centerWidth;\n      } else {\n        var outerWidth = centerWidth + radius / (2 * rowsTempLength) * (2 * index - 1);\n        var innerWidth = outerWidth + radius / (2 * rowsTempLength);\n        seriesItem.radius = [outerWidth, innerWidth];\n      }\n      if (rowsTempLength > 1 && index === 0) {\n        seriesItem.label = {\n          normal: { position: 'inner' }\n        };\n      }\n      if (label) seriesItem.label = label;\n      if (labelLine) seriesItem.labelLine = labelLine;\n      if (itemStyle) seriesItem.itemStyle = itemStyle;\n      if (percentShow) {\n        seriesItem.label = {\n          normal: {\n            show: true,\n            position: rowsTempLength > 1 && index === 0 ? 'inner' : 'outside',\n            formatter: function formatter(item) {\n              var tpl = [];\n              tpl.push(item.name + ':');\n              tpl.push(getFormated(item.value, dataType, digit));\n              tpl.push('(' + item.percent + '%)');\n              return tpl.join(' ');\n            }\n          }\n        };\n      }\n      seriesItem.data = dataRows.map(function (row) {\n        return {\n          name: row[dimension],\n          value: row[metrics]\n        };\n      });\n      series.push(seriesItem);\n    });\n    if (limitShowNum && limitShowNum < series[0].data.length) {\n      var firstData = series[0].data;\n      var remainArr = firstData.slice(limitShowNum, firstData.length);\n      var sum = 0;\n      remainArr.forEach(function (item) {\n        sum += item.value;\n      });\n      series[0].data = firstData.slice(0, limitShowNum);\n      series[0].data.push({ name: '其他', value: sum });\n    }\n    return series;\n  }\n\n  function getPieLegend(args) {\n    var innerRows = args.innerRows,\n        dimension = args.dimension,\n        legendLimit = args.legendLimit,\n        legendName = args.legendName,\n        level = args.level,\n        limitShowNum = args.limitShowNum;\n\n    var legend$$1 = [];\n    var levelTemp = [];\n    if (level) {\n      level.forEach(function (levelItem) {\n        levelItem.forEach(function (item) {\n          levelTemp.push(item);\n        });\n      });\n      legend$$1 = levelTemp;\n    } else if (limitShowNum && limitShowNum < innerRows.length) {\n      for (var i = 0; i < limitShowNum; i++) {\n        legend$$1.push(innerRows[i][dimension]);\n      }\n      legend$$1.push('其他');\n    } else {\n      legend$$1 = innerRows.map(function (row) {\n        return row[dimension];\n      });\n    }\n    if (legend$$1.length) {\n      return {\n        data: legend$$1,\n        show: legend$$1.length < legendLimit,\n        formatter: function formatter(name) {\n          return legendName[name] != null ? legendName[name] : name;\n        }\n      };\n    } else {\n      return false;\n    }\n  }\n\n  function getPieTooltip(args) {\n    var dataType = args.dataType,\n        innerRows = args.innerRows,\n        limitShowNum = args.limitShowNum,\n        digit = args.digit,\n        metrics = args.metrics,\n        dimension = args.dimension;\n\n    var sum = 0;\n    var remainArr = innerRows.map(function (row) {\n      sum += row[metrics];\n      return {\n        name: row[dimension],\n        value: row[metrics]\n      };\n    }).slice(limitShowNum, innerRows.length);\n    return {\n      formatter: function formatter(item) {\n        var tpl = [];\n        tpl.push(itemPoint(item.color));\n        if (limitShowNum && item.name === '其他') {\n          tpl.push('其他:');\n          remainArr.forEach(function (_ref) {\n            var name = _ref.name,\n                value = _ref.value;\n\n            var percent = getFormated(value / sum, 'percent');\n            tpl.push('<br>' + name + ':');\n            tpl.push(getFormated(value, dataType, digit));\n            tpl.push('(' + percent + ')');\n          });\n        } else {\n          tpl.push(item.name + ':');\n          tpl.push(getFormated(item.value, dataType, digit));\n          tpl.push('(' + item.percent + '%)');\n        }\n        return tpl.join(' ');\n      }\n    };\n  }\n\n  var pie$1 = function pie$$1(columns, rows, settings, extra, isRing) {\n    var innerRows = cloneDeep(rows);\n    var _settings$dataType = settings.dataType,\n        dataType = _settings$dataType === undefined ? 'normal' : _settings$dataType,\n        percentShow = settings.percentShow,\n        _settings$dimension = settings.dimension,\n        dimension = _settings$dimension === undefined ? columns[0] : _settings$dimension,\n        _settings$metrics = settings.metrics,\n        metrics = _settings$metrics === undefined ? columns[1] : _settings$metrics,\n        _settings$roseType = settings.roseType,\n        roseType = _settings$roseType === undefined ? false : _settings$roseType,\n        _settings$radius = settings.radius,\n        radius = _settings$radius === undefined ? isRing ? roseType ? roseRingRadius : ringRadius : pieRadius : _settings$radius,\n        _settings$offsetY = settings.offsetY,\n        offsetY = _settings$offsetY === undefined ? pieOffsetY : _settings$offsetY,\n        _settings$legendLimit = settings.legendLimit,\n        legendLimit = _settings$legendLimit === undefined ? 30 : _settings$legendLimit,\n        _settings$selectedMod = settings.selectedMode,\n        selectedMode = _settings$selectedMod === undefined ? false : _settings$selectedMod,\n        _settings$hoverAnimat = settings.hoverAnimation,\n        hoverAnimation = _settings$hoverAnimat === undefined ? true : _settings$hoverAnimat,\n        _settings$digit = settings.digit,\n        digit = _settings$digit === undefined ? 2 : _settings$digit,\n        _settings$legendName = settings.legendName,\n        legendName = _settings$legendName === undefined ? {} : _settings$legendName,\n        _settings$label = settings.label,\n        label = _settings$label === undefined ? false : _settings$label,\n        _settings$level = settings.level,\n        level = _settings$level === undefined ? false : _settings$level,\n        _settings$limitShowNu = settings.limitShowNum,\n        limitShowNum = _settings$limitShowNu === undefined ? 0 : _settings$limitShowNu,\n        labelLine = settings.labelLine,\n        itemStyle = settings.itemStyle;\n    var tooltipVisible = extra.tooltipVisible,\n        legendVisible = extra.legendVisible;\n\n    if (limitShowNum) innerRows.sort(function (a, b) {\n      return b[metrics] - a[metrics];\n    });\n    var seriesParams = {\n      innerRows: innerRows,\n      dataType: dataType,\n      percentShow: percentShow,\n      dimension: dimension,\n      metrics: metrics,\n      radius: radius,\n      offsetY: offsetY,\n      selectedMode: selectedMode,\n      hoverAnimation: hoverAnimation,\n      digit: digit,\n      roseType: roseType,\n      label: label,\n      level: level,\n      legendName: legendName,\n      limitShowNum: limitShowNum,\n      isRing: isRing,\n      labelLine: labelLine,\n      itemStyle: itemStyle\n    };\n    var series = getPieSeries(seriesParams);\n    var legendParams = {\n      innerRows: innerRows,\n      dimension: dimension,\n      legendLimit: legendLimit,\n      legendName: legendName,\n      level: level,\n      limitShowNum: limitShowNum\n    };\n    var legend$$1 = legendVisible && getPieLegend(legendParams);\n    var tooltip$$1 = tooltipVisible && getPieTooltip({\n      dataType: dataType,\n      innerRows: innerRows,\n      limitShowNum: limitShowNum,\n      digit: digit,\n      metrics: metrics,\n      dimension: dimension\n    });\n    var options = { series: series, legend: legend$$1, tooltip: tooltip$$1 };\n    return options;\n  };\n\n  var ring = function ring(columns, rows, settings, extra) {\n    return pie$1(columns, rows, settings, extra, true);\n  };\n\n  var VePie = _extends({}, Core, {\n    name: 'VePie',\n    data: function data() {\n      this.chartHandler = pie$1;\n      return {};\n    }\n  });\n\n  var VeRing = _extends({}, Core, {\n    name: 'VeRing',\n    data: function data() {\n      this.chartHandler = ring;\n      return {};\n    }\n  });\n\n  function getWaterfallTooltip(dataType, digit) {\n    return {\n      trigger: 'axis',\n      axisPointer: { type: 'shadow' },\n      formatter: function formatter(items) {\n        var item = items[1];\n        return [item.name + '<br/>' + item.seriesName + ' :', '' + getFormated(item.value, dataType, digit)].join('');\n      }\n    };\n  }\n\n  function getWaterfallXAxis(args) {\n    var dimension = args.dimension,\n        rows = args.rows,\n        remainStatus = args.remainStatus,\n        totalName = args.totalName,\n        remainName = args.remainName,\n        labelMap = args.labelMap,\n        xAxisName = args.xAxisName,\n        axisVisible = args.axisVisible;\n\n    var xAxisData = [totalName].concat(rows.map(function (row) {\n      return row[dimension];\n    }));\n    if (remainStatus === 'have-remain') {\n      xAxisData = xAxisData.concat([remainName]);\n    }\n\n    return {\n      type: 'category',\n      name: labelMap && labelMap[xAxisName] || xAxisName,\n      splitLine: { show: false },\n      data: xAxisData,\n      show: axisVisible\n    };\n  }\n\n  function getWaterfallYAxis(args) {\n    var dataType = args.dataType,\n        yAxisName = args.yAxisName,\n        axisVisible = args.axisVisible,\n        digit = args.digit,\n        labelMap = args.labelMap;\n\n    return {\n      type: 'value',\n      name: labelMap[yAxisName] != null ? labelMap[yAxisName] : yAxisName,\n      axisTick: { show: false },\n      axisLabel: {\n        formatter: function formatter(val) {\n          return getFormated(val, dataType, digit);\n        }\n      },\n      show: axisVisible\n    };\n  }\n\n  function getWaterfallSeries(args) {\n    var dataType = args.dataType,\n        rows = args.rows,\n        metrics = args.metrics,\n        totalNum = args.totalNum,\n        remainStatus = args.remainStatus,\n        dataSum = args.dataSum,\n        digit = args.digit;\n\n    var seriesBase = { type: 'bar', stack: '总量' };\n    var dataSumTemp = dataSum;\n    var totalNumTemp = totalNum;\n    var assistData = void 0;\n    var mainData = void 0;\n    var rowData = rows.map(function (row) {\n      return row[metrics];\n    });\n\n    if (remainStatus === 'have-remain') {\n      assistData = [0].concat(rows.map(function (row) {\n        totalNumTemp -= row[metrics];\n        return totalNumTemp;\n      })).concat([0]);\n      mainData = [totalNum].concat(rowData).concat([totalNum - dataSum]);\n    } else {\n      assistData = [0].concat(rows.map(function (row) {\n        dataSumTemp -= row[metrics];\n        return dataSumTemp;\n      }));\n      mainData = [dataSum].concat(rowData);\n    }\n    var series = [];\n\n    series.push(_extends({\n      name: '辅助',\n      itemStyle: {\n        normal: { opacity: 0 },\n        emphasis: { opacity: 0 }\n      },\n      data: assistData\n    }, seriesBase));\n\n    series.push(_extends({\n      name: '数值',\n      label: {\n        normal: {\n          show: true,\n          position: 'top',\n          formatter: function formatter(item) {\n            return getFormated(item.value, dataType, digit);\n          }\n        }\n      },\n      data: mainData\n    }, seriesBase));\n    return series;\n  }\n\n  function getWaterfallRemainStatus(dataSum, totalNum) {\n    if (!totalNum) return 'not-total';\n    return totalNum > dataSum ? 'have-remain' : 'none-remain';\n  }\n\n  var waterfall = function waterfall(columns, rows, settings, extra) {\n    var _settings$dataType = settings.dataType,\n        dataType = _settings$dataType === undefined ? 'normal' : _settings$dataType,\n        _settings$dimension = settings.dimension,\n        dimension = _settings$dimension === undefined ? columns[0] : _settings$dimension,\n        _settings$totalName = settings.totalName,\n        totalName = _settings$totalName === undefined ? '总计' : _settings$totalName,\n        totalNum = settings.totalNum,\n        _settings$remainName = settings.remainName,\n        remainName = _settings$remainName === undefined ? '其他' : _settings$remainName,\n        _settings$xAxisName = settings.xAxisName,\n        xAxisName = _settings$xAxisName === undefined ? dimension : _settings$xAxisName,\n        _settings$labelMap = settings.labelMap,\n        labelMap = _settings$labelMap === undefined ? {} : _settings$labelMap,\n        _settings$axisVisible = settings.axisVisible,\n        axisVisible = _settings$axisVisible === undefined ? true : _settings$axisVisible,\n        _settings$digit = settings.digit,\n        digit = _settings$digit === undefined ? 2 : _settings$digit;\n    var tooltipVisible = extra.tooltipVisible;\n\n    var metricsTemp = columns.slice();\n    metricsTemp.splice(metricsTemp.indexOf(dimension), 1);\n    var metrics = metricsTemp[0];\n    var yAxisName = metrics;\n    var tooltip$$1 = tooltipVisible && getWaterfallTooltip(dataType, digit);\n    var dataSum = parseFloat(rows.reduce(function (pre, cur) {\n      return pre + Number(cur[metrics]);\n    }, 0).toFixed(digit));\n    var remainStatus = getWaterfallRemainStatus(dataSum, totalNum);\n    var xAxisParams = {\n      dimension: dimension,\n      rows: rows,\n      remainStatus: remainStatus,\n      totalName: totalName,\n      remainName: remainName,\n      xAxisName: xAxisName,\n      labelMap: labelMap,\n      axisVisible: axisVisible\n    };\n    var xAxis = getWaterfallXAxis(xAxisParams);\n    var yAxis = getWaterfallYAxis({ dataType: dataType, yAxisName: yAxisName, axisVisible: axisVisible, digit: digit, labelMap: labelMap });\n    var seriesParams = {\n      dataType: dataType,\n      rows: rows,\n      dimension: dimension,\n      metrics: metrics,\n      totalNum: totalNum,\n      remainStatus: remainStatus,\n      dataSum: dataSum,\n      digit: digit\n    };\n    var series = getWaterfallSeries(seriesParams);\n    var options = { tooltip: tooltip$$1, xAxis: xAxis, yAxis: yAxis, series: series };\n    return options;\n  };\n\n  var VeWaterfall = _extends({}, Core, {\n    name: 'VeWaterfall',\n    data: function data() {\n      this.chartHandler = waterfall;\n      return {};\n    }\n  });\n\n  function getFunnelTooltip(dataType, digit) {\n    return {\n      trigger: 'item',\n      formatter: function formatter(item) {\n        var tpl = [];\n        tpl.push(itemPoint(item.color));\n        tpl.push(item.name + ': ' + getFormated(item.data.realValue, dataType, digit));\n        return tpl.join('');\n      }\n    };\n  }\n\n  function getFunnelLegend(args) {\n    var data = args.data,\n        legendName = args.legendName;\n\n    return {\n      data: data,\n      formatter: function formatter(name) {\n        return legendName[name] != null ? legendName[name] : name;\n      }\n    };\n  }\n\n  function getFunnelSeries(args) {\n    var dimension = args.dimension,\n        metrics = args.metrics,\n        rows = args.rows,\n        sequence = args.sequence,\n        ascending = args.ascending,\n        label = args.label,\n        labelLine = args.labelLine,\n        itemStyle = args.itemStyle,\n        filterZero = args.filterZero,\n        useDefaultOrder = args.useDefaultOrder;\n\n    var series = { type: 'funnel' };\n    var innerRows = rows.sort(function (a, b) {\n      return sequence.indexOf(a[dimension]) - sequence.indexOf(b[dimension]);\n    });\n\n    if (filterZero) {\n      innerRows = innerRows.filter(function (row) {\n        return row[metrics];\n      });\n    }\n\n    var falseFunnel = false;\n    innerRows.some(function (row, index) {\n      if (index && row[metrics] > innerRows[index - 1][metrics]) {\n        falseFunnel = true;\n        return true;\n      }\n    });\n\n    var step = 100 / innerRows.length;\n\n    if (falseFunnel && !useDefaultOrder) {\n      series.data = innerRows.slice().reverse().map(function (row, index) {\n        return {\n          name: row[dimension],\n          value: (index + 1) * step,\n          realValue: row[metrics]\n        };\n      });\n    } else {\n      series.data = innerRows.map(function (row) {\n        return {\n          name: row[dimension],\n          value: row[metrics],\n          realValue: row[metrics]\n        };\n      });\n    }\n\n    if (ascending) series.sort = 'ascending';\n    if (label) series.label = label;\n    if (labelLine) series.labelLine = labelLine;\n    if (itemStyle) series.itemStyle = itemStyle;\n    return series;\n  }\n\n  var funnel$1 = function funnel$$1(outerColumns, outerRows, settings, extra) {\n    var columns = outerColumns.slice();\n    var rows = outerRows.slice();\n    var _settings$dataType = settings.dataType,\n        dataType = _settings$dataType === undefined ? 'normal' : _settings$dataType,\n        _settings$dimension = settings.dimension,\n        dimension = _settings$dimension === undefined ? columns[0] : _settings$dimension,\n        _settings$sequence = settings.sequence,\n        sequence = _settings$sequence === undefined ? rows.map(function (row) {\n      return row[dimension];\n    }) : _settings$sequence,\n        _settings$digit = settings.digit,\n        digit = _settings$digit === undefined ? 2 : _settings$digit,\n        ascending = settings.ascending,\n        label = settings.label,\n        labelLine = settings.labelLine,\n        _settings$legendName = settings.legendName,\n        legendName = _settings$legendName === undefined ? {} : _settings$legendName,\n        itemStyle = settings.itemStyle,\n        filterZero = settings.filterZero,\n        useDefaultOrder = settings.useDefaultOrder;\n    var tooltipVisible = extra.tooltipVisible,\n        legendVisible = extra.legendVisible;\n\n    var metrics = void 0;\n    if (settings.metrics) {\n      metrics = settings.metrics;\n    } else {\n      var metricsTemp = columns.slice();\n      metricsTemp.splice(columns.indexOf(dimension), 1);\n      metrics = metricsTemp[0];\n    }\n\n    var tooltip$$1 = tooltipVisible && getFunnelTooltip(dataType, digit);\n    var legend$$1 = legendVisible && getFunnelLegend({ data: sequence, legendName: legendName });\n    var series = getFunnelSeries({\n      dimension: dimension,\n      metrics: metrics,\n      rows: rows,\n      sequence: sequence,\n      ascending: ascending,\n      label: label,\n      labelLine: labelLine,\n      itemStyle: itemStyle,\n      filterZero: filterZero,\n      useDefaultOrder: useDefaultOrder\n    });\n    var options = { tooltip: tooltip$$1, legend: legend$$1, series: series };\n    return options;\n  };\n\n  var VeFunnel = _extends({}, Core, {\n    name: 'VeFunnel',\n    data: function data() {\n      this.chartHandler = funnel$1;\n      return {};\n    }\n  });\n\n  function getRadarLegend(rows, dimension, legendName) {\n    var legendData = rows.map(function (row) {\n      return row[dimension];\n    });\n\n    return {\n      data: legendData,\n      formatter: function formatter(name) {\n        return legendName[name] != null ? legendName[name] : name;\n      }\n    };\n  }\n\n  function getRadarTooltip(dataType, radar$$1, digit) {\n    var typeTemp = [];\n    var nameTemp = [];\n    radar$$1.indicator.map(function (item, index) {\n      typeTemp[index] = dataType[item.name];\n      nameTemp[index] = item.name;\n    });\n    return {\n      formatter: function formatter(item) {\n        var tpl = [];\n        tpl.push(itemPoint(item.color));\n        tpl.push(item.name + '<br />');\n        item.data.value.forEach(function (val, index) {\n          tpl.push(nameTemp[index] + ': ');\n          tpl.push(getFormated(val, typeTemp[index], digit) + '<br />');\n        });\n        return tpl.join('');\n      }\n    };\n  }\n\n  function getRadarSetting(rows, metrics, labelMap) {\n    var settingBase = {\n      indicator: [],\n      shape: 'circle',\n      splitNumber: 5\n    };\n    var indicatorTemp = {};\n    rows.forEach(function (items) {\n      metrics.forEach(function (item) {\n        var key = labelMap[item] != null ? labelMap[item] : item;\n        if (!indicatorTemp[key]) {\n          indicatorTemp[key] = [items[item]];\n        } else {\n          indicatorTemp[key].push(items[item]);\n        }\n      });\n    });\n    settingBase.indicator = Object.keys(indicatorTemp).map(function (key) {\n      return {\n        name: key,\n        max: Math.max.apply(null, indicatorTemp[key])\n      };\n    });\n    return settingBase;\n  }\n\n  function getRadarSeries(args) {\n    var rows = args.rows,\n        dimension = args.dimension,\n        metrics = args.metrics,\n        radar$$1 = args.radar,\n        label = args.label,\n        itemStyle = args.itemStyle,\n        lineStyle = args.lineStyle,\n        labelMap = args.labelMap,\n        areaStyle = args.areaStyle;\n\n    var radarIndexObj = {};\n    radar$$1.indicator.forEach(function (item, index) {\n      var name = item.name;\n      radarIndexObj[name] = index;\n    });\n\n    var seriesData = rows.map(function (row) {\n      var serieData = {\n        value: [],\n        name: row[dimension]\n      };\n      Object.keys(row).forEach(function (key) {\n        if (~metrics.indexOf(key)) {\n          var k = labelMap[key] != null ? radarIndexObj[labelMap[key]] : radarIndexObj[key];\n          serieData.value[k] = row[key];\n        }\n      });\n      return serieData;\n    });\n    var result = {\n      name: dimension,\n      type: 'radar',\n      data: seriesData\n    };\n    if (label) result.label = label;\n    if (itemStyle) result.itemStyle = itemStyle;\n    if (lineStyle) result.lineStyle = lineStyle;\n    if (areaStyle) result.areaStyle = areaStyle;\n    return [result];\n  }\n\n  var radar$1 = function radar$$1(columns, rows, settings, extra) {\n    var _settings$dataType = settings.dataType,\n        dataType = _settings$dataType === undefined ? {} : _settings$dataType,\n        _settings$legendName = settings.legendName,\n        legendName = _settings$legendName === undefined ? {} : _settings$legendName,\n        _settings$labelMap = settings.labelMap,\n        labelMap = _settings$labelMap === undefined ? {} : _settings$labelMap,\n        _settings$dimension = settings.dimension,\n        dimension = _settings$dimension === undefined ? columns[0] : _settings$dimension,\n        _settings$digit = settings.digit,\n        digit = _settings$digit === undefined ? 2 : _settings$digit,\n        label = settings.label,\n        itemStyle = settings.itemStyle,\n        lineStyle = settings.lineStyle,\n        areaStyle = settings.areaStyle;\n    var tooltipVisible = extra.tooltipVisible,\n        legendVisible = extra.legendVisible;\n\n    var metrics = columns.slice();\n    if (settings.metrics) {\n      metrics = settings.metrics;\n    } else {\n      metrics.splice(columns.indexOf(dimension), 1);\n    }\n    var legend$$1 = legendVisible && getRadarLegend(rows, dimension, legendName);\n    var radar$$1 = getRadarSetting(rows, metrics, labelMap);\n    var tooltip$$1 = tooltipVisible && getRadarTooltip(dataType, radar$$1, digit);\n    var series = getRadarSeries({\n      rows: rows,\n      dimension: dimension,\n      metrics: metrics,\n      radar: radar$$1,\n      label: label,\n      itemStyle: itemStyle,\n      lineStyle: lineStyle,\n      labelMap: labelMap,\n      areaStyle: areaStyle\n    });\n    var options = { legend: legend$$1, tooltip: tooltip$$1, radar: radar$$1, series: series };\n    return options;\n  };\n\n  var VeRadar = _extends({}, Core, {\n    name: 'VeRadar',\n    data: function data() {\n      this.chartHandler = radar$1;\n      return {};\n    }\n  });\n\n  var VeChart = _extends({}, Core, {\n    name: 'VeChart',\n    data: function data() {\n      this.chartLib = {\n        bar: bar$1,\n        histogram: histogram,\n        line: line$1,\n        pie: pie$1,\n        ring: ring,\n        funnel: funnel$1,\n        radar: radar$1,\n        waterfall: waterfall\n      };\n      this.chartHandler = this.chartLib[this.settings.type];\n      return {};\n    }\n  });\n\n  function getTooltip(dataType, digit, dataStore, metrics, color, labelMap) {\n    return {\n      formatter: function formatter(item) {\n        var tpl = [];\n        if (!item.name) return '';\n        tpl.push(item.name + '<br>');\n        metrics.forEach(function (label, index) {\n          var title = labelMap[label] != null ? labelMap[label] : label;\n          tpl.push(itemPoint(color[index]) + ' ' + title + ' : ');\n          if (dataStore[item.name]) {\n            tpl.push(getFormated(dataStore[item.name][label], dataType[label], digit));\n          } else {\n            tpl.push('-');\n          }\n          tpl.push('<br>');\n        });\n        return tpl.join(' ');\n      }\n    };\n  }\n\n  function getSeries(args) {\n    var position = args.position,\n        selectData = args.selectData,\n        dimension = args.dimension,\n        metrics = args.metrics,\n        rows = args.rows,\n        label = args.label,\n        itemStyle = args.itemStyle,\n        selectedMode = args.selectedMode,\n        roam = args.roam,\n        center = args.center,\n        aspectScale = args.aspectScale,\n        boundingCoords = args.boundingCoords,\n        zoom = args.zoom,\n        labelMap = args.labelMap,\n        scaleLimit = args.scaleLimit,\n        mapGrid = args.mapGrid;\n\n    var result = [];\n    var mapBase = {\n      type: 'map',\n      mapType: position\n    };\n\n    metrics.forEach(function (itemName) {\n      var itemResult = _extends({\n        name: labelMap[itemName] != null ? labelMap[itemName] : itemName,\n        data: [],\n        selectedMode: selectedMode,\n        roam: roam,\n        center: center,\n        aspectScale: aspectScale,\n        boundingCoords: boundingCoords,\n        zoom: zoom,\n        scaleLimit: scaleLimit\n      }, mapBase);\n\n      if (mapGrid) {\n        Object.keys(mapGrid).forEach(function (key) {\n          itemResult[key] = mapGrid[key];\n        });\n      }\n\n      setGeoLabel(itemStyle, itemResult, 'itemStyle');\n      setGeoLabel(label, itemResult, 'label');\n\n      rows.forEach(function (row) {\n        itemResult.data.push({\n          name: row[dimension],\n          value: row[itemName],\n          selected: selectData\n        });\n      });\n      result.push(itemResult);\n    });\n\n    return result;\n  }\n\n  function setGeoLabel(value, target, label) {\n    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n      target[label] = value;\n    } else if (value) {\n      target[label] = {\n        normal: { show: true },\n        emphasis: { show: true }\n      };\n    }\n  }\n\n  function getLegendMap(args) {\n    var metrics = args.metrics,\n        legendName = args.legendName,\n        labelMap = args.labelMap;\n\n    if (!legendName && !labelMap) return { data: metrics };\n    var data = labelMap ? metrics.map(function (item) {\n      return labelMap[item] == null ? item : labelMap[item];\n    }) : metrics;\n    return {\n      data: data,\n      formatter: function formatter(name) {\n        return legendName[name] != null ? legendName[name] : name;\n      }\n    };\n  }\n\n  function registerMap(args, mapOrigin) {\n    var _once = args._once,\n        registerSign = args.registerSign,\n        beforeRegisterMap = args.beforeRegisterMap,\n        beforeRegisterMapOnce = args.beforeRegisterMapOnce,\n        registerSignOnce = args.registerSignOnce,\n        position = args.position,\n        specialAreas = args.specialAreas;\n\n    if (!_once[registerSign]) {\n      if (beforeRegisterMap) mapOrigin = beforeRegisterMap(mapOrigin);\n      if (beforeRegisterMapOnce && !_once[registerSignOnce]) {\n        _once[registerSignOnce] = true;\n        mapOrigin = beforeRegisterMapOnce(mapOrigin);\n      }\n      _once[registerSign] = true;\n      echartsLib.registerMap(position, mapOrigin, specialAreas);\n    }\n  }\n\n  var map$1 = function map$$1(columns, rows, settings, extra) {\n    var _settings$position = settings.position,\n        position = _settings$position === undefined ? 'china' : _settings$position,\n        _settings$selectData = settings.selectData,\n        selectData = _settings$selectData === undefined ? false : _settings$selectData,\n        selectedMode = settings.selectedMode,\n        _settings$label = settings.label,\n        label = _settings$label === undefined ? true : _settings$label,\n        _settings$dataType = settings.dataType,\n        dataType = _settings$dataType === undefined ? {} : _settings$dataType,\n        _settings$digit = settings.digit,\n        digit = _settings$digit === undefined ? 2 : _settings$digit,\n        _settings$dimension = settings.dimension,\n        dimension = _settings$dimension === undefined ? columns[0] : _settings$dimension,\n        roam = settings.roam,\n        center = settings.center,\n        aspectScale = settings.aspectScale,\n        boundingCoords = settings.boundingCoords,\n        zoom = settings.zoom,\n        scaleLimit = settings.scaleLimit,\n        _settings$legendName = settings.legendName,\n        legendName = _settings$legendName === undefined ? {} : _settings$legendName,\n        _settings$labelMap = settings.labelMap,\n        labelMap = _settings$labelMap === undefined ? {} : _settings$labelMap,\n        mapGrid = settings.mapGrid,\n        itemStyle = settings.itemStyle,\n        positionJsonLink = settings.positionJsonLink,\n        beforeRegisterMap = settings.beforeRegisterMap,\n        beforeRegisterMapOnce = settings.beforeRegisterMapOnce,\n        _settings$mapURLProfi = settings.mapURLProfix,\n        mapURLProfix = _settings$mapURLProfi === undefined ? 'https://unpkg.com/echarts@3.6.2/map/json/' : _settings$mapURLProfi,\n        _settings$specialArea = settings.specialAreas,\n        specialAreas = _settings$specialArea === undefined ? {} : _settings$specialArea;\n\n    var mapOrigin = settings.mapOrigin;\n    var metrics = columns.slice();\n    if (settings.metrics) {\n      metrics = settings.metrics;\n    } else {\n      metrics.splice(columns.indexOf(dimension), 1);\n    }\n    var tooltipVisible = extra.tooltipVisible,\n        legendVisible = extra.legendVisible,\n        color = extra.color,\n        _once = extra._once;\n\n    var dataStore = {};\n    rows.forEach(function (row) {\n      dataStore[row[dimension]] = row;\n    });\n    var tooltip$$1 = tooltipVisible && getTooltip(dataType, digit, dataStore, metrics, color, labelMap);\n    var legend$$1 = legendVisible && getLegendMap({ metrics: metrics, legendName: legendName, labelMap: labelMap });\n    var seriesParams = {\n      position: position,\n      selectData: selectData,\n      label: label,\n      itemStyle: itemStyle,\n      dimension: dimension,\n      metrics: metrics,\n      rows: rows,\n      selectedMode: selectedMode,\n      roam: roam,\n      center: center,\n      aspectScale: aspectScale,\n      boundingCoords: boundingCoords,\n      zoom: zoom,\n      labelMap: labelMap,\n      scaleLimit: scaleLimit,\n      mapGrid: mapGrid\n    };\n    var series = getSeries(seriesParams);\n    var registerOptions = {\n      _once: _once,\n      beforeRegisterMap: beforeRegisterMap,\n      beforeRegisterMapOnce: beforeRegisterMapOnce,\n      registerSign: 'MAP_REGISTER_' + position,\n      registerSignOnce: 'ONCE_MAP_REGISTER_' + position,\n      position: position,\n      specialAreas: specialAreas\n    };\n    if (mapOrigin) {\n      registerMap(registerOptions, mapOrigin);\n      return { series: series, tooltip: tooltip$$1, legend: legend$$1 };\n    } else {\n      return getMapJSON({\n        position: position,\n        positionJsonLink: positionJsonLink,\n        beforeRegisterMapOnce: beforeRegisterMapOnce,\n        mapURLProfix: mapURLProfix\n      }).then(function (json) {\n        registerMap(registerOptions, json);\n        return { series: series, tooltip: tooltip$$1, legend: legend$$1 };\n      });\n    }\n  };\n\n  var VeMap = _extends({}, Core, {\n    name: 'VeMap',\n    data: function data() {\n      this.chartHandler = map$1;\n      return {};\n    }\n  });\n\n  var bmap$1 = function bmap$$1(_, __, settings, extra) {\n    var key = settings.key,\n        v = settings.v,\n        bmap$$1 = settings.bmap,\n        useOuterMap = settings.useOuterMap;\n    var _once = extra._once;\n\n    var registerSign = 'bmap_register';\n    if (!key && !useOuterMap) console.warn('settings.key must be a string.');\n    if (_once[registerSign]) return {};\n    _once[registerSign] = true;\n    if (useOuterMap) return { bmap: bmap$$1 };\n    return getBmap(key, v).then(function (_) {\n      return { bmap: bmap$$1 };\n    });\n  };\n\n  var VeBmap = _extends({}, Core, {\n    name: 'VeBmap',\n    data: function data() {\n      this.chartHandler = bmap$1;\n      return {};\n    }\n  });\n\n  var amap = function amap(_, __, settings, extra) {\n    var key = settings.key,\n        v = settings.v,\n        amap = settings.amap,\n        useOuterMap = settings.useOuterMap;\n    var _once = extra._once;\n\n    var registerSign = 'amap_register';\n    if (!key && !useOuterMap) console.warn('settings.key must be a string.');\n    if (_once[registerSign]) return {};\n    _once[registerSign] = true;\n    if (useOuterMap) return { amap: amap };\n    return getAmap(key, v).then(function (_) {\n      return { amap: amap };\n    });\n  };\n\n  var VeAmap = _extends({}, Core, {\n    name: 'VeAmap',\n    data: function data() {\n      this.chartHandler = amap;\n      return {};\n    }\n  });\n\n  function getTooltip$1(args) {\n    var itemDataType = args.itemDataType,\n        linksDataType = args.linksDataType,\n        digit = args.digit;\n\n    return {\n      trigger: 'item',\n      formatter: function formatter(item) {\n        var tpl = [];\n        var name = item.name,\n            data = item.data,\n            value = item.value,\n            color = item.color;\n\n        tpl.push(itemPoint(color));\n        tpl.push(name + ' : ');\n        if (data && data.source) {\n          tpl.push(getFormated(value, linksDataType, digit) + '<br />');\n        } else {\n          tpl.push(getFormated(value, itemDataType, digit) + '<br />');\n        }\n        return tpl.join('');\n      }\n    };\n  }\n\n  function getSeries$1(args) {\n    var rows = args.rows,\n        dimension = args.dimension,\n        metrics = args.metrics,\n        links = args.links,\n        valueFull = args.valueFull,\n        useDataValue = args.useDataValue,\n        label = args.label,\n        itemStyle = args.itemStyle,\n        lineStyle = args.lineStyle;\n\n    var dataMap = {};\n    var seriesData = rows.map(function (row) {\n      dataMap[row[dimension]] = row[metrics];\n      return { name: row[dimension], value: row[metrics] };\n    });\n    var innerLinks = null;\n    if (useDataValue) {\n      innerLinks = links.map(function (link) {\n        return _extends({}, link, { value: dataMap[link.target] });\n      });\n    } else if (!valueFull) {\n      innerLinks = links.map(function (link) {\n        return link.value == null ? _extends({}, link, { value: dataMap[link.target] }) : link;\n      });\n    } else {\n      innerLinks = links;\n    }\n\n    var result = {\n      type: 'sankey',\n      data: seriesData,\n      links: innerLinks\n    };\n    if (label) result.label = label;\n    if (itemStyle) result.itemStyle = itemStyle;\n    if (lineStyle) result.lineStyle = lineStyle;\n    return [result];\n  }\n\n  var sankey$1 = function sankey$$1(columns, rows, settings, extra) {\n    var links = settings.links,\n        _settings$dimension = settings.dimension,\n        dimension = _settings$dimension === undefined ? columns[0] : _settings$dimension,\n        _settings$metrics = settings.metrics,\n        metrics = _settings$metrics === undefined ? columns[1] : _settings$metrics,\n        _settings$dataType = settings.dataType,\n        dataType = _settings$dataType === undefined ? ['normal', 'normal'] : _settings$dataType,\n        _settings$digit = settings.digit,\n        digit = _settings$digit === undefined ? 2 : _settings$digit,\n        _settings$valueFull = settings.valueFull,\n        valueFull = _settings$valueFull === undefined ? false : _settings$valueFull,\n        _settings$useDataValu = settings.useDataValue,\n        useDataValue = _settings$useDataValu === undefined ? false : _settings$useDataValu,\n        label = settings.label,\n        itemStyle = settings.itemStyle,\n        lineStyle = settings.lineStyle;\n\n\n    if (!links) {\n      console.warn('links is needed in settings!');\n      return;\n    }\n\n    var itemDataType = dataType[0];\n    var linksDataType = dataType[1];\n    var tooltip$$1 = getTooltip$1({\n      itemDataType: itemDataType,\n      linksDataType: linksDataType,\n      digit: digit\n    });\n    var series = getSeries$1({\n      rows: rows,\n      dimension: dimension,\n      metrics: metrics,\n      links: links,\n      valueFull: valueFull,\n      useDataValue: useDataValue,\n      label: label,\n      itemStyle: itemStyle,\n      lineStyle: lineStyle\n    });\n    return { tooltip: tooltip$$1, series: series };\n  };\n\n  var VeSankey = _extends({}, Core, {\n    name: 'VeSankey',\n    data: function data() {\n      this.chartHandler = sankey$1;\n      return {};\n    }\n  });\n\n  function getAxisList(rows, label) {\n    var result = [];\n    rows.forEach(function (row) {\n      if (!~result.indexOf(row[label])) result.push(row[label]);\n    });\n    return result;\n  }\n\n  function getData(args) {\n    var rows = args.rows,\n        innerXAxisList = args.innerXAxisList,\n        innerYAxisList = args.innerYAxisList,\n        xDim = args.xDim,\n        yDim = args.yDim,\n        metrics = args.metrics,\n        type = args.type,\n        extraMetrics = args.extraMetrics;\n\n    var result = null;\n    if (type === 'cartesian') {\n      result = rows.map(function (row) {\n        var xIndex = innerXAxisList.indexOf(row[xDim]);\n        var yIndex = innerYAxisList.indexOf(row[yDim]);\n        var value = metrics ? row[metrics] : 1;\n        var extraData = extraMetrics.map(function (m) {\n          return row[m] || '-';\n        });\n        return { value: [xIndex, yIndex, value].concat(extraData) };\n      });\n    } else {\n      result = rows.map(function (row) {\n        var value = metrics ? row[metrics] : 1;\n        return { value: [row[xDim], row[yDim], value] };\n      });\n    }\n    return result;\n  }\n\n  function getAxis(list, name) {\n    return {\n      type: 'category',\n      data: list,\n      name: name,\n      nameLocation: 'end',\n      splitArea: { show: true }\n    };\n  }\n\n  function getVisualMap(args) {\n    var min = args.innerMin,\n        max = args.innerMax,\n        type = args.type,\n        heatColor = args.heatColor,\n        series = args.series;\n\n    var result = {\n      min: min,\n      max: max,\n      calculable: true\n    };\n    var extra = null;\n    if (type === 'map') {\n      extra = {\n        orient: 'vertical',\n        left: 0,\n        bottom: 0,\n        inRange: { color: heatColor || HEAT_MAP_COLOR }\n      };\n      if (!series[0].data.length) extra.show = false;\n    } else if (type === 'bmap' || type === 'amap') {\n      extra = {\n        show: false,\n        orient: 'vertical',\n        left: 0,\n        bottom: 0,\n        inRange: { color: heatColor || HEAT_BMAP_COLOR }\n      };\n    } else {\n      extra = {\n        orient: 'horizontal',\n        left: 'center',\n        bottom: 10,\n        dimension: 2,\n        inRange: heatColor && { color: heatColor }\n      };\n    }\n\n    return _extends(result, extra);\n  }\n\n  function getSeries$2(args) {\n    var chartData = args.chartData;\n\n    return [{\n      type: 'heatmap',\n      data: chartData\n    }];\n  }\n\n  function getTooltip$2(args) {\n    var dataType = args.dataType,\n        innerXAxisList = args.innerXAxisList,\n        innerYAxisList = args.innerYAxisList,\n        digit = args.digit,\n        extraMetrics = args.extraMetrics,\n        metrics = args.metrics;\n\n\n    return {\n      trigger: 'item',\n      formatter: function formatter(_ref) {\n        var color = _ref.color,\n            _ref$data$value = toArray(_ref.data.value),\n            xDim = _ref$data$value[0],\n            yDim = _ref$data$value[1],\n            value = _ref$data$value[2],\n            extraData = _ref$data$value.slice(3);\n\n        var tpl = [];\n        tpl.push(innerXAxisList[xDim] + ' ~ ' + innerYAxisList[yDim] + '<br>');\n        extraMetrics.forEach(function (m, index) {\n          tpl.push(m + ': ' + extraData[index] + '<br>');\n        });\n        tpl.push(itemPoint(color) + ' ' + metrics + ': ' + getFormated(value, dataType, digit) + '<br>');\n        return tpl.join('');\n      }\n    };\n  }\n\n  var heatmap$1 = function heatmap$$1(columns, rows, settings, status) {\n    var _settings$type = settings.type,\n        type = _settings$type === undefined ? 'cartesian' : _settings$type,\n        xAxisList = settings.xAxisList,\n        yAxisList = settings.yAxisList,\n        _settings$dimension = settings.dimension,\n        dimension = _settings$dimension === undefined ? [columns[0], columns[1]] : _settings$dimension,\n        _settings$metrics = settings.metrics,\n        metrics = _settings$metrics === undefined ? columns[2] : _settings$metrics,\n        _settings$dataType = settings.dataType,\n        dataType = _settings$dataType === undefined ? 'normal' : _settings$dataType,\n        min = settings.min,\n        max = settings.max,\n        digit = settings.digit,\n        bmap$$1 = settings.bmap,\n        amap = settings.amap,\n        geo = settings.geo,\n        key = settings.key,\n        _settings$v = settings.v,\n        v = _settings$v === undefined ? '2.0' : _settings$v,\n        position = settings.position,\n        positionJsonLink = settings.positionJsonLink,\n        beforeRegisterMap = settings.beforeRegisterMap,\n        _settings$pointSize = settings.pointSize,\n        pointSize = _settings$pointSize === undefined ? 10 : _settings$pointSize,\n        _settings$blurSize = settings.blurSize,\n        blurSize = _settings$blurSize === undefined ? 5 : _settings$blurSize,\n        heatColor = settings.heatColor,\n        yAxisName = settings.yAxisName,\n        xAxisName = settings.xAxisName,\n        beforeRegisterMapOnce = settings.beforeRegisterMapOnce,\n        _settings$mapURLProfi = settings.mapURLProfix,\n        mapURLProfix = _settings$mapURLProfi === undefined ? 'https://unpkg.com/echarts@3.6.2/map/json/' : _settings$mapURLProfi,\n        _settings$specialArea = settings.specialAreas,\n        specialAreas = _settings$specialArea === undefined ? {} : _settings$specialArea;\n    var tooltipVisible = status.tooltipVisible;\n\n    var innerXAxisList = xAxisList;\n    var innerYAxisList = yAxisList;\n    var chartData = [];\n    // add extraMetrics prop for data which only display in tooltip\n    var extraMetrics = [];\n    var mainColumn = dimension.concat([metrics]);\n    columns.forEach(function (column) {\n      if (!~mainColumn.indexOf(column)) extraMetrics.push(column);\n    });\n\n    if (type === 'cartesian') {\n      if (!innerXAxisList || !innerXAxisList.length) {\n        innerXAxisList = getAxisList(rows, dimension[0]);\n      }\n      if (!innerYAxisList || !innerYAxisList.length) {\n        innerYAxisList = getAxisList(rows, dimension[1]);\n      }\n      chartData = getData({\n        rows: rows,\n        innerXAxisList: innerXAxisList,\n        innerYAxisList: innerYAxisList,\n        xDim: dimension[0],\n        yDim: dimension[1],\n        metrics: metrics,\n        type: type,\n        extraMetrics: extraMetrics\n      });\n    } else {\n      chartData = getData({\n        rows: rows,\n        xDim: dimension[0],\n        yDim: dimension[1],\n        metrics: metrics,\n        type: type,\n        extraMetrics: extraMetrics\n      });\n    }\n    var metricsList = metrics ? rows.map(function (row) {\n      return row[metrics];\n    }) : [0, 5];\n    if (!metricsList.length) metricsList = [0];\n    var innerMin = min || Math.min.apply(null, metricsList);\n    var innerMax = max || Math.max.apply(null, metricsList);\n\n    var xAxis = getAxis(innerXAxisList, xAxisName);\n    var yAxis = getAxis(innerYAxisList, yAxisName);\n    var series = getSeries$2({ chartData: chartData });\n    var visualMap$$1 = getVisualMap({ innerMin: innerMin, innerMax: innerMax, type: type, heatColor: heatColor, series: series });\n    var tooltip$$1 = tooltipVisible && getTooltip$2({\n      dataType: dataType,\n      innerXAxisList: innerXAxisList,\n      innerYAxisList: innerYAxisList,\n      digit: digit,\n      extraMetrics: extraMetrics,\n      metrics: metrics\n    });\n\n    var options = { visualMap: visualMap$$1, series: series };\n    if (type === 'bmap') {\n      _extends(options.series[0], { coordinateSystem: 'bmap', pointSize: pointSize, blurSize: blurSize });\n\n      return getBmap(key, v).then(function (_) {\n        return _extends({ bmap: bmap$$1 }, options);\n      });\n    } else if (type === 'map') {\n      options.series[0].coordinateSystem = 'geo';\n      return getMapJSON({\n        position: position,\n        positionJsonLink: positionJsonLink,\n        beforeRegisterMapOnce: beforeRegisterMapOnce,\n        mapURLProfix: mapURLProfix\n      }).then(function (json) {\n        var geoAttr = _extends({ map: position }, geo);\n        if (beforeRegisterMap) json = beforeRegisterMap(json);\n        echartsLib.registerMap(position, json, specialAreas);\n        return _extends({ geo: geoAttr }, options);\n      });\n    } else if (type === 'amap') {\n      _extends(options.series[0], { coordinateSystem: 'amap', pointSize: pointSize, blurSize: blurSize });\n\n      return getAmap(key, v).then(function (_) {\n        return _extends({ amap: amap }, options);\n      });\n    } else {\n      return _extends({ xAxis: xAxis, yAxis: yAxis, tooltip: tooltip$$1 }, options);\n    }\n  };\n\n  var VeHeatmap = _extends({}, Core, {\n    name: 'VeHeatmap',\n    data: function data() {\n      this.chartHandler = heatmap$1;\n      return {};\n    }\n  });\n\n  function getScatterLegend(dataLabels, legendName) {\n    return {\n      data: dataLabels,\n      formatter: function formatter(name) {\n        return legendName[name] != null ? legendName[name] : name;\n      }\n    };\n  }\n\n  function getScatterTooltip(args) {\n    var tooltipTrigger = args.tooltipTrigger;\n\n    return {\n      trigger: tooltipTrigger,\n      formatter: function formatter(item) {\n        if (isArray(item)) {\n          return item.map(function (i) {\n            return getTooltipContent(i, args);\n          }).join('');\n        } else {\n          return getTooltipContent(item, args);\n        }\n      }\n    };\n  }\n\n  function getTooltipContent(item, args) {\n    var labelMap = args.labelMap,\n        columns = args.columns,\n        dataType = args.dataType,\n        digit = args.digit;\n\n    var tpl = [];\n    var color = item.color,\n        seriesName = item.seriesName,\n        value = item.data.value;\n\n    tpl.push(itemPoint(color) + ' ' + seriesName + '<br>');\n    value.forEach(function (d, i) {\n      var name = labelMap[columns[i]] || columns[i];\n      var num = isNaN(d) ? d : getFormated(d, dataType[columns[i]], digit);\n      tpl.push(name + ': ' + num + '<br>');\n    });\n    return tpl.join('');\n  }\n\n  function getScatterXAxis(args) {\n    var xAxisName = args.xAxisName,\n        axisVisible = args.axisVisible,\n        xAxisType = args.xAxisType,\n        rows = args.rows,\n        dataLabels = args.dataLabels,\n        dimension = args.dimension;\n\n    var data = [];\n    dataLabels.forEach(function (dataLabel) {\n      var itemData = rows[dataLabel];\n      itemData.forEach(function (item) {\n        var name = item[dimension];\n        if (name && !~data.indexOf(name)) data.push(name);\n      });\n    });\n\n    return [{\n      type: xAxisType,\n      show: axisVisible,\n      name: xAxisName,\n      data: data\n    }];\n  }\n\n  function getScatterYAxis(args) {\n    var min = args.min,\n        max = args.max,\n        scale = args.scale,\n        yAxisName = args.yAxisName,\n        dataType = args.dataType,\n        metrics = args.metrics,\n        digit = args.digit,\n        axisVisible = args.axisVisible;\n\n\n    return {\n      type: 'value',\n      show: axisVisible,\n      scale: scale,\n      min: min,\n      max: max,\n      axisTick: { show: false },\n      name: yAxisName,\n      axisLabel: {\n        formatter: function formatter(val) {\n          return getFormated(val, dataType[metrics[0]], digit);\n        }\n      }\n    };\n  }\n\n  function getScatterSeries(args) {\n    var rows = args.rows,\n        dataLabels = args.dataLabels,\n        columns = args.columns,\n        metrics = args.metrics,\n        dimension = args.dimension,\n        label = args.label,\n        itemStyle = args.itemStyle,\n        symbol = args.symbol,\n        symbolSizeMax = args.symbolSizeMax,\n        symbolSize = args.symbolSize,\n        symbolRotate = args.symbolRotate,\n        symbolOffset = args.symbolOffset,\n        cursor = args.cursor;\n\n    var extraMetrics = columns.filter(function (column) {\n      return !~metrics.indexOf(column) && column !== dimension;\n    });\n    var numbers = [];\n    dataLabels.forEach(function (dataLabel) {\n      rows[dataLabel].forEach(function (row) {\n        numbers.push(row[metrics[1]]);\n      });\n    });\n    var maxNum = Math.max.apply(null, numbers);\n\n    var series = [];\n    dataLabels.forEach(function (dataLabel) {\n      var result = [];\n      var itemData = rows[dataLabel];\n      itemData.forEach(function (item) {\n        var itemResult = { value: [] };\n        itemResult.value.push(item[dimension], item[metrics[0]], item[metrics[1]]);\n        extraMetrics.forEach(function (ext) {\n          itemResult.value.push(item[ext]);\n        });\n        itemResult.symbolSize = symbolSize || item[metrics[1]] / maxNum * symbolSizeMax;\n        result.push(itemResult);\n      });\n      series.push({\n        type: 'scatter',\n        data: result,\n        name: dataLabel,\n        label: label,\n        itemStyle: itemStyle,\n        symbol: symbol,\n        symbolRotate: symbolRotate,\n        symbolOffset: symbolOffset,\n        cursor: cursor\n      });\n    });\n    return series;\n  }\n\n  var scatter$1 = function scatter$$1(columns, rows, settings, extra) {\n    var _settings$dimension = settings.dimension,\n        dimension = _settings$dimension === undefined ? columns[0] : _settings$dimension,\n        _settings$metrics = settings.metrics,\n        metrics = _settings$metrics === undefined ? [columns[1], columns[2]] : _settings$metrics,\n        _settings$dataType = settings.dataType,\n        dataType = _settings$dataType === undefined ? {} : _settings$dataType,\n        _settings$xAxisType = settings.xAxisType,\n        xAxisType = _settings$xAxisType === undefined ? 'category' : _settings$xAxisType,\n        xAxisName = settings.xAxisName,\n        yAxisName = settings.yAxisName,\n        _settings$digit = settings.digit,\n        digit = _settings$digit === undefined ? 2 : _settings$digit,\n        _settings$legendName = settings.legendName,\n        legendName = _settings$legendName === undefined ? {} : _settings$legendName,\n        _settings$labelMap = settings.labelMap,\n        labelMap = _settings$labelMap === undefined ? {} : _settings$labelMap,\n        _settings$tooltipTrig = settings.tooltipTrigger,\n        tooltipTrigger = _settings$tooltipTrig === undefined ? 'item' : _settings$tooltipTrig,\n        _settings$axisVisible = settings.axisVisible,\n        axisVisible = _settings$axisVisible === undefined ? true : _settings$axisVisible,\n        _settings$symbolSizeM = settings.symbolSizeMax,\n        symbolSizeMax = _settings$symbolSizeM === undefined ? 50 : _settings$symbolSizeM,\n        symbol = settings.symbol,\n        symbolSize = settings.symbolSize,\n        symbolRotate = settings.symbolRotate,\n        symbolOffset = settings.symbolOffset,\n        cursor = settings.cursor,\n        min = settings.min,\n        max = settings.max,\n        scale = settings.scale,\n        label = settings.label,\n        itemStyle = settings.itemStyle;\n\n\n    if (isArray(rows)) {\n      var lineSettings = _extends({}, settings, {\n        xAxisName: xAxisName ? [xAxisName] : undefined,\n        yAxisName: yAxisName ? [yAxisName] : undefined,\n        scale: scale ? [scale] : undefined,\n        min: min ? [min] : undefined,\n        max: max ? [max] : undefined,\n        dimension: dimension ? [dimension] : undefined\n      });\n      var options = line$1(columns, rows, lineSettings, extra);\n      if (!options || !options.series) return {};\n      options.series.forEach(function (item) {\n        _extends(item, {\n          type: 'scatter',\n          symbol: symbol,\n          symbolSize: symbolSize || 10,\n          symbolRotate: symbolRotate,\n          symbolOffset: symbolOffset,\n          cursor: cursor,\n          label: label,\n          itemStyle: itemStyle\n        });\n      });\n      return options;\n    }\n\n    var tooltipVisible = extra.tooltipVisible,\n        legendVisible = extra.legendVisible;\n\n    var dataLabels = Object.keys(rows);\n\n    var legend$$1 = legendVisible && getScatterLegend(dataLabels, legendName);\n    var tooltip$$1 = tooltipVisible && getScatterTooltip({\n      tooltipTrigger: tooltipTrigger,\n      labelMap: labelMap,\n      columns: columns,\n      dataType: dataType,\n      digit: digit\n    });\n    var xAxis = getScatterXAxis({\n      xAxisName: xAxisName,\n      axisVisible: axisVisible,\n      xAxisType: xAxisType,\n      dataLabels: dataLabels,\n      dimension: dimension,\n      rows: rows\n    });\n    var yAxis = getScatterYAxis({\n      min: min,\n      max: max,\n      scale: scale,\n      yAxisName: yAxisName,\n      dataType: dataType,\n      metrics: metrics,\n      digit: digit,\n      axisVisible: axisVisible\n    });\n    var series = getScatterSeries({\n      rows: rows,\n      dataLabels: dataLabels,\n      columns: columns,\n      metrics: metrics,\n      dimension: dimension,\n      label: label,\n      itemStyle: itemStyle,\n      symbol: symbol,\n      symbolSizeMax: symbolSizeMax,\n      symbolSize: symbolSize,\n      symbolRotate: symbolRotate,\n      symbolOffset: symbolOffset,\n      cursor: cursor\n    });\n    return { legend: legend$$1, tooltip: tooltip$$1, xAxis: xAxis, yAxis: yAxis, series: series };\n  };\n\n  var VeScatter = _extends({}, Core, {\n    name: 'VeScatter',\n    data: function data() {\n      this.chartHandler = scatter$1;\n      return {};\n    }\n  });\n\n  var DEFAULT_MA = [5, 10, 20, 30];\n  var DEFAULT_K_NAME = '日K';\n  var DEFAULT_DOWN_COLOR = '#ec0000';\n  var DEFAULT_UP_COLOR = '#00da3c';\n  var DEFAULT_START = 50;\n  var DEFAULT_END = 100;\n  var SHOW_FALSE = { show: false };\n\n  function getCandleLegend(args) {\n    var showMA = args.showMA,\n        MA = args.MA,\n        legendName = args.legendName,\n        labelMap = args.labelMap;\n\n    var data = [DEFAULT_K_NAME];\n    if (showMA) data = data.concat(MA.map(function (v) {\n      return 'MA' + v;\n    }));\n    if (labelMap) data = data.map(function (v) {\n      return labelMap[v] == null ? v : labelMap[v];\n    });\n    return {\n      data: data,\n      formatter: function formatter(name) {\n        return legendName[name] != null ? legendName[name] : name;\n      }\n    };\n  }\n\n  function getCandleTooltip(args) {\n    var metrics = args.metrics,\n        dataType = args.dataType,\n        digit = args.digit,\n        labelMap = args.labelMap;\n\n    return {\n      trigger: 'axis',\n      axisPointer: { type: 'cross' },\n      position: function position(pos, params, el, elRect, size) {\n        var result = { top: 10 };\n        var side = pos[0] < size.viewSize[0] / 2 ? 'right' : 'left';\n        result[side] = 60;\n        return result;\n      },\n      formatter: function formatter(options) {\n        var tpl = [];\n        tpl.push(options[0].axisValue + '<br>');\n        options.forEach(function (option) {\n          var data = option.data,\n              seriesName = option.seriesName,\n              componentSubType = option.componentSubType,\n              color = option.color;\n\n          var name = labelMap[seriesName] == null ? seriesName : labelMap[seriesName];\n          tpl.push(itemPoint(color) + ' ' + name + ': ');\n          if (componentSubType === 'candlestick') {\n            tpl.push('<br>');\n            metrics.slice(0, 4).forEach(function (m, i) {\n              var name = labelMap[m] != null ? labelMap[m] : m;\n              var val = getFormated(data[i + 1], dataType, digit);\n              tpl.push('- ' + name + ': ' + val + '<br>');\n            });\n          } else if (componentSubType === 'line') {\n            var val = getFormated(data, dataType, digit);\n            tpl.push(val + '<br>');\n          } else if (componentSubType === 'bar') {\n            var _val = getFormated(data[1], dataType, digit);\n            tpl.push(_val + '<br>');\n          }\n        });\n        return tpl.join('');\n      }\n    };\n  }\n\n  function getCandleVisualMap(args) {\n    var downColor = args.downColor,\n        upColor = args.upColor,\n        MA = args.MA,\n        showMA = args.showMA;\n\n    return {\n      show: false,\n      seriesIndex: showMA ? 1 + MA.length : 1,\n      dimension: 2,\n      pieces: [{ value: 1, color: downColor }, { value: -1, color: upColor }]\n    };\n  }\n\n  function getCandleGrid(args) {\n    var showVol = args.showVol;\n\n    return [{\n      left: '10%',\n      right: '8%',\n      top: '10%',\n      height: showVol ? '50%' : '65%',\n      containLabel: false\n    }, {\n      left: '10%',\n      right: '8%',\n      top: '65%',\n      height: '16%',\n      containLabel: false\n    }];\n  }\n\n  function getCandleXAxis(args) {\n    var data = args.dims;\n\n    var type = 'category';\n    var scale = true;\n    var boundaryGap = false;\n    var splitLine = SHOW_FALSE;\n    var axisLine = { onZero: false };\n    var axisTick = SHOW_FALSE;\n    var axisLabel = SHOW_FALSE;\n    var min = 'dataMin';\n    var max = 'dataMax';\n    var gridIndex = 1;\n\n    return [{ type: type, data: data, scale: scale, boundaryGap: boundaryGap, axisLine: axisLine, splitLine: splitLine, min: min, max: max }, { type: type, gridIndex: gridIndex, data: data, scale: scale, boundaryGap: boundaryGap, axisLine: axisLine, axisTick: axisTick, splitLine: splitLine, axisLabel: axisLabel, min: min, max: max }];\n  }\n\n  function getCandleYAxis(args) {\n    var dataType = args.dataType,\n        digit = args.digit;\n\n    var scale = true;\n    var gridIndex = 1;\n    var splitNumber = 2;\n    var axisLine = SHOW_FALSE;\n    var axisTick = SHOW_FALSE;\n    var axisLabel = SHOW_FALSE;\n    var splitLine = SHOW_FALSE;\n    var formatter = function formatter(val) {\n      return getFormated(val, dataType, digit);\n    };\n\n    return [{ scale: scale, axisTick: axisTick, axisLabel: { formatter: formatter } }, { scale: scale, gridIndex: gridIndex, splitNumber: splitNumber, axisLine: axisLine, axisTick: axisTick, splitLine: splitLine, axisLabel: axisLabel }];\n  }\n\n  function getCandleDataZoom(args) {\n    var start = args.start,\n        end = args.end;\n\n\n    return [{\n      type: 'inside',\n      xAxisIndex: [0, 1],\n      start: start,\n      end: end\n    }, {\n      show: true,\n      xAxisIndex: [0, 1],\n      type: 'slider',\n      top: '85%',\n      start: start,\n      end: end\n    }];\n  }\n\n  function getCandleSeries(args) {\n    var values = args.values,\n        volumes = args.volumes,\n        upColor = args.upColor,\n        downColor = args.downColor,\n        showMA = args.showMA,\n        MA = args.MA,\n        showVol = args.showVol,\n        labelMap = args.labelMap,\n        digit = args.digit,\n        itemStyle = args.itemStyle;\n\n    var style = itemStyle || {\n      normal: {\n        color: upColor,\n        color0: downColor,\n        borderColor: null,\n        borderColor0: null\n      }\n    };\n    var lineStyle = { normal: { opacity: 0.5 } };\n    var series = [{\n      name: labelMap[DEFAULT_K_NAME] == null ? DEFAULT_K_NAME : labelMap[DEFAULT_K_NAME],\n      type: 'candlestick',\n      data: values,\n      itemStyle: style\n    }];\n\n    if (showMA) {\n      MA.forEach(function (d) {\n        var name = 'MA' + d;\n        series.push({\n          name: labelMap[name] == null ? name : labelMap[name],\n          data: calculateMA(d, values, digit),\n          type: 'line',\n          lineStyle: lineStyle,\n          smooth: true\n        });\n      });\n    }\n\n    if (showVol) {\n      series.push({\n        name: 'Volume',\n        type: 'bar',\n        xAxisIndex: 1,\n        yAxisIndex: 1,\n        data: volumes\n      });\n    }\n\n    return series;\n  }\n\n  function calculateMA(dayCount, data, digit) {\n    var result = [];\n    data.forEach(function (d, i) {\n      if (i < dayCount) {\n        result.push('-');\n      } else {\n        var sum = 0;\n        for (var j = 0; j < dayCount; j++) {\n          sum += data[i - j][1];\n        }result.push(+(sum / dayCount).toFixed(digit));\n      }\n    });\n    return result;\n  }\n\n  var candle = function candle(columns, rows, settings, status) {\n    var _settings$dimension = settings.dimension,\n        dimension = _settings$dimension === undefined ? columns[0] : _settings$dimension,\n        _settings$metrics = settings.metrics,\n        metrics = _settings$metrics === undefined ? columns.slice(1, 6) : _settings$metrics,\n        _settings$digit = settings.digit,\n        digit = _settings$digit === undefined ? 2 : _settings$digit,\n        itemStyle = settings.itemStyle,\n        _settings$labelMap = settings.labelMap,\n        labelMap = _settings$labelMap === undefined ? {} : _settings$labelMap,\n        _settings$legendName = settings.legendName,\n        legendName = _settings$legendName === undefined ? {} : _settings$legendName,\n        _settings$MA = settings.MA,\n        MA = _settings$MA === undefined ? DEFAULT_MA : _settings$MA,\n        _settings$showMA = settings.showMA,\n        showMA = _settings$showMA === undefined ? false : _settings$showMA,\n        _settings$showVol = settings.showVol,\n        showVol = _settings$showVol === undefined ? false : _settings$showVol,\n        _settings$showDataZoo = settings.showDataZoom,\n        showDataZoom = _settings$showDataZoo === undefined ? false : _settings$showDataZoo,\n        _settings$downColor = settings.downColor,\n        downColor = _settings$downColor === undefined ? DEFAULT_DOWN_COLOR : _settings$downColor,\n        _settings$upColor = settings.upColor,\n        upColor = _settings$upColor === undefined ? DEFAULT_UP_COLOR : _settings$upColor,\n        _settings$start = settings.start,\n        start = _settings$start === undefined ? DEFAULT_START : _settings$start,\n        _settings$end = settings.end,\n        end = _settings$end === undefined ? DEFAULT_END : _settings$end,\n        dataType = settings.dataType;\n    var tooltipVisible = status.tooltipVisible,\n        legendVisible = status.legendVisible;\n\n\n    var isLiteData = isArray(rows[0]);\n    var dims = [];\n    var values = [];\n    var volumes = [];\n    var candleMetrics = metrics.slice(0, 4);\n    var volumeMetrics = metrics[4];\n\n    if (isLiteData) {\n      rows.forEach(function (row) {\n        var itemResult = [];\n        dims.push(row[columns.indexOf(dimension)]);\n        candleMetrics.forEach(function (item) {\n          itemResult.push(row[columns.indexOf(item)]);\n        });\n        values.push(itemResult);\n        if (volumeMetrics) volumes.push(row[columns.indexOf(volumeMetrics)]);\n      });\n    } else {\n      rows.forEach(function (row, index) {\n        var itemResult = [];\n        dims.push(row[dimension]);\n        candleMetrics.forEach(function (item) {\n          itemResult.push(row[item]);\n        });\n        values.push(itemResult);\n        if (volumeMetrics) {\n          var _status = row[metrics[0]] > row[metrics[1]] ? 1 : -1;\n          volumes.push([index, row[volumeMetrics], _status]);\n        }\n      });\n    }\n\n    var legend$$1 = legendVisible && getCandleLegend({ showMA: showMA, MA: MA, legendName: legendName, labelMap: labelMap });\n    var tooltip$$1 = tooltipVisible && getCandleTooltip({ metrics: metrics, dataType: dataType, digit: digit, labelMap: labelMap });\n    var visualMap$$1 = showVol && getCandleVisualMap({ downColor: downColor, upColor: upColor, MA: MA, showMA: showMA });\n    var dataZoom$$1 = showDataZoom && getCandleDataZoom({ start: start, end: end });\n    var grid = getCandleGrid({ showVol: showVol });\n    var xAxis = getCandleXAxis({ dims: dims });\n    var yAxis = getCandleYAxis({ dataType: dataType, digit: digit });\n    var series = getCandleSeries({\n      values: values,\n      volumes: volumes,\n      upColor: upColor,\n      downColor: downColor,\n      showMA: showMA,\n      MA: MA,\n      showVol: showVol,\n      labelMap: labelMap,\n      digit: digit,\n      itemStyle: itemStyle\n    });\n    var axisPointer = { link: { xAxisIndex: 'all' } };\n    return { legend: legend$$1, tooltip: tooltip$$1, visualMap: visualMap$$1, grid: grid, xAxis: xAxis, yAxis: yAxis, dataZoom: dataZoom$$1, series: series, axisPointer: axisPointer };\n  };\n\n  var VeCandle = _extends({}, Core, {\n    name: 'VeCandle',\n    data: function data() {\n      this.chartHandler = candle;\n      return {};\n    }\n  });\n\n  function getTooltip$3(args) {\n    var tooltipFormatter = args.tooltipFormatter,\n        dataType = args.dataType,\n        digit = args.digit;\n\n    return {\n      formatter: function formatter(options) {\n        var seriesName = options.seriesName,\n            _options$data = options.data,\n            value = _options$data.value,\n            name = _options$data.name;\n\n        if (tooltipFormatter) {\n          return tooltipFormatter.apply(null, arguments);\n        }\n        var tpl = [];\n        tpl.push(seriesName + ': ');\n        tpl.push(getFormated(value, dataType[seriesName], digit) + ' ' + name);\n        return tpl.join('');\n      }\n    };\n  }\n\n  function getSeries$3(args) {\n    var rows = args.rows,\n        dimension = args.dimension,\n        metrics = args.metrics,\n        digit = args.digit,\n        dataType = args.dataType,\n        labelMap = args.labelMap,\n        seriesMap = args.seriesMap,\n        dataName = args.dataName;\n\n\n    var series = rows.map(function (row) {\n      var label = row[dimension];\n      var seriesItem = seriesMap[label];\n      var result = {\n        type: 'gauge',\n        name: labelMap[label] != null ? labelMap[label] : label,\n        data: [{\n          name: dataName[label] || '',\n          value: row[metrics]\n        }],\n        detail: {\n          formatter: function formatter(v) {\n            return getFormated(v, dataType[label], digit);\n          }\n        },\n        axisLabel: {\n          formatter: function formatter(v) {\n            return getFormated(v, dataType[label], digit);\n          }\n        }\n      };\n\n      if (seriesItem) {\n        Object.keys(seriesItem).forEach(function (key) {\n          if (isObject(result[key])) {\n            _extends(result[key], seriesItem[key]);\n          } else {\n            result[key] = seriesItem[key];\n          }\n        });\n      }\n\n      return result;\n    });\n\n    return series;\n  }\n\n  var gauge$1 = function gauge$$1(columns, rows, settings, extra) {\n    var _settings$dimension = settings.dimension,\n        dimension = _settings$dimension === undefined ? columns[0] : _settings$dimension,\n        _settings$metrics = settings.metrics,\n        metrics = _settings$metrics === undefined ? columns[1] : _settings$metrics,\n        _settings$digit = settings.digit,\n        digit = _settings$digit === undefined ? 2 : _settings$digit,\n        _settings$dataType = settings.dataType,\n        dataType = _settings$dataType === undefined ? {} : _settings$dataType,\n        _settings$labelMap = settings.labelMap,\n        labelMap = _settings$labelMap === undefined ? {} : _settings$labelMap,\n        _settings$seriesMap = settings.seriesMap,\n        seriesMap = _settings$seriesMap === undefined ? {} : _settings$seriesMap,\n        _settings$dataName = settings.dataName,\n        dataName = _settings$dataName === undefined ? {} : _settings$dataName;\n    var tooltipFormatter = extra.tooltipFormatter,\n        tooltipVisible = extra.tooltipVisible;\n\n\n    var tooltip$$1 = tooltipVisible && getTooltip$3({\n      tooltipFormatter: tooltipFormatter,\n      dataType: dataType\n    });\n\n    var series = getSeries$3({\n      rows: rows,\n      dimension: dimension,\n      metrics: metrics,\n      digit: digit,\n      dataType: dataType,\n      labelMap: labelMap,\n      seriesMap: seriesMap,\n      dataName: dataName\n    });\n    return { tooltip: tooltip$$1, series: series };\n  };\n\n  var VeGauge = _extends({}, Core, {\n    name: 'VeGauge',\n    data: function data() {\n      this.chartHandler = gauge$1;\n      return {};\n    }\n  });\n\n  function getTreeLegend(args) {\n    var dimension = args.dimension,\n        rows = args.rows;\n\n    var result = rows.map(function (row) {\n      return row[dimension];\n    });\n    return { data: result };\n  }\n\n  function getTreeTooltip(args) {\n    var tooltipFormatter = args.tooltipFormatter;\n\n\n    return {\n      trigger: 'item',\n      triggerOn: 'mousemove',\n      formatter: tooltipFormatter\n    };\n  }\n\n  function getTreeSeries(args) {\n    var dimension = args.dimension,\n        metrics = args.metrics,\n        rows = args.rows,\n        seriesMap = args.seriesMap;\n\n\n    var series = [];\n    rows.forEach(function (row) {\n      var label = row[dimension];\n      var seriesItem = seriesMap[label];\n      var result = {\n        type: 'tree',\n        name: row[dimension],\n        data: row[metrics]\n      };\n      if (seriesMap[row[dimension]]) {\n        Object.keys(seriesItem).forEach(function (key) {\n          if (isObject(result[key])) {\n            _extends(result[key], seriesItem[key]);\n          } else {\n            result[key] = seriesItem[key];\n          }\n        });\n      }\n      series.push(result);\n    });\n\n    return series;\n  }\n\n  var tree$1 = function tree$$1(columns, rows, settings, extra) {\n    var _settings$dimension = settings.dimension,\n        dimension = _settings$dimension === undefined ? columns[0] : _settings$dimension,\n        _settings$metrics = settings.metrics,\n        metrics = _settings$metrics === undefined ? columns[1] : _settings$metrics,\n        _settings$seriesMap = settings.seriesMap,\n        seriesMap = _settings$seriesMap === undefined ? {} : _settings$seriesMap;\n    var legendVisible = extra.legendVisible,\n        tooltipFormatter = extra.tooltipFormatter,\n        tooltipVisible = extra.tooltipVisible;\n\n\n    var series = getTreeSeries({\n      dimension: dimension,\n      metrics: metrics,\n      rows: rows,\n      seriesMap: seriesMap\n    });\n    var legend$$1 = legendVisible && rows.length > 1 && getTreeLegend({\n      dimension: dimension,\n      rows: rows\n    });\n    var tooltip$$1 = tooltipVisible && getTreeTooltip({\n      tooltipFormatter: tooltipFormatter\n    });\n    return { series: series, legend: legend$$1, tooltip: tooltip$$1 };\n  };\n\n  var VeTree = _extends({}, Core, {\n    name: 'VeTree',\n    data: function data() {\n      this.chartHandler = tree$1;\n      return {};\n    }\n  });\n\n  function getTooltip$4(args) {\n    var tooltipFormatter = args.tooltipFormatter,\n        dataType = args.dataType,\n        digit = args.digit;\n\n\n    return {\n      show: true,\n      formatter: function formatter(options) {\n        var seriesName = options.seriesName,\n            value = options.value;\n\n        if (tooltipFormatter) {\n          return tooltipFormatter.apply(null, arguments);\n        }\n\n        return [seriesName + ': ', getFormated(value, dataType, digit)].join('');\n      }\n    };\n  }\n\n  function getSeries$4(args) {\n    var dimension = args.dimension,\n        metrics = args.metrics,\n        seriesMap = args.seriesMap,\n        rows = args.rows,\n        wave = args.wave;\n\n\n    var itemWave = wave;\n    var len = isArray(seriesMap) ? seriesMap.length : 0;\n\n    return rows.slice().map(function (item, index) {\n      var data = [];\n      var result = {\n        type: 'liquidFill'\n      };\n\n      var name = item[dimension];\n      var val = Number(item[metrics]);\n      var itemMap = {};\n\n      if (isArray(seriesMap)) {\n        itemMap = !seriesMap[index] ? seriesMap[len - 1] : seriesMap[index];\n      } else if (isObject(seriesMap[name])) {\n        itemMap = seriesMap[name];\n      }\n\n      if (isArray(wave) && isArray(wave[0])) {\n        itemWave = isArray(wave[index]) ? wave[index] : wave[wave.length - 1];\n      }\n\n      // 根据传入的数据(rows)和额外配置(seriesMap)的数据组合data\n      data.push({ value: val });\n      if (itemWave && itemWave.length) {\n        data = data.concat(itemWave.map(function (val) {\n          return { value: val };\n        }));\n      }\n\n      result = _extends(result, { data: data, name: name }, itemMap);\n      return result;\n    });\n  }\n\n  var liquidfill = function liquidfill(columns, rows, settings, extra) {\n    var _settings$dimension = settings.dimension,\n        dimension = _settings$dimension === undefined ? columns[0] : _settings$dimension,\n        _settings$metrics = settings.metrics,\n        metrics = _settings$metrics === undefined ? columns[1] : _settings$metrics,\n        _settings$seriesMap = settings.seriesMap,\n        seriesMap = _settings$seriesMap === undefined ? {} : _settings$seriesMap,\n        _settings$dataType = settings.dataType,\n        dataType = _settings$dataType === undefined ? 'percent' : _settings$dataType,\n        _settings$digit = settings.digit,\n        digit = _settings$digit === undefined ? 2 : _settings$digit,\n        _settings$wave = settings.wave,\n        wave = _settings$wave === undefined ? [] : _settings$wave;\n    var tooltipVisible = extra.tooltipVisible,\n        tooltipFormatter = extra.tooltipFormatter;\n\n\n    var tooltip$$1 = tooltipVisible && getTooltip$4({\n      tooltipFormatter: tooltipFormatter,\n      dataType: dataType,\n      digit: digit\n    });\n    var series = getSeries$4({\n      rows: rows,\n      columns: columns,\n      dimension: dimension,\n      metrics: metrics,\n      seriesMap: seriesMap,\n      wave: wave\n    });\n\n    return {\n      tooltip: tooltip$$1,\n      series: series\n    };\n  };\n\n  var VeLiquidfill = _extends({}, Core, {\n    name: 'VeLiquidfill',\n    data: function data() {\n      this.chartHandler = liquidfill;\n      return {};\n    }\n  });\n\n  function getSeries$5(args) {\n    var dimension = args.dimension,\n        metrics = args.metrics,\n        rows = args.rows,\n        color = args.color,\n        sizeMax = args.sizeMax,\n        sizeMin = args.sizeMin,\n        shape = args.shape;\n\n\n    var baseType = {\n      type: 'wordCloud',\n      textStyle: {\n        normal: {\n          color: !isArray(color) && !!color ? color : function () {\n            return 'rgb(' + [Math.round(Math.random() * 160), Math.round(Math.random() * 160), Math.round(Math.random() * 160)].join(',') + ')';\n          }\n        }\n      },\n      shape: shape,\n      sizeRange: [sizeMin, sizeMax]\n    };\n\n    var len = isArray(color) ? color.length : 0;\n    var data = rows.slice().map(function (row) {\n      var text = {\n        name: row[dimension],\n        value: row[metrics]\n      };\n\n      if (len > 0) {\n        text.textStyle = {\n          normal: {\n            color: color[Math.floor(Math.random() * len)]\n          }\n        };\n      }\n      return text;\n    });\n\n    baseType.data = data;\n\n    return [baseType];\n  }\n\n  function getTooltip$5(args) {\n    var tooltipFormatter = args.tooltipFormatter;\n\n\n    return {\n      show: true,\n      formatter: function formatter(params) {\n        var _params$data = params.data,\n            name = _params$data.name,\n            value = _params$data.value;\n\n\n        if (tooltipFormatter) {\n          return tooltipFormatter.apply(null, params);\n        }\n\n        return name + ': ' + value;\n      }\n    };\n  }\n\n  var wordcloud = function wordcloud(columns, rows, settings, extra) {\n    var _settings$dimension = settings.dimension,\n        dimension = _settings$dimension === undefined ? columns[0] : _settings$dimension,\n        _settings$metrics = settings.metrics,\n        metrics = _settings$metrics === undefined ? columns[1] : _settings$metrics,\n        _settings$color = settings.color,\n        color = _settings$color === undefined ? '' : _settings$color,\n        _settings$sizeMax = settings.sizeMax,\n        sizeMax = _settings$sizeMax === undefined ? 60 : _settings$sizeMax,\n        _settings$sizeMin = settings.sizeMin,\n        sizeMin = _settings$sizeMin === undefined ? 12 : _settings$sizeMin,\n        _settings$shape = settings.shape,\n        shape = _settings$shape === undefined ? 'circle' : _settings$shape;\n    var tooltipVisible = extra.tooltipVisible,\n        tooltipFormatter = extra.tooltipFormatter;\n\n\n    var series = getSeries$5({ dimension: dimension, metrics: metrics, rows: rows, color: color, sizeMax: sizeMax, sizeMin: sizeMin, shape: shape });\n    var tooltip$$1 = tooltipVisible && getTooltip$5({ tooltipFormatter: tooltipFormatter });\n\n    return {\n      series: series,\n      tooltip: tooltip$$1\n    };\n  };\n\n  var VeWordcloud = _extends({}, Core, {\n    name: 'VeWordcloud',\n    data: function data() {\n      this.chartHandler = wordcloud;\n      return {};\n    }\n  });\n\n  var components = [VeBar, VeHistogram, VeLine, VePie, VeRing, VeWaterfall, VeFunnel, VeRadar, VeChart, VeMap, VeBmap, VeAmap, VeSankey, VeHeatmap, VeScatter, VeCandle, VeGauge, VeTree, VeLiquidfill, VeWordcloud];\n\n  function install(Vue, _) {\n    components.forEach(function (component) {\n      Vue.component(component.name, component);\n    });\n  }\n\n  if (typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  var index = {\n    VeBar: VeBar,\n    VeHistogram: VeHistogram,\n    VeRing: VeRing,\n    VeLine: VeLine,\n    VePie: VePie,\n    VeWaterfall: VeWaterfall,\n    VeFunnel: VeFunnel,\n    VeRadar: VeRadar,\n    VeChart: VeChart,\n    VeMap: VeMap,\n    VeBmap: VeBmap,\n    VeAmap: VeAmap,\n    VeSankey: VeSankey,\n    VeScatter: VeScatter,\n    VeCandle: VeCandle,\n    VeGauge: VeGauge,\n    VeTree: VeTree,\n    VeLiquidfill: VeLiquidfill,\n    VeWordcloud: VeWordcloud,\n    install: install\n  };\n\n  return index;\n\n})));\n","var zrUtil = require(\"zrender/lib/core/util\");\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var data = seriesModel.getData();\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each('value', function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum('value'); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent('value');\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each('value', function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }, true); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each('value', function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each('value', function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;","function _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.normal.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  }\n};\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/PiecewiseModel\");\n\nrequire(\"./visualMap/PiecewiseView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","var STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapping = require(\"./VisualMapping\");\n\n/**\n * @file Visual solution, for consistent option specification.\n */\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        return true;\n      }\n    }\n  }\n}\n/**\n * @param {Object} option\n * @param {Array.<string>} stateList\n * @param {Function} [supplementVisualOption]\n * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n */\n\n\nfunction createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function () {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\n/**\n * @param {Object} thisOption\n * @param {Object} newOption\n * @param {Array.<string>} keys\n */\n\n\nfunction replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {module:echarts/data/List} list\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {object} [scope] Scope for getValueState\n * @param {string} [dimension] Concrete dimension, if used.\n */\n\n\nfunction applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return data.getItemVisual(dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    data.setItemVisual(dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem, true);\n  } else {\n    data.each([dimension], eachItem, true);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n\nexports.createVisualMappings = createVisualMappings;\nexports.replaceVisualOption = replaceVisualOption;\nexports.applyVisual = applyVisual;","var echarts = require(\"../../echarts\");\n\necharts.registerProcessor(function (ecModel, api) {\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // We calculate window and reset axis here but not in model\n    // init stage and not after action dispatch handler, because\n    // reset should be called after seriesData.restoreData.\n    dataZoomModel.eachTargetAxis(resetSingleAxis); // Caution: data zoom filtering is order sensitive when using\n    // percent range and no min/max/scale set on axis.\n    // For example, we have dataZoom definition:\n    // [\n    //      {xAxisIndex: 0, start: 30, end: 70},\n    //      {yAxisIndex: 0, start: 20, end: 80}\n    // ]\n    // In this case, [20, 80] of y-dataZoom should be based on data\n    // that have filtered by x-dataZoom using range of [30, 70],\n    // but should not be based on full raw data. Thus sliding\n    // x-dataZoom will change both ranges of xAxis and yAxis,\n    // while sliding y-dataZoom will only change the range of yAxis.\n    // So we should filter x-axis after reset x-axis immediately,\n    // and then reset y-axis and filter y-axis.\n\n    dataZoomModel.eachTargetAxis(filterSingleAxis);\n  });\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // Fullfill all of the range props so that user\n    // is able to get them from chart.getOption().\n    var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n    var percentRange = axisProxy.getDataPercentWindow();\n    var valueRange = axisProxy.getDataValueWindow();\n    dataZoomModel.setRawRange({\n      start: percentRange[0],\n      end: percentRange[1],\n      startValue: valueRange[0],\n      endValue: valueRange[1]\n    }, true);\n  });\n});\n\nfunction resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n}\n\nfunction filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n}","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;","var echarts = require(\"../echarts\");\n\nrequire(\"../coord/single/singleCreator\");\n\nrequire(\"./axis/SingleAxisView\");\n\nrequire(\"../coord/single/AxisModel\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/SingleAxisPointer\");\n\necharts.extendComponentView({\n  type: 'single'\n});","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./brush/preprocessor\");\n\nrequire(\"./brush/visualEncoding\");\n\nrequire(\"./brush/BrushModel\");\n\nrequire(\"./brush/BrushView\");\n\nrequire(\"./brush/brushAction\");\n\nrequire(\"./toolbox/feature/Brush\");\n\n/**\n * Brush component entry\n */\necharts.registerPreprocessor(preprocessor);","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barPolar = require(\"../layout/barPolar\");\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./angleAxis\");\n\nrequire(\"./radiusAxis\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/PolarAxisPointer\");\n\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\n\necharts.extendComponentView({\n  type: 'polar'\n});","var borderColorQuery = ['itemStyle', 'normal', 'borderColor'];\n\nfunction _default(ecModel, api) {\n  var globalColors = ecModel.get('color');\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      // Use name 'color' but not 'borderColor' for legend usage and\n      // visual coding from other component like dataRange.\n      color: seriesModel.get(borderColorQuery) || defaulColor\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        data.setItemVisual(idx, {\n          color: itemModel.get(borderColorQuery, true)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(value, true);\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //     normal: {\n    //         show: false\n    //     }\n    // },\n    itemStyle: {// normal: {\n      // color: '各异'\n      // },\n      // emphasis: {}\n    }\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar numberUtil = require(\"../../util/number\");\n\n// Constant\nvar DEFAULT_BAR_BOUND = [20, 140];\nvar ContinuousModel = VisualMapModel.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    align: 'auto',\n    // 'auto', 'left', 'right', 'top', 'bottom'\n    calculable: false,\n    // This prop effect default component type determine,\n    // See echarts/component/visualMap/typeDefaulter.\n    range: null,\n    // selected range. In default case `range` is [min, max]\n    // and can auto change along with modification of min max,\n    // util use specifid a range.\n    realtime: true,\n    // Whether realtime update.\n    itemHeight: null,\n    // The length of the range control edge.\n    itemWidth: null,\n    // The length of the other side.\n    hoverLink: true,\n    // Enable hover highlight.\n    hoverLinkDataSize: null,\n    // The size of hovered data.\n    hoverLinkOnHandle: null // Whether trigger hoverLink when hover handle.\n    // If not specified, follow the value of `realtime`.\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    ContinuousModel.superApply(this, 'optionUpdated', arguments);\n    this.resetExtent();\n    this.resetVisual(function (mappingOption) {\n      mappingOption.mappingMethod = 'linear';\n      mappingOption.dataExtent = this.getExtent();\n    });\n\n    this._resetRange();\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  resetItemSize: function () {\n    ContinuousModel.superApply(this, 'resetItemSize', arguments);\n    var itemSize = this.itemSize;\n    this._orient === 'horizontal' && itemSize.reverse();\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n  },\n\n  /**\n   * @private\n   */\n  _resetRange: function () {\n    var dataExtent = this.getExtent();\n    var range = this.option.range;\n\n    if (!range || range.auto) {\n      // `range` should always be array (so we dont use other\n      // value like 'auto') for user-friend. (consider getOption).\n      dataExtent.auto = 1;\n      this.option.range = dataExtent;\n    } else if (zrUtil.isArray(range)) {\n      if (range[0] > range[1]) {\n        range.reverse();\n      }\n\n      range[0] = Math.max(range[0], dataExtent[0]);\n      range[1] = Math.min(range[1], dataExtent[1]);\n    }\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n    zrUtil.each(this.stateList, function (state) {\n      var symbolSize = this.option.controller[state].symbolSize;\n\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n        symbolSize[0] = 0; // For good looking.\n      }\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.range = selected.slice();\n\n    this._resetRange();\n  },\n\n  /**\n   * @public\n   */\n  getSelected: function () {\n    var dataExtent = this.getExtent();\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\n\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n    return dataInterval;\n  },\n\n  /**\n   * @override\n   */\n  getValueState: function (value) {\n    var range = this.option.range;\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n    // range[1] is processed likewise.\n\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\n  },\n\n  /**\n   * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (range) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n      }, true, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @implement\n   */\n  getVisualMeta: function (getColorVisual) {\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n    var stops = [];\n\n    function setStop(value, valueState) {\n      stops.push({\n        value: value,\n        color: getColorVisual(value, valueState)\n      });\n    } // Format to: outOfRange -- inRange -- outOfRange.\n\n\n    var iIdx = 0;\n    var oIdx = 0;\n    var iLen = iVals.length;\n    var oLen = oVals.length;\n\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n      if (oVals[oIdx] < iVals[iIdx]) {\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n      // If range is full, value beyond min, max will be clamped.\n      // make a singularity\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n      setStop(iVals[iIdx], 'inRange');\n    }\n\n    for (var first = 1; oIdx < oLen; oIdx++) {\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n        // make a singularity\n        if (first) {\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n          first = 0;\n        }\n\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    var stopsLen = stops.length;\n    return {\n      stops: stops,\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\n    };\n  }\n});\n\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\n  if (dataExtent[0] === dataExtent[1]) {\n    return dataExtent.slice();\n  } // When using colorHue mapping, it is not linear color any more.\n  // Moreover, canvas gradient seems not to be accurate linear.\n  // FIXME\n  // Should be arbitrary value 100? or based on pixel size?\n\n\n  var count = 200;\n  var step = (dataExtent[1] - dataExtent[0]) / count;\n  var value = dataExtent[0];\n  var stopValues = [];\n\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n    stopValues.push(value);\n    value += step;\n  }\n\n  stopValues.push(dataExtent[1]);\n  return stopValues;\n}\n\nvar _default = ContinuousModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  var axis = this.getAxis();\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  return {\n    coordSys: {\n      type: 'singleAxis',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: zrUtil.bind(coordSys.dataToPoint, coordSys),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar LineDraw = require(\"../../chart/helper/LineDraw\");\n\nvar MarkerView = require(\"./MarkerView\");\n\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var valueDataDim;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueDataDim = item.yAxis != null ? 'y' : 'x';\n      valueAxis = coordSys.getAxis(valueDataDim);\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueDataDim = axisInfo.valueDataDim;\n      valueAxis = axisInfo.valueAxis;\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueDataDim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  updateLayout: function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.normal.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.normal.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.coordDimToDataDim(coordDim)[0]) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      info.name = coordDim;\n      return info;\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./sankey/SankeySeries\");\n\nrequire(\"./sankey/SankeyView\");\n\nvar sankeyLayout = require(\"./sankey/sankeyLayout\");\n\nvar sankeyVisual = require(\"./sankey/sankeyVisual\");\n\necharts.registerLayout(sankeyLayout);\necharts.registerVisual(sankeyVisual);","var _echarts = require(\"./lib/echarts\");\n\n(function () {\n  for (var key in _echarts) {\n    if (_echarts == null || !_echarts.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _echarts[key];\n  }\n})();\n\nvar _export = require(\"./lib/export\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\nrequire(\"./lib/chart/line\");\n\nrequire(\"./lib/chart/bar\");\n\nrequire(\"./lib/chart/pie\");\n\nrequire(\"./lib/chart/scatter\");\n\nrequire(\"./lib/chart/radar\");\n\nrequire(\"./lib/chart/map\");\n\nrequire(\"./lib/chart/tree\");\n\nrequire(\"./lib/chart/treemap\");\n\nrequire(\"./lib/chart/graph\");\n\nrequire(\"./lib/chart/gauge\");\n\nrequire(\"./lib/chart/funnel\");\n\nrequire(\"./lib/chart/parallel\");\n\nrequire(\"./lib/chart/sankey\");\n\nrequire(\"./lib/chart/boxplot\");\n\nrequire(\"./lib/chart/candlestick\");\n\nrequire(\"./lib/chart/effectScatter\");\n\nrequire(\"./lib/chart/lines\");\n\nrequire(\"./lib/chart/heatmap\");\n\nrequire(\"./lib/chart/pictorialBar\");\n\nrequire(\"./lib/chart/themeRiver\");\n\nrequire(\"./lib/chart/custom\");\n\nrequire(\"./lib/component/graphic\");\n\nrequire(\"./lib/component/grid\");\n\nrequire(\"./lib/component/legendScroll\");\n\nrequire(\"./lib/component/tooltip\");\n\nrequire(\"./lib/component/axisPointer\");\n\nrequire(\"./lib/component/polar\");\n\nrequire(\"./lib/component/geo\");\n\nrequire(\"./lib/component/parallel\");\n\nrequire(\"./lib/component/singleAxis\");\n\nrequire(\"./lib/component/brush\");\n\nrequire(\"./lib/component/calendar\");\n\nrequire(\"./lib/component/title\");\n\nrequire(\"./lib/component/dataZoom\");\n\nrequire(\"./lib/component/visualMap\");\n\nrequire(\"./lib/component/markPoint\");\n\nrequire(\"./lib/component/markLine\");\n\nrequire(\"./lib/component/markArea\");\n\nrequire(\"./lib/component/timeline\");\n\nrequire(\"./lib/component/toolbox\");\n\nrequire(\"zrender/lib/vml/vml\");\n\nrequire(\"zrender/lib/svg/svg\");","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Link lists and struct (graph or tree)\n */\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"../Region\");\n\n// Fix for 南海诸岛\nvar geoCoord = [126, 25];\nvar points = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];\n\nfor (var i = 0; i < points.length; i++) {\n  for (var k = 0; k < points[i].length; k++) {\n    points[i][k][0] /= 10.5;\n    points[i][k][1] /= -10.5 / 0.75;\n    points[i][k][0] += geoCoord[0];\n    points[i][k][1] += geoCoord[1];\n  }\n}\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    geo.regions.push(new Region('南海诸岛', zrUtil.map(points, function (exterior) {\n      return {\n        type: 'polygon',\n        exterior: exterior\n      };\n    }), geoCoord));\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar roams = require(\"./roams\");\n\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Notice: origin this._range should be maintained, and should not be re-fetched\n    // from dataZoomModel when payload.type is 'dataZoom', otherwise 'pan' or 'zoom'\n    // info will be missed because of 'throttle' of this.dispatchAction.\n\n    if (roams.shouldRecordRange(payload, dataZoomModel.id)) {\n      this._range = dataZoomModel.getPercentRange();\n    } // Reset controllers.\n\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var dataZoomOption = dataZoomModel.option;\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function (e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          throttleRate: dataZoomModel.get('throttle', true),\n          panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n          zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n          zoomLock: dataZoomOption.zoomLock,\n          disabled: dataZoomOption.disabled,\n          roamControllerOpt: {\n            zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n            moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n            preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n          }\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName]([oldX, oldY], [newX, newY], axisModel, controller, coordInfo);\n    var percentDelta = directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    return this._range = range;\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [mouseX, mouseY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    scale = Math.max(1 / scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    return this._range = range;\n  }\n});\nvar getDirectionInfo = {\n  grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;","var completeDimensions = require('echarts/lib/data/helper/completeDimensions');\nvar echarts = require('echarts/lib/echarts');\n\necharts.extendSeriesModel({\n\n    type: 'series.liquidFill',\n\n    visualColorAccessPath: 'textStyle.normal.color',\n\n    optionUpdated: function () {\n        var option = this.option;\n        option.gridSize = Math.max(Math.floor(option.gridSize), 4);\n    },\n\n    getInitialData: function (option, ecModel) {\n        var dimensions = completeDimensions(['value'], option.data);\n        var list = new echarts.List(dimensions, this);\n        list.initData(option.data);\n        return list;\n    },\n\n    defaultOption: {\n        color: ['#294D99', '#156ACF', '#1598ED', '#45BDFF'],\n        center: ['50%', '50%'],\n        radius: '50%',\n        amplitude: '8%',\n        waveLength: '80%',\n        phase: 'auto',\n        period: 'auto',\n        direction: 'right',\n        shape: 'circle',\n\n        waveAnimation: true,\n        animationEasing: 'linear',\n        animationEasingUpdate: 'linear',\n        animationDuration: 2000,\n        animationDurationUpdate: 1000,\n\n        outline: {\n            show: true,\n            borderDistance: 8,\n            itemStyle: {\n                color: 'none',\n                borderColor: '#294D99',\n                borderWidth: 8,\n                shadowBlur: 20,\n                shadowColor: 'rgba(0, 0, 0, 0.25)'\n            }\n        },\n\n        backgroundStyle: {\n            color: '#E3F7FF'\n        },\n\n        itemStyle: {\n            opacity: 0.95,\n            shadowBlur: 50,\n            shadowColor: 'rgba(0, 0, 0, 0.4)'\n        },\n\n        label: {\n            show: true,\n            color: '#294D99',\n            insideColor: '#fff',\n            fontSize: 50,\n            fontWeight: 'bold',\n\n            align: 'center',\n            baseline: 'middle',\n            position: 'inside'\n        },\n\n        emphasis: {\n            itemStyle: {\n                opacity: 0.8\n            }\n        }\n    }\n});\n","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar isNumeric = _number.isNumeric;\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'borderWidth']; // index: +isHorizontal\n\nvar LAYOUT_ATTRS = [{\n  xy: 'x',\n  wh: 'width',\n  index: 0,\n  posDesc: ['left', 'right']\n}, {\n  xy: 'y',\n  wh: 'height',\n  index: 1,\n  posDesc: ['top', 'bottom']\n}];\nvar pathForLineWidth = new graphic.Circle();\nvar BarView = echarts.extendChartView({\n  type: 'pictorialBar',\n  render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = !!baseAxis.isHorizontal();\n    var coordSysRect = cartesian.grid.getRect();\n    var opt = {\n      ecSize: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      seriesModel: seriesModel,\n      coordSys: cartesian,\n      coordSysExtent: [[coordSysRect.x, coordSysRect.x + coordSysRect.width], [coordSysRect.y, coordSysRect.y + coordSysRect.height]],\n      isHorizontal: isHorizontal,\n      valueDim: LAYOUT_ATTRS[+isHorizontal],\n      categoryDim: LAYOUT_ATTRS[1 - isHorizontal]\n    };\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = getItemModel(data, dataIndex);\n      var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\n      var bar = createBar(data, opt, symbolMeta);\n      data.setItemGraphicEl(dataIndex, bar);\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).update(function (newIndex, oldIndex) {\n      var bar = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(bar);\n        return;\n      }\n\n      var itemModel = getItemModel(data, newIndex);\n      var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\n      var pictorialShapeStr = getShapeStr(data, symbolMeta);\n\n      if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\n        group.remove(bar);\n        data.setItemGraphicEl(newIndex, null);\n        bar = null;\n      }\n\n      if (bar) {\n        updateBar(bar, opt, symbolMeta);\n      } else {\n        bar = createBar(data, opt, symbolMeta, true);\n      }\n\n      data.setItemGraphicEl(newIndex, bar);\n      bar.__pictorialSymbolMeta = symbolMeta; // Add back\n\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).remove(function (dataIndex) {\n      var bar = oldData.getItemGraphicEl(dataIndex);\n      bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\n    }).execute();\n    this._data = data;\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (bar) {\n          removeBar(data, bar.dataIndex, ecModel, bar);\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n}); // Set or calculate default value about symbol, and calculate layout info.\n\nfunction getSymbolMeta(data, dataIndex, itemModel, opt) {\n  var layout = data.getItemLayout(dataIndex);\n  var symbolRepeat = itemModel.get('symbolRepeat');\n  var symbolClip = itemModel.get('symbolClip');\n  var symbolPosition = itemModel.get('symbolPosition') || 'start';\n  var symbolRotate = itemModel.get('symbolRotate');\n  var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\n  var isAnimationEnabled = itemModel.isAnimationEnabled();\n  var symbolMeta = {\n    dataIndex: dataIndex,\n    layout: layout,\n    itemModel: itemModel,\n    symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\n    color: data.getItemVisual(dataIndex, 'color'),\n    symbolClip: symbolClip,\n    symbolRepeat: symbolRepeat,\n    symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\n    symbolPatternSize: symbolPatternSize,\n    rotation: rotation,\n    animationModel: isAnimationEnabled ? itemModel : null,\n    hoverAnimation: isAnimationEnabled && itemModel.get('hoverAnimation'),\n    z2: itemModel.getShallow('z', true) || 0\n  };\n  prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\n  prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength, symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta);\n  prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\n  var symbolSize = symbolMeta.symbolSize;\n  var symbolOffset = itemModel.get('symbolOffset');\n\n  if (zrUtil.isArray(symbolOffset)) {\n    symbolOffset = [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])];\n  }\n\n  prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength, opt, symbolMeta);\n  return symbolMeta;\n} // bar length can be negative.\n\n\nfunction prepareBarLength(itemModel, symbolRepeat, layout, opt, output) {\n  var valueDim = opt.valueDim;\n  var symbolBoundingData = itemModel.get('symbolBoundingData');\n  var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\n  var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\n  var boundingLength;\n\n  if (zrUtil.isArray(symbolBoundingData)) {\n    var symbolBoundingExtent = [convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx, convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx];\n    symbolBoundingExtent[1] < symbolBoundingExtent[0] && symbolBoundingExtent.reverse();\n    boundingLength = symbolBoundingExtent[pxSignIdx];\n  } else if (symbolBoundingData != null) {\n    boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\n  } else if (symbolRepeat) {\n    boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\n  } else {\n    boundingLength = layout[valueDim.wh];\n  }\n\n  output.boundingLength = boundingLength;\n\n  if (symbolRepeat) {\n    output.repeatCutLength = layout[valueDim.wh];\n  }\n\n  output.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\n}\n\nfunction convertToCoordOnAxis(axis, value) {\n  return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\n} // Support ['100%', '100%']\n\n\nfunction prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength, pxSign, symbolPatternSize, opt, output) {\n  var valueDim = opt.valueDim;\n  var categoryDim = opt.categoryDim;\n  var categorySize = Math.abs(layout[categoryDim.wh]);\n  var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\n\n  if (zrUtil.isArray(symbolSize)) {\n    symbolSize = symbolSize.slice();\n  } else {\n    if (symbolSize == null) {\n      symbolSize = '100%';\n    }\n\n    symbolSize = [symbolSize, symbolSize];\n  } // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\n  // to complicated to calculate real percent value if considering scaled lineWidth.\n  // So the actual size will bigger than layout size if lineWidth is bigger than zero,\n  // which can be tolerated in pictorial chart.\n\n\n  symbolSize[categoryDim.index] = parsePercent(symbolSize[categoryDim.index], categorySize);\n  symbolSize[valueDim.index] = parsePercent(symbolSize[valueDim.index], symbolRepeat ? categorySize : Math.abs(boundingLength));\n  output.symbolSize = symbolSize; // If x or y is less than zero, show reversed shape.\n\n  var symbolScale = output.symbolScale = [symbolSize[0] / symbolPatternSize, symbolSize[1] / symbolPatternSize]; // Follow convention, 'right' and 'top' is the normal scale.\n\n  symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\n}\n\nfunction prepareLineWidth(itemModel, symbolScale, rotation, opt, output) {\n  // In symbols are drawn with scale, so do not need to care about the case that width\n  // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\n  // be calculated.\n  var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n\n  if (valueLineWidth) {\n    pathForLineWidth.attr({\n      scale: symbolScale.slice(),\n      rotation: rotation\n    });\n    pathForLineWidth.updateTransform();\n    valueLineWidth /= pathForLineWidth.getLineScale();\n    valueLineWidth *= symbolScale[opt.valueDim.index];\n  }\n\n  output.valueLineWidth = valueLineWidth;\n}\n\nfunction prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, output) {\n  var categoryDim = opt.categoryDim;\n  var valueDim = opt.valueDim;\n  var pxSign = output.pxSign;\n  var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\n  var pathLen = unitLength; // Note: rotation will not effect the layout of symbols, because user may\n  // want symbols to rotate on its center, which should not be translated\n  // when rotating.\n\n  if (symbolRepeat) {\n    var absBoundingLength = Math.abs(boundingLength);\n    var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\n    var hasEndGap = false;\n\n    if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\n      hasEndGap = true;\n      symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\n    }\n\n    symbolMargin = parsePercent(symbolMargin, symbolSize[valueDim.index]);\n    var uLenWithMargin = Math.max(unitLength + symbolMargin * 2, 0); // When symbol margin is less than 0, margin at both ends will be subtracted\n    // to ensure that all of the symbols will not be overflow the given area.\n\n    var endFix = hasEndGap ? 0 : symbolMargin * 2; // Both final repeatTimes and final symbolMargin area calculated based on\n    // boundingLength.\n\n    var repeatSpecified = isNumeric(symbolRepeat);\n    var repeatTimes = repeatSpecified ? symbolRepeat : toIntTimes((absBoundingLength + endFix) / uLenWithMargin); // Adjust calculate margin, to ensure each symbol is displayed\n    // entirely in the given layout area.\n\n    var mDiff = absBoundingLength - repeatTimes * unitLength;\n    symbolMargin = mDiff / 2 / (hasEndGap ? repeatTimes : repeatTimes - 1);\n    uLenWithMargin = unitLength + symbolMargin * 2;\n    endFix = hasEndGap ? 0 : symbolMargin * 2; // Update repeatTimes when not all symbol will be shown.\n\n    if (!repeatSpecified && symbolRepeat !== 'fixed') {\n      repeatTimes = repeatCutLength ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin) : 0;\n    }\n\n    pathLen = repeatTimes * uLenWithMargin - endFix;\n    output.repeatTimes = repeatTimes;\n    output.symbolMargin = symbolMargin;\n  }\n\n  var sizeFix = pxSign * (pathLen / 2);\n  var pathPosition = output.pathPosition = [];\n  pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\n  pathPosition[valueDim.index] = symbolPosition === 'start' ? sizeFix : symbolPosition === 'end' ? boundingLength - sizeFix : boundingLength / 2; // 'center'\n\n  if (symbolOffset) {\n    pathPosition[0] += symbolOffset[0];\n    pathPosition[1] += symbolOffset[1];\n  }\n\n  var bundlePosition = output.bundlePosition = [];\n  bundlePosition[categoryDim.index] = layout[categoryDim.xy];\n  bundlePosition[valueDim.index] = layout[valueDim.xy];\n  var barRectShape = output.barRectShape = zrUtil.extend({}, layout);\n  barRectShape[valueDim.wh] = pxSign * Math.max(Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix));\n  barRectShape[categoryDim.wh] = layout[categoryDim.wh];\n  var clipShape = output.clipShape = {}; // Consider that symbol may be overflow layout rect.\n\n  clipShape[categoryDim.xy] = -layout[categoryDim.xy];\n  clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\n  clipShape[valueDim.xy] = 0;\n  clipShape[valueDim.wh] = layout[valueDim.wh];\n}\n\nfunction createPath(symbolMeta) {\n  var symbolPatternSize = symbolMeta.symbolPatternSize;\n  var path = createSymbol( // Consider texture img, make a big size.\n  symbolMeta.symbolType, -symbolPatternSize / 2, -symbolPatternSize / 2, symbolPatternSize, symbolPatternSize, symbolMeta.color);\n  path.attr({\n    culling: true\n  });\n  path.type !== 'image' && path.setStyle({\n    strokeNoScale: true\n  });\n  return path;\n}\n\nfunction createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var symbolSize = symbolMeta.symbolSize;\n  var valueLineWidth = symbolMeta.valueLineWidth;\n  var pathPosition = symbolMeta.pathPosition;\n  var valueDim = opt.valueDim;\n  var repeatTimes = symbolMeta.repeatTimes || 0;\n  var index = 0;\n  var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\n  eachPath(bar, function (path) {\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n\n    if (index < repeatTimes) {\n      updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\n    } else {\n      updateAttr(path, null, {\n        scale: [0, 0]\n      }, symbolMeta, isUpdate, function () {\n        bundle.remove(path);\n      });\n    }\n\n    updateHoverAnimation(path, symbolMeta);\n    index++;\n  });\n\n  for (; index < repeatTimes; index++) {\n    var path = createPath(symbolMeta);\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n    bundle.add(path);\n    var target = makeTarget(index);\n    updateAttr(path, {\n      position: target.position,\n      scale: [0, 0]\n    }, {\n      scale: target.scale,\n      rotation: target.rotation\n    }, symbolMeta, isUpdate); // FIXME\n    // If all emphasis/normal through action.\n\n    path.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n    updateHoverAnimation(path, symbolMeta);\n  }\n\n  function makeTarget(index) {\n    var position = pathPosition.slice(); // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\n    // Otherwise: i = index;\n\n    var pxSign = symbolMeta.pxSign;\n    var i = index;\n\n    if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\n      i = repeatTimes - 1 - index;\n    }\n\n    position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\n    return {\n      position: position,\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    };\n  }\n\n  function onMouseOver() {\n    eachPath(bar, function (path) {\n      path.trigger('emphasis');\n    });\n  }\n\n  function onMouseOut() {\n    eachPath(bar, function (path) {\n      path.trigger('normal');\n    });\n  }\n}\n\nfunction createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var mainPath = bar.__pictorialMainPath;\n\n  if (!mainPath) {\n    mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\n    bundle.add(mainPath);\n    updateAttr(mainPath, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: [0, 0],\n      rotation: symbolMeta.rotation\n    }, {\n      scale: symbolMeta.symbolScale.slice()\n    }, symbolMeta, isUpdate);\n    mainPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n  } else {\n    updateAttr(mainPath, null, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    }, symbolMeta, isUpdate);\n  }\n\n  updateHoverAnimation(mainPath, symbolMeta);\n\n  function onMouseOver() {\n    this.trigger('emphasis');\n  }\n\n  function onMouseOut() {\n    this.trigger('normal');\n  }\n} // bar rect is used for label.\n\n\nfunction createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\n  var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\n  var barRect = bar.__pictorialBarRect;\n\n  if (!barRect) {\n    barRect = bar.__pictorialBarRect = new graphic.Rect({\n      z2: 2,\n      shape: rectShape,\n      silent: true,\n      style: {\n        stroke: 'transparent',\n        fill: 'transparent',\n        lineWidth: 0\n      }\n    });\n    bar.add(barRect);\n  } else {\n    updateAttr(barRect, null, {\n      shape: rectShape\n    }, symbolMeta, isUpdate);\n  }\n}\n\nfunction createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\n  // If not clip, symbol will be remove and rebuilt.\n  if (symbolMeta.symbolClip) {\n    var clipPath = bar.__pictorialClipPath;\n    var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\n    var valueDim = opt.valueDim;\n    var animationModel = symbolMeta.animationModel;\n    var dataIndex = symbolMeta.dataIndex;\n\n    if (clipPath) {\n      graphic.updateProps(clipPath, {\n        shape: clipShape\n      }, animationModel, dataIndex);\n    } else {\n      clipShape[valueDim.wh] = 0;\n      clipPath = new graphic.Rect({\n        shape: clipShape\n      });\n\n      bar.__pictorialBundle.setClipPath(clipPath);\n\n      bar.__pictorialClipPath = clipPath;\n      var target = {};\n      target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](clipPath, {\n        shape: target\n      }, animationModel, dataIndex);\n    }\n  }\n}\n\nfunction getItemModel(data, dataIndex) {\n  var itemModel = data.getItemModel(dataIndex);\n  itemModel.getAnimationDelayParams = getAnimationDelayParams;\n  itemModel.isAnimationEnabled = isAnimationEnabled;\n  return itemModel;\n}\n\nfunction getAnimationDelayParams(path) {\n  // The order is the same as the z-order, see `symbolRepeatDiretion`.\n  return {\n    index: path.__pictorialAnimationIndex,\n    count: path.__pictorialRepeatTimes\n  };\n}\n\nfunction isAnimationEnabled() {\n  // `animation` prop can be set on itemModel in pictorial bar chart.\n  return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\n}\n\nfunction updateHoverAnimation(path, symbolMeta) {\n  path.off('emphasis').off('normal');\n  var scale = symbolMeta.symbolScale.slice();\n  symbolMeta.hoverAnimation && path.on('emphasis', function () {\n    this.animateTo({\n      scale: [scale[0] * 1.1, scale[1] * 1.1]\n    }, 400, 'elasticOut');\n  }).on('normal', function () {\n    this.animateTo({\n      scale: scale.slice()\n    }, 400, 'elasticOut');\n  });\n}\n\nfunction createBar(data, opt, symbolMeta, isUpdate) {\n  // bar is the main element for each data.\n  var bar = new graphic.Group(); // bundle is used for location and clip.\n\n  var bundle = new graphic.Group();\n  bar.add(bundle);\n  bar.__pictorialBundle = bundle;\n  bundle.attr('position', symbolMeta.bundlePosition.slice());\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, isUpdate);\n  createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\n  bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\n  bar.__pictorialSymbolMeta = symbolMeta;\n  return bar;\n}\n\nfunction updateBar(bar, opt, symbolMeta) {\n  var animationModel = symbolMeta.animationModel;\n  var dataIndex = symbolMeta.dataIndex;\n  var bundle = bar.__pictorialBundle;\n  graphic.updateProps(bundle, {\n    position: symbolMeta.bundlePosition.slice()\n  }, animationModel, dataIndex);\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, true);\n  createOrUpdateClip(bar, opt, symbolMeta, true);\n}\n\nfunction removeBar(data, dataIndex, animationModel, bar) {\n  // Not show text when animating\n  var labelRect = bar.__pictorialBarRect;\n  labelRect && (labelRect.style.text = null);\n  var pathes = [];\n  eachPath(bar, function (path) {\n    pathes.push(path);\n  });\n  bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath); // I do not find proper remove animation for clip yet.\n\n  bar.__pictorialClipPath && (animationModel = null);\n  zrUtil.each(pathes, function (path) {\n    graphic.updateProps(path, {\n      scale: [0, 0]\n    }, animationModel, dataIndex, function () {\n      bar.parent && bar.parent.remove(bar);\n    });\n  });\n  data.setItemGraphicEl(dataIndex, null);\n}\n\nfunction getShapeStr(data, symbolMeta) {\n  return [data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none', !!symbolMeta.symbolRepeat, !!symbolMeta.symbolClip].join(':');\n}\n\nfunction eachPath(bar, cb, context) {\n  // Do not use Group#eachChild, because it do not support remove.\n  zrUtil.each(bar.__pictorialBundle.children(), function (el) {\n    el !== bar.__pictorialBarRect && cb.call(context, el);\n  });\n}\n\nfunction updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\n  immediateAttrs && el.attr(immediateAttrs); // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\n\n  if (symbolMeta.symbolClip && !isUpdate) {\n    animationAttrs && el.attr(animationAttrs);\n  } else {\n    animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb);\n  }\n}\n\nfunction updateCommon(bar, opt, symbolMeta) {\n  var color = symbolMeta.color;\n  var dataIndex = symbolMeta.dataIndex;\n  var itemModel = symbolMeta.itemModel; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var normalStyle = itemModel.getModel('itemStyle.normal').getItemStyle(['color']);\n  var hoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  eachPath(bar, function (path) {\n    // PENDING setColor should be before setStyle!!!\n    path.setColor(color);\n    path.setStyle(zrUtil.defaults({\n      fill: color,\n      opacity: symbolMeta.opacity\n    }, normalStyle));\n    graphic.setHoverStyle(path, hoverStyle);\n    cursorStyle && (path.cursor = cursorStyle);\n    path.z2 = symbolMeta.z2;\n  });\n  var barRectHoverStyle = {};\n  var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\n  var barRect = bar.__pictorialBarRect;\n  setLabel(barRect.style, barRectHoverStyle, itemModel, color, opt.seriesModel, dataIndex, barPositionOutside);\n  graphic.setHoverStyle(barRect, barRectHoverStyle);\n}\n\nfunction toIntTimes(times) {\n  var roundedTimes = Math.round(times); // Escapse accurate error\n\n  return Math.abs(times - roundedTimes) < 1e-4 ? roundedTimes : Math.ceil(times);\n}\n\nvar _default = BarView;\nmodule.exports = _default;","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar TimelineView = require(\"./TimelineView\");\n\nvar TimelineAxis = require(\"./TimelineAxis\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar PI = Math.PI;\n\nvar _default = TimelineView.extend({\n  type: 'timeline.slider',\n  init: function (ecModel, api) {\n    this.api = api;\n    /**\n     * @private\n     * @type {module:echarts/component/timeline/TimelineAxis}\n     */\n\n    this._axis;\n    /**\n     * @private\n     * @type {module:zrender/core/BoundingRect}\n     */\n\n    this._viewRect;\n    /**\n     * @type {number}\n     */\n\n    this._timer;\n    /**\n     * @type {module:zrender/Element}\n     */\n\n    this._currentPointer;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._labelGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (timelineModel, ecModel, api, payload) {\n    this.model = timelineModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    this.group.removeAll();\n\n    if (timelineModel.get('show', true)) {\n      var layoutInfo = this._layout(timelineModel, api);\n\n      var mainGroup = this._createGroup('mainGroup');\n\n      var labelGroup = this._createGroup('labelGroup');\n      /**\n       * @private\n       * @type {module:echarts/component/timeline/TimelineAxis}\n       */\n\n\n      var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\n\n      timelineModel.formatTooltip = function (dataIndex) {\n        return encodeHTML(axis.scale.getLabel(dataIndex));\n      };\n\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\n        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\n      }, this);\n\n      this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\n\n      this._position(layoutInfo, timelineModel);\n    }\n\n    this._doPlayStop();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearTimer();\n\n    this.group.removeAll();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearTimer();\n  },\n  _layout: function (timelineModel, api) {\n    var labelPosOpt = timelineModel.get('label.normal.position');\n    var orient = timelineModel.get('orient');\n    var viewRect = getViewRect(timelineModel, api); // Auto label offset.\n\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\n      labelPosOpt = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\n    } else if (isNaN(labelPosOpt)) {\n      labelPosOpt = {\n        horizontal: {\n          top: '-',\n          bottom: '+'\n        },\n        vertical: {\n          left: '-',\n          right: '+'\n        }\n      }[orient][labelPosOpt];\n    }\n\n    var labelAlignMap = {\n      horizontal: 'center',\n      vertical: labelPosOpt >= 0 || labelPosOpt === '+' ? 'left' : 'right'\n    };\n    var labelBaselineMap = {\n      horizontal: labelPosOpt >= 0 || labelPosOpt === '+' ? 'top' : 'bottom',\n      vertical: 'middle'\n    };\n    var rotationMap = {\n      horizontal: 0,\n      vertical: PI / 2\n    }; // Position\n\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\n    var controlModel = timelineModel.getModel('controlStyle');\n    var showControl = controlModel.get('show');\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\n\n    var labelRotation = timelineModel.get('label.normal.rotate') || 0;\n    labelRotation = labelRotation * PI / 180; // To radian.\n\n    var playPosition;\n    var prevBtnPosition;\n    var nextBtnPosition;\n    var axisExtent;\n    var controlPosition = controlModel.get('position', true);\n    var showControl = controlModel.get('show', true);\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\n    var xLeft = 0;\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\n\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    } else {\n      // 'top' 'right'\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    }\n\n    axisExtent = [xLeft, xRight];\n\n    if (timelineModel.get('inverse')) {\n      axisExtent.reverse();\n    }\n\n    return {\n      viewRect: viewRect,\n      mainLength: mainLength,\n      orient: orient,\n      rotation: rotationMap[orient],\n      labelRotation: labelRotation,\n      labelPosOpt: labelPosOpt,\n      labelAlign: timelineModel.get('label.normal.align') || labelAlignMap[orient],\n      labelBaseline: timelineModel.get('label.normal.verticalAlign') || timelineModel.get('label.normal.baseline') || labelBaselineMap[orient],\n      // Based on mainGroup.\n      playPosition: playPosition,\n      prevBtnPosition: prevBtnPosition,\n      nextBtnPosition: nextBtnPosition,\n      axisExtent: axisExtent,\n      controlSize: controlSize,\n      controlGap: controlGap\n    };\n  },\n  _position: function (layoutInfo, timelineModel) {\n    // Position is be called finally, because bounding rect is needed for\n    // adapt content to fill viewRect (auto adapt offset).\n    // Timeline may be not all in the viewRect when 'offset' is specified\n    // as a number, because it is more appropriate that label aligns at\n    // 'offset' but not the other edge defined by viewRect.\n    var mainGroup = this._mainGroup;\n    var labelGroup = this._labelGroup;\n    var viewRect = layoutInfo.viewRect;\n\n    if (layoutInfo.orient === 'vertical') {\n      // transfrom to horizontal, inverse rotate by left-top point.\n      var m = matrix.create();\n      var rotateOriginX = viewRect.x;\n      var rotateOriginY = viewRect.y + viewRect.height;\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\n      matrix.rotate(m, m, -PI / 2);\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\n      viewRect = viewRect.clone();\n      viewRect.applyTransform(m);\n    }\n\n    var viewBound = getBound(viewRect);\n    var mainBound = getBound(mainGroup.getBoundingRect());\n    var labelBound = getBound(labelGroup.getBoundingRect());\n    var mainPosition = mainGroup.position;\n    var labelsPosition = labelGroup.position;\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\n    var labelPosOpt = layoutInfo.labelPosOpt;\n\n    if (isNaN(labelPosOpt)) {\n      // '+' or '-'\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\n    } else {\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\n    }\n\n    mainGroup.attr('position', mainPosition);\n    labelGroup.attr('position', labelsPosition);\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\n    setOrigin(mainGroup);\n    setOrigin(labelGroup);\n\n    function setOrigin(targetGroup) {\n      var pos = targetGroup.position;\n      targetGroup.origin = [viewBound[0][0] - pos[0], viewBound[1][0] - pos[1]];\n    }\n\n    function getBound(rect) {\n      // [[xmin, xmax], [ymin, ymax]]\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\n    }\n\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\n    }\n  },\n  _createAxis: function (layoutInfo, timelineModel) {\n    var data = timelineModel.getData();\n    var axisType = timelineModel.get('axisType');\n    var scale = axisHelper.createScaleByModel(timelineModel, axisType);\n    var dataExtent = data.getDataExtent('value');\n    scale.setExtent(dataExtent[0], dataExtent[1]);\n\n    this._customizeScale(scale, data);\n\n    scale.niceTicks();\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\n    axis.model = timelineModel;\n    return axis;\n  },\n  _customizeScale: function (scale, data) {\n    scale.getTicks = function () {\n      return data.mapArray(['value'], function (value) {\n        return value;\n      });\n    };\n\n    scale.getTicksLabels = function () {\n      return zrUtil.map(this.getTicks(), scale.getLabel, scale);\n    };\n  },\n  _createGroup: function (name) {\n    var newGroup = this['_' + name] = new graphic.Group();\n    this.group.add(newGroup);\n    return newGroup;\n  },\n  _renderAxisLine: function (layoutInfo, group, axis, timelineModel) {\n    var axisExtent = axis.getExtent();\n\n    if (!timelineModel.get('lineStyle.show')) {\n      return;\n    }\n\n    group.add(new graphic.Line({\n      shape: {\n        x1: axisExtent[0],\n        y1: 0,\n        x2: axisExtent[1],\n        y2: 0\n      },\n      style: zrUtil.extend({\n        lineCap: 'round'\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\n      silent: true,\n      z2: 1\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisTick: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var ticks = axis.scale.getTicks();\n    each(ticks, function (value, dataIndex) {\n      var tickCoord = axis.dataToCoord(value);\n      var itemModel = data.getItemModel(dataIndex);\n      var itemStyleModel = itemModel.getModel('itemStyle.normal');\n      var hoverStyleModel = itemModel.getModel('itemStyle.emphasis');\n      var symbolOpt = {\n        position: [tickCoord, 0],\n        onclick: bind(this._changeTimeline, this, dataIndex)\n      };\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\n      graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\n\n      if (itemModel.get('tooltip')) {\n        el.dataIndex = dataIndex;\n        el.dataModel = timelineModel;\n      } else {\n        el.dataIndex = el.dataModel = null;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisLabel: function (layoutInfo, group, axis, timelineModel) {\n    var labelModel = timelineModel.getModel('label.normal');\n\n    if (!labelModel.get('show')) {\n      return;\n    }\n\n    var data = timelineModel.getData();\n    var ticks = axis.scale.getTicks();\n    var labels = axisHelper.getFormattedLabels(axis, labelModel.get('formatter'));\n    var labelInterval = axis.getLabelInterval();\n    each(ticks, function (tick, dataIndex) {\n      if (axis.isLabelIgnored(dataIndex, labelInterval)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var normalLabelModel = itemModel.getModel('label.normal');\n      var hoverLabelModel = itemModel.getModel('label.emphasis');\n      var tickCoord = axis.dataToCoord(tick);\n      var textEl = new graphic.Text({\n        position: [tickCoord, 0],\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\n        onclick: bind(this._changeTimeline, this, dataIndex),\n        silent: false\n      });\n      graphic.setTextStyle(textEl.style, normalLabelModel, {\n        text: labels[dataIndex],\n        textAlign: layoutInfo.labelAlign,\n        textVerticalAlign: layoutInfo.labelBaseline\n      });\n      group.add(textEl);\n      graphic.setHoverStyle(textEl, graphic.setTextStyle({}, hoverLabelModel));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderControl: function (layoutInfo, group, axis, timelineModel) {\n    var controlSize = layoutInfo.controlSize;\n    var rotation = layoutInfo.rotation;\n    var itemStyle = timelineModel.getModel('controlStyle.normal').getItemStyle();\n    var hoverStyle = timelineModel.getModel('controlStyle.emphasis').getItemStyle();\n    var rect = [0, -controlSize / 2, controlSize, controlSize];\n    var playState = timelineModel.getPlayState();\n    var inverse = timelineModel.get('inverse', true);\n    makeBtn(layoutInfo.nextBtnPosition, 'controlStyle.nextIcon', bind(this._changeTimeline, this, inverse ? '-' : '+'));\n    makeBtn(layoutInfo.prevBtnPosition, 'controlStyle.prevIcon', bind(this._changeTimeline, this, inverse ? '+' : '-'));\n    makeBtn(layoutInfo.playPosition, 'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'), bind(this._handlePlayClick, this, !playState), true);\n\n    function makeBtn(position, iconPath, onclick, willRotate) {\n      if (!position) {\n        return;\n      }\n\n      var opt = {\n        position: position,\n        origin: [controlSize / 2, 0],\n        rotation: willRotate ? -rotation : 0,\n        rectHover: true,\n        style: itemStyle,\n        onclick: onclick\n      };\n      var btn = makeIcon(timelineModel, iconPath, rect, opt);\n      group.add(btn);\n      graphic.setHoverStyle(btn, hoverStyle);\n    }\n  },\n  _renderCurrentPointer: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var currentIndex = timelineModel.getCurrentIndex();\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\n    var me = this;\n    var callback = {\n      onCreate: function (pointer) {\n        pointer.draggable = true;\n        pointer.drift = bind(me._handlePointerDrag, me);\n        pointer.ondragend = bind(me._handlePointerDragend, me);\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\n      },\n      onUpdate: function (pointer) {\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel);\n      }\n    }; // Reuse when exists, for animation and drag.\n\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\n  },\n  _handlePlayClick: function (nextState) {\n    this._clearTimer();\n\n    this.api.dispatchAction({\n      type: 'timelinePlayChange',\n      playState: nextState,\n      from: this.uid\n    });\n  },\n  _handlePointerDrag: function (dx, dy, e) {\n    this._clearTimer();\n\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\n  },\n  _handlePointerDragend: function (e) {\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\n  },\n  _pointerChangeTimeline: function (mousePos, trigger) {\n    var toCoord = this._toAxisCoord(mousePos)[0];\n\n    var axis = this._axis;\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\n    this._currentPointer.position[0] = toCoord;\n\n    this._currentPointer.dirty();\n\n    var targetDataIndex = this._findNearestTick(toCoord);\n\n    var timelineModel = this.model;\n\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\n      this._changeTimeline(targetDataIndex);\n    }\n  },\n  _doPlayStop: function () {\n    this._clearTimer();\n\n    if (this.model.getPlayState()) {\n      this._timer = setTimeout(bind(handleFrame, this), this.model.get('playInterval'));\n    }\n\n    function handleFrame() {\n      // Do not cache\n      var timelineModel = this.model;\n\n      this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\n    }\n  },\n  _toAxisCoord: function (vertex) {\n    var trans = this._mainGroup.getLocalTransform();\n\n    return graphic.applyTransform(vertex, trans, true);\n  },\n  _findNearestTick: function (axisCoord) {\n    var data = this.model.getData();\n    var dist = Infinity;\n    var targetDataIndex;\n    var axis = this._axis;\n    data.each(['value'], function (value, dataIndex) {\n      var coord = axis.dataToCoord(value);\n      var d = Math.abs(coord - axisCoord);\n\n      if (d < dist) {\n        dist = d;\n        targetDataIndex = dataIndex;\n      }\n    });\n    return targetDataIndex;\n  },\n  _clearTimer: function () {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  },\n  _changeTimeline: function (nextIndex) {\n    var currentIndex = this.model.getCurrentIndex();\n\n    if (nextIndex === '+') {\n      nextIndex = currentIndex + 1;\n    } else if (nextIndex === '-') {\n      nextIndex = currentIndex - 1;\n    }\n\n    this.api.dispatchAction({\n      type: 'timelineChange',\n      currentIndex: nextIndex,\n      from: this.uid\n    });\n  }\n});\n\nfunction getViewRect(model, api) {\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }, model.get('padding'));\n}\n\nfunction makeIcon(timelineModel, objPath, rect, opts) {\n  var icon = graphic.makePath(timelineModel.get(objPath).replace(/^path:\\/\\//, ''), zrUtil.clone(opts || {}), new BoundingRect(rect[0], rect[1], rect[2], rect[3]), 'center');\n  return icon;\n}\n/**\n * Create symbol or update symbol\n * opt: basic position and event handlers\n */\n\n\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\n  var color = itemStyleModel.get('color');\n\n  if (!symbol) {\n    var symbolType = hostModel.get('symbol');\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\n    symbol.setStyle('strokeNoScale', true);\n    group.add(symbol);\n    callback && callback.onCreate(symbol);\n  } else {\n    symbol.setColor(color);\n    group.add(symbol); // Group may be new, also need to add.\n\n    callback && callback.onUpdate(symbol);\n  } // Style\n\n\n  var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\n  symbol.setStyle(itemStyle); // Transform and events.\n\n  opt = zrUtil.merge({\n    rectHover: true,\n    z2: 100\n  }, opt, true);\n  var symbolSize = hostModel.get('symbolSize');\n  symbolSize = symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n  symbolSize[0] /= 2;\n  symbolSize[1] /= 2;\n  opt.scale = symbolSize;\n  var symbolOffset = hostModel.get('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = opt.position = opt.position || [0, 0];\n    pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  var symbolRotate = hostModel.get('symbolRotate');\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  symbol.attr(opt); // FIXME\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\n  // getBoundingRect will return wrong result.\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\n  // leverage performance and auto updateTransform)\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\n\n  symbol.updateTransform();\n  return symbol;\n}\n\nfunction pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\n  if (pointer.dragging) {\n    return;\n  }\n\n  var pointerModel = timelineModel.getModel('checkpointStyle');\n  var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\n\n  if (noAnimation || !pointerModel.get('animation', true)) {\n    pointer.attr({\n      position: [toCoord, 0]\n    });\n  } else {\n    pointer.stopAnimation(true);\n    pointer.animateTo({\n      position: [toCoord, 0]\n    }, pointerModel.get('animationDuration', true), pointerModel.get('animationEasing', true));\n  }\n}\n\nmodule.exports = _default;","var completeDimensions = require('echarts/lib/data/helper/completeDimensions');\nvar echarts = require('echarts/lib/echarts');\n\necharts.extendSeriesModel({\n\n    type: 'series.wordCloud',\n\n    visualColorAccessPath: 'textStyle.normal.color',\n\n    optionUpdated: function () {\n        var option = this.option;\n        option.gridSize = Math.max(Math.floor(option.gridSize), 4);\n    },\n\n    getInitialData: function (option, ecModel) {\n        var dimensions = completeDimensions(['value'], option.data);\n        var list = new echarts.List(dimensions, this);\n        list.initData(option.data);\n        return list;\n    },\n\n    // Most of options are from https://github.com/timdream/wordcloud2.js/blob/gh-pages/API.md\n    defaultOption: {\n\n        maskImage: null,\n\n        // Shape can be 'circle', 'cardioid', 'diamond', 'triangle-forward', 'triangle', 'pentagon', 'star'\n        shape: 'circle',\n\n        left: 'center',\n\n        top: 'center',\n\n        width: '70%',\n\n        height: '80%',\n\n        sizeRange: [12, 60],\n\n        rotationRange: [-90, 90],\n\n        rotationStep: 45,\n\n        gridSize: 8,\n\n        drawOutOfBound: false,\n\n        textStyle: {\n            normal: {\n                fontWeight: 'normal'\n            }\n        }\n    }\n});\n","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar SliderZoomModel = DataZoomModel.extend({\n  type: 'dataZoom.slider',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    // ph => placeholder. Using placehoder here because\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    // Default align to grid rect.\n    top: 'ph',\n    // Default align to grid rect.\n    width: 'ph',\n    // Default align to grid rect.\n    height: 'ph',\n    // Default align to grid rect.\n    left: null,\n    // Default align to grid rect.\n    bottom: null,\n    // Default align to grid rect.\n    backgroundColor: 'rgba(47,69,84,0)',\n    // Background of slider zoom component.\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n    // highest priority, remain for compatibility of\n    // previous version, but not recommended any more.\n    dataBackground: {\n      lineStyle: {\n        color: '#2f4554',\n        width: 0.5,\n        opacity: 0.3\n      },\n      areaStyle: {\n        color: 'rgba(47,69,84,0.3)',\n        opacity: 0.3\n      }\n    },\n    borderColor: '#ddd',\n    // border color of the box. For compatibility,\n    // if dataBackgroundColor is set, borderColor\n    // is ignored.\n    fillerColor: 'rgba(167,183,204,0.4)',\n    // Color of selected area.\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#a7b7cc'\n    },\n    labelPrecision: null,\n    labelFormatter: null,\n    showDetail: true,\n    showDataShadow: 'auto',\n    // Default auto decision.\n    realtime: true,\n    zoomLock: false,\n    // Whether disable zoom.\n    textStyle: {\n      color: '#333'\n    }\n  }\n});\nvar _default = SliderZoomModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\necharts.registerAction({\n  type: 'timelineChange',\n  event: 'timelineChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.currentIndex != null) {\n    timelineModel.setCurrentIndex(payload.currentIndex);\n\n    if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\n      timelineModel.setPlayState(false);\n    }\n  } // Set normalized currentIndex to payload.\n\n\n  ecModel.resetOption('timeline');\n  return zrUtil.defaults({\n    currentIndex: timelineModel.option.currentIndex\n  }, payload);\n});\necharts.registerAction({\n  type: 'timelinePlayChange',\n  event: 'timelinePlayChanged',\n  update: 'update'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.playState != null) {\n    timelineModel.setPlayState(payload.playState);\n  }\n});","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar helper = require(\"./helper\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function () {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function (visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function () {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function (targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('国');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function (barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function (handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function (handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function (dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function (handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function (itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function (handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function () {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function () {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(resultBatches[0]));\n\n    this._dispatchHighDown('highlight', helper.convertDataIndex(resultBatches[1]));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function (e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var dim = data.getDimension(visualMapModel.getDataDimension(data));\n    var value = data.get(dim, el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function () {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function () {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(indices));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function () {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function (vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function (type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function (e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar loadingDefault = require(\"./loading/default\");\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar Text = require(\"../graphic/Text\");\n\n// TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale);\n    attr(svgEl, 'paint-order', 'stroke');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive % PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function (el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  if (text == null) {\n    // Draw no text only when text is set to null, but not ''\n    return;\n  } else {\n    text += '';\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    }\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nvar WhiskerPath = Path.extend({\n  type: 'whiskerInBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    for (var i in shape) {\n      if (shape.hasOwnProperty(i) && i.indexOf('ends') === 0) {\n        var pts = shape[i];\n        ctx.moveTo(pts[0][0], pts[0][1]);\n        ctx.lineTo(pts[1][0], pts[1][1]);\n      }\n    }\n  }\n});\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/WhiskerBox}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Function} styleUpdater\n * @param {boolean} isInit\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction WhiskerBox(data, idx, styleUpdater, isInit) {\n  graphic.Group.call(this);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.bodyIndex;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.whiskerIndex;\n  /**\n   * @type {Function}\n   */\n\n  this.styleUpdater = styleUpdater;\n\n  this._createContent(data, idx, isInit);\n\n  this.updateData(data, idx, isInit);\n  /**\n   * Last series model.\n   * @type {module:echarts/model/Series}\n   */\n\n  this._seriesModel;\n}\n\nvar whiskerBoxProto = WhiskerBox.prototype;\n\nwhiskerBoxProto._createContent = function (data, idx, isInit) {\n  var itemLayout = data.getItemLayout(idx);\n  var constDim = itemLayout.chartLayout === 'horizontal' ? 1 : 0;\n  var count = 0; // Whisker element.\n\n  this.add(new graphic.Polygon({\n    shape: {\n      points: isInit ? transInit(itemLayout.bodyEnds, constDim, itemLayout) : itemLayout.bodyEnds\n    },\n    style: {\n      strokeNoScale: true\n    },\n    z2: 100\n  }));\n  this.bodyIndex = count++; // Box element.\n\n  var whiskerEnds = zrUtil.map(itemLayout.whiskerEnds, function (ends) {\n    return isInit ? transInit(ends, constDim, itemLayout) : ends;\n  });\n  this.add(new WhiskerPath({\n    shape: makeWhiskerEndsShape(whiskerEnds),\n    style: {\n      strokeNoScale: true\n    },\n    z2: 100\n  }));\n  this.whiskerIndex = count++;\n};\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nfunction makeWhiskerEndsShape(whiskerEnds) {\n  // zr animation only support 2-dim array.\n  var shape = {};\n  zrUtil.each(whiskerEnds, function (ends, i) {\n    shape['ends' + i] = ends;\n  });\n  return shape;\n}\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\nwhiskerBoxProto.updateData = function (data, idx, isInit) {\n  var seriesModel = this._seriesModel = data.hostModel;\n  var itemLayout = data.getItemLayout(idx);\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps']; // this.childAt(this.bodyIndex).stopAnimation(true);\n  // this.childAt(this.whiskerIndex).stopAnimation(true);\n\n  updateMethod(this.childAt(this.bodyIndex), {\n    shape: {\n      points: itemLayout.bodyEnds\n    }\n  }, seriesModel, idx);\n  updateMethod(this.childAt(this.whiskerIndex), {\n    shape: makeWhiskerEndsShape(itemLayout.whiskerEnds)\n  }, seriesModel, idx);\n  this.styleUpdater.call(null, this, data, idx);\n};\n\nzrUtil.inherits(WhiskerBox, graphic.Group);\n/**\n * @constructor\n * @alias module:echarts/chart/helper/WhiskerBoxDraw\n */\n\nfunction WhiskerBoxDraw(styleUpdater) {\n  this.group = new graphic.Group();\n  this.styleUpdater = styleUpdater;\n}\n\nvar whiskerBoxDrawProto = WhiskerBoxDraw.prototype;\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nwhiskerBoxDrawProto.updateData = function (data) {\n  var group = this.group;\n  var oldData = this._data;\n  var styleUpdater = this.styleUpdater;\n  data.diff(oldData).add(function (newIdx) {\n    if (data.hasValue(newIdx)) {\n      var symbolEl = new WhiskerBox(data, newIdx, styleUpdater, true);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n    if (!data.hasValue(newIdx)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new WhiskerBox(data, newIdx, styleUpdater);\n    } else {\n      symbolEl.updateData(data, newIdx);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && group.remove(el);\n  }).execute();\n  this._data = data;\n};\n/**\n * Remove symbols.\n * @param {module:echarts/data/List} data\n */\n\n\nwhiskerBoxDrawProto.remove = function () {\n  var group = this.group;\n  var data = this._data;\n  this._data = null;\n  data && data.eachItemGraphicEl(function (el) {\n    el && group.remove(el);\n  });\n};\n\nvar _default = WhiskerBoxDraw;\nmodule.exports = _default;","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;","var Single = require(\"./Single\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/**\n * Single coordinate system creator.\n */\n\n/**\n * Create single coordinate system and inject it into seriesModel.\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Array.<module:echarts/coord/single/Single>}\n */\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = ecModel.queryComponents({\n        mainType: 'singleAxis',\n        index: seriesModel.get('singleAxisIndex'),\n        id: seriesModel.get('singleAxisId')\n      })[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nCoordinateSystem.register('single', {\n  create: create,\n  dimensions: Single.prototype.dimensions\n});","var MarkerModel = require(\"./MarkerModel\");\n\nvar _default = MarkerModel.extend({\n  type: 'markArea',\n  defaultOption: {\n    zlevel: 0,\n    // PENDING\n    z: 1,\n    tooltip: {\n      trigger: 'item'\n    },\n    // markArea should fixed on the coordinate system\n    animation: false,\n    label: {\n      normal: {\n        show: true,\n        position: 'top'\n      },\n      emphasis: {\n        show: true,\n        position: 'top'\n      }\n    },\n    itemStyle: {\n      normal: {\n        // color and borderColor default to use color from series\n        // color: 'auto'\n        // borderColor: 'auto'\n        borderWidth: 0\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"./helper\");\n\n/**\n * @file Treemap action\n */\nvar noop = function () {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction Polyline(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createPolyline(lineData, idx, seriesScope);\n}\n\nvar polylineProto = Polyline.prototype;\n\npolylineProto._createPolyline = function (lineData, idx, seriesScope) {\n  // var seriesModel = lineData.hostModel;\n  var points = lineData.getItemLayout(idx);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    }\n  });\n  this.add(line);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childAt(0);\n  var target = {\n    shape: {\n      points: lineData.getItemLayout(idx)\n    }\n  };\n  graphic.updateProps(line, target, seriesModel, idx);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var line = this.childAt(0);\n  var itemModel = lineData.getItemModel(idx);\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n\n  if (!seriesScope || lineData.hasItemOption) {\n    lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n    hoverLineStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n  }\n\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle;\n  graphic.setHoverStyle(this);\n};\n\npolylineProto.updateLayout = function (lineData, idx) {\n  var polyline = this.childAt(0);\n  polyline.setShape('points', lineData.getItemLayout(idx));\n};\n\nzrUtil.inherits(Polyline, graphic.Group);\nvar _default = Polyline;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  var rangeInfo = coordSys.getRangeInfo();\n  return {\n    coordSys: {\n      type: 'calendar',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      cellWidth: coordSys.getCellWidth(),\n      cellHeight: coordSys.getCellHeight(),\n      rangeInfo: {\n        start: rangeInfo.start,\n        end: rangeInfo.end,\n        weeks: rangeInfo.weeks,\n        dayCount: rangeInfo.allDay\n      }\n    },\n    api: {\n      coord: zrUtil.bind(coordSys.dataToPoint, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar EffectSymbol = require(\"../helper/EffectSymbol\");\n\nvar _default = echarts.extendChartView({\n  type: 'effectScatter',\n  init: function () {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data);\n    this.group.add(effectSymbolDraw.group);\n  },\n  updateLayout: function () {\n    this._symbolDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar HeatmapLayer = require(\"./HeatmapLayer\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function (seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(coordSys, seriesModel, api);\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  dispose: function () {},\n  _renderOnCartesianAndCalendar: function (coordSys, seriesModel, api) {\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var width = xAxis.getBandWidth();\n      var height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle.normal';\n    var hoverItemStyleQuery = 'itemStyle.emphasis';\n    var labelQuery = 'label.normal';\n    var hoverLabelQuery = 'label.emphasis';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel('label.normal');\n    var hoverLabelModel = seriesModel.getModel('label.emphasis');\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [seriesModel.coordDimToDataDim('x')[0], seriesModel.coordDimToDataDim('y')[0], seriesModel.coordDimToDataDim('value')[0]] : [seriesModel.coordDimToDataDim('time')[0], seriesModel.coordDimToDataDim('value')[0]];\n    data.each(function (idx) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          return;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: point[0] - width / 2,\n            y: point[1] - height / 2,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          return;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    });\n  },\n  _renderOnGeo: function (geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform().transform;\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var points = data.mapArray(['lng', 'lat', 'value'], function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  }\n});\n\nmodule.exports = _default;","var curveTool = require(\"zrender/lib/core/curve\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n\n  function getSymbolSize(node) {\n    var symbolSize = node.getVisual('symbolSize');\n\n    if (symbolSize instanceof Array) {\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n    }\n\n    return symbolSize;\n  }\n\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _roamHelper = require(\"./roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/**\n * @payload\n * @property {string} [componentType=series]\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\necharts.registerAction({\n  type: 'geoRoam',\n  event: 'geoRoam',\n  update: 'updateLayout'\n}, function (payload, ecModel) {\n  var componentType = payload.componentType || 'series';\n  ecModel.eachComponent({\n    mainType: componentType,\n    query: payload\n  }, function (componentModel) {\n    var geo = componentModel.coordinateSystem;\n\n    if (geo.type !== 'geo') {\n      return;\n    }\n\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\n    componentModel.setCenter && componentModel.setCenter(res.center);\n    componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\n    // So the center and zoom must be in sync. Include the series not selected by legend\n\n    if (componentType === 'series') {\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\n        seriesModel.setCenter(res.center);\n        seriesModel.setZoom(res.zoom);\n      });\n    }\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true]\n   * @param {Object} [opt.moveOnMouseMove=true]\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (eventTool.notLeftMouse(e) || !checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  this.trigger('pan', dx, dy, oldX, oldY, x, y);\n}\n\nfunction mouseup(e) {\n  if (!eventTool.notLeftMouse(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  // wheelDelta maybe -0 in chrome mac.\n  if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n    return;\n  } // Convenience:\n  // Mac and VM Windows on Mac: scroll up: zoom out.\n  // Windows: scroll up: zoom in.\n\n\n  var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n}\n\nfunction zoom(e, zoomDelta, zoomX, zoomY) {\n  if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    this.trigger('zoom', zoomDelta, zoomX, zoomY);\n  }\n}\n\nfunction checkKeyBinding(roamController, prop, e) {\n  var setting = roamController._opt[prop];\n  return setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../axis/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;","var _core = require(\"../core\");\n\nvar createElement = _core.createElement;\n\nvar zrUtil = require(\"../../core/util\");\n\nvar Path = require(\"../../graphic/Path\");\n\nvar ZImage = require(\"../../graphic/Image\");\n\nvar ZText = require(\"../../graphic/Text\");\n\nvar _graphic = require(\"../graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(svgRoot, tagNames, markLabel) {\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element._dom && defs.contains(element._dom)) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate();\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element._dom = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n  defs.removeChild(element._dom);\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;","var _echarts = require(\"echarts\");\n\nvar zrUtil = _echarts.util;\nvar graphic = _echarts.graphic;\nvar matrix = _echarts.matrix;\n\n/* global BMap */\nfunction BMapCoordSys(bmap, api) {\n  this._bmap = bmap;\n  this.dimensions = ['lng', 'lat'];\n  this._mapOffset = [0, 0];\n  this._api = api;\n  this._projection = new BMap.MercatorProjection();\n}\n\nBMapCoordSys.prototype.dimensions = ['lng', 'lat'];\n\nBMapCoordSys.prototype.setZoom = function (zoom) {\n  this._zoom = zoom;\n};\n\nBMapCoordSys.prototype.setCenter = function (center) {\n  this._center = this._projection.lngLatToPoint(new BMap.Point(center[0], center[1]));\n};\n\nBMapCoordSys.prototype.setMapOffset = function (mapOffset) {\n  this._mapOffset = mapOffset;\n};\n\nBMapCoordSys.prototype.getBMap = function () {\n  return this._bmap;\n};\n\nBMapCoordSys.prototype.dataToPoint = function (data) {\n  var point = new BMap.Point(data[0], data[1]); // TODO mercator projection is toooooooo slow\n  // var mercatorPoint = this._projection.lngLatToPoint(point);\n  // var width = this._api.getZr().getWidth();\n  // var height = this._api.getZr().getHeight();\n  // var divider = Math.pow(2, 18 - 10);\n  // return [\n  //     Math.round((mercatorPoint.x - this._center.x) / divider + width / 2),\n  //     Math.round((this._center.y - mercatorPoint.y) / divider + height / 2)\n  // ];\n\n  var px = this._bmap.pointToOverlayPixel(point);\n\n  var mapOffset = this._mapOffset;\n  return [px.x - mapOffset[0], px.y - mapOffset[1]];\n};\n\nBMapCoordSys.prototype.pointToData = function (pt) {\n  var mapOffset = this._mapOffset;\n\n  var pt = this._bmap.overlayPixelToPoint({\n    x: pt[0] + mapOffset[0],\n    y: pt[1] + mapOffset[1]\n  });\n\n  return [pt.lng, pt.lat];\n};\n\nBMapCoordSys.prototype.getViewRect = function () {\n  var api = this._api;\n  return new graphic.BoundingRect(0, 0, api.getWidth(), api.getHeight());\n};\n\nBMapCoordSys.prototype.getRoamTransform = function () {\n  return matrix.create();\n};\n\nBMapCoordSys.prototype.prepareCustoms = function (data) {\n  var rect = this.getViewRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'bmap',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: zrUtil.bind(this.dataToPoint, this),\n      size: zrUtil.bind(dataToCoordSize, this)\n    }\n  };\n};\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nvar Overlay; // For deciding which dimensions to use when creating list data\n\nBMapCoordSys.dimensions = BMapCoordSys.prototype.dimensions;\n\nfunction createOverlayCtor() {\n  function Overlay(root) {\n    this._root = root;\n  }\n\n  Overlay.prototype = new BMap.Overlay();\n  /**\n   * 初始化\n   *\n   * @param {BMap.Map} map\n   * @override\n   */\n\n  Overlay.prototype.initialize = function (map) {\n    map.getPanes().labelPane.appendChild(this._root);\n    return this._root;\n  };\n  /**\n   * @override\n   */\n\n\n  Overlay.prototype.draw = function () {};\n\n  return Overlay;\n}\n\nBMapCoordSys.create = function (ecModel, api) {\n  var bmapCoordSys;\n  var root = api.getDom(); // TODO Dispose\n\n  ecModel.eachComponent('bmap', function (bmapModel) {\n    var painter = api.getZr().painter;\n    var viewportRoot = painter.getViewportRoot();\n\n    if (typeof BMap === 'undefined') {\n      throw new Error('BMap api is not loaded');\n    }\n\n    Overlay = Overlay || createOverlayCtor();\n\n    if (bmapCoordSys) {\n      throw new Error('Only one bmap component can exist');\n    }\n\n    if (!bmapModel.__bmap) {\n      // Not support IE8\n      var bmapRoot = root.querySelector('.ec-extension-bmap');\n\n      if (bmapRoot) {\n        // Reset viewport left and top, which will be changed\n        // in moving handler in BMapView\n        viewportRoot.style.left = '0px';\n        viewportRoot.style.top = '0px';\n        root.removeChild(bmapRoot);\n      }\n\n      bmapRoot = document.createElement('div');\n      bmapRoot.style.cssText = 'width:100%;height:100%'; // Not support IE8\n\n      bmapRoot.classList.add('ec-extension-bmap');\n      root.appendChild(bmapRoot);\n      var bmap = bmapModel.__bmap = new BMap.Map(bmapRoot);\n      var overlay = new Overlay(viewportRoot);\n      bmap.addOverlay(overlay); // Override\n\n      painter.getViewportRootOffset = function () {\n        return {\n          offsetLeft: 0,\n          offsetTop: 0\n        };\n      };\n    }\n\n    var bmap = bmapModel.__bmap; // Set bmap options\n    // centerAndZoom before layout and render\n\n    var center = bmapModel.get('center');\n    var zoom = bmapModel.get('zoom');\n\n    if (center && zoom) {\n      var pt = new BMap.Point(center[0], center[1]);\n      bmap.centerAndZoom(pt, zoom);\n    }\n\n    bmapCoordSys = new BMapCoordSys(bmap, api);\n    bmapCoordSys.setMapOffset(bmapModel.__mapOffset || [0, 0]);\n    bmapCoordSys.setZoom(zoom);\n    bmapCoordSys.setCenter(center);\n    bmapModel.coordinateSystem = bmapCoordSys;\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'bmap') {\n      seriesModel.coordinateSystem = bmapCoordSys;\n    }\n  });\n};\n\nvar _default = BMapCoordSys;\nmodule.exports = _default;","var DataZoomView = require(\"./DataZoomView\");\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var SingleAxis = require(\"./SingleAxis\");\n\nvar axisHelper = require(\"../axisHelper\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/**\n * Single coordinates system.\n */\n\n/**\n * Create a single coordinates system.\n *\n * @param {module:echarts/coord/single/AxisModel} axisModel\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction Single(axisModel, ecModel, api) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.dimension = 'single';\n  /**\n   * Add it just for draw tooltip.\n   *\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = ['single'];\n  /**\n   * @private\n   * @type {module:echarts/coord/single/SingleAxis}.\n   */\n\n  this._axis = null;\n  /**\n   * @private\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n\n  this._init(axisModel, ecModel, api);\n  /**\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n\n\n  this.model = axisModel;\n}\n\nSingle.prototype = {\n  type: 'singleAxis',\n  axisPointerEnabled: true,\n  constructor: Single,\n\n  /**\n   * Initialize single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @private\n   */\n  _init: function (axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data = seriesModel.getData();\n        var dim = this.dimension;\n\n        this._axis.scale.unionExtentFromData(data, seriesModel.coordDimToDataDim(dim));\n\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  },\n\n  /**\n   * Resize the single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  resize: function (axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _adjustAxis: function () {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.reverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  },\n\n  /**\n   * @param  {module:echarts/coord/single/SingleAxis} axis\n   * @param  {number} coordBase\n   */\n  _updateAxisTransform: function (axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  },\n\n  /**\n   * Get axis.\n   *\n   * @return {module:echarts/coord/single/SingleAxis}\n   */\n  getAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * Get axis, add it just for draw tooltip.\n   *\n   * @return {[type]} [description]\n   */\n  getBaseAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._axis];\n  },\n\n  /**\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function () {\n    return {\n      baseAxes: [this.getAxis()]\n    };\n  },\n\n  /**\n   * If contain point.\n   *\n   * @param  {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  },\n\n  /**\n   * Convert the series data to concrete point.\n   *\n   * @param  {number|Array.<number>} val\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  }\n};\nvar _default = Single;\nmodule.exports = _default;","var positiveBorderColorQuery = ['itemStyle', 'normal', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'normal', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'normal', 'color'];\nvar negativeColorQuery = ['itemStyle', 'normal', 'color0'];\n\nfunction _default(ecModel, api) {\n  ecModel.eachRawSeriesByType('candlestick', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect'\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var sign = data.getItemLayout(idx).sign;\n        data.setItemVisual(idx, {\n          color: itemModel.get(sign > 0 ? positiveColorQuery : negativeColorQuery),\n          borderColor: itemModel.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    labelLine.ignore = labelLine.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    labelLine.ignore = labelLine.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'normal', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getModel('normal').getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label.normal');\n  var labelHoverModel = itemModel.getModel('label.emphasis');\n  var labelLineModel = itemModel.getModel('labelLine.normal');\n  var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;","var List = require(\"../../data/List\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var list = new List(['value'], this);\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    } // Only use the first data item\n\n\n    list.initData(dataOpt);\n    return list;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      normal: {\n        color: 'auto'\n      }\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;","// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"../../coord/geo/geoCreator\");\n\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\n   * Only first map series of same mapType will drawMap\n   * @type {boolean}\n   */\n  needsDrawMap: false,\n\n  /**\n   * Group of all map series with same mapType\n   * @type {boolean}\n   */\n  seriesGroup: [],\n  init: function (option) {\n    this._fillOption(option, this.getMapType()); // this.option = option;\n\n\n    MapSeries.superApply(this, 'init', arguments);\n    this.updateSelectedMap(option.data);\n  },\n  getInitialData: function (option) {\n    var dimensions = completeDimensions(['value'], option.data || []);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  mergeOption: function (newOption) {\n    this._fillOption(newOption, this.getMapType());\n\n    MapSeries.superApply(this, 'mergeOption', arguments);\n    this.updateSelectedMap(this.option.data);\n  },\n\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n  getHostGeoModel: function () {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function () {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  _fillOption: function (option, mapName) {\n    // Shallow clone\n    // option = zrUtil.extend({}, option);\n    option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap); // return option;\n  },\n  getRawValue: function (dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    return this.getData().get('value', dataIndex);\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\n   * Map tooltip formatter\n   *\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n\n      if (!isNaN(seriesGroup[i].originalData.get('value', otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function (dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      normal: {\n        show: false,\n        color: '#000'\n      },\n      emphasis: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      }\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      normal: {\n        // color: 各异,\n        borderWidth: 0.5,\n        borderColor: '#444',\n        areaColor: '#eee'\n      },\n      // 也是选中样式\n      emphasis: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    }\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;","var env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/**\n * @file  Using layout algorithm transform the raw data to layout information.\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var single = seriesModel.coordinateSystem;\n    var layoutInfo = {}; // use the axis boundingRect for view\n\n    var rect = single.getRect();\n    layoutInfo.rect = rect;\n    var boundaryGap = seriesModel.get('boundaryGap');\n    var axis = single.getAxis();\n    layoutInfo.boundaryGap = boundaryGap;\n\n    if (axis.orient === 'horizontal') {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, height);\n    } else {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, width);\n    }\n\n    data.setLayout('layoutInfo', layoutInfo);\n  });\n}\n/**\n * The layout information about themeriver\n *\n * @param {module:echarts/data/List} data  data in the series\n * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\n * @param {number} height  value used to compute every series height\n */\n\n\nfunction themeRiverLayout(data, seriesModel, height) {\n  if (!data.count()) {\n    return;\n  }\n\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\n\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\n\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\n    return zrUtil.map(singleLayer.indices, function (idx) {\n      var pt = coordSys.dataToPoint(data.get('time', idx));\n      pt[1] = data.get('value', idx);\n      return pt;\n    });\n  });\n  var base = computeBaseline(layerPoints);\n  var baseLine = base.y0;\n  var ky = height / base.max; // set layout information for each item.\n\n  var n = layerSeries.length;\n  var m = layerSeries[0].indices.length;\n  var baseY0;\n\n  for (var j = 0; j < m; ++j) {\n    baseY0 = baseLine[j] * ky;\n    data.setItemLayout(layerSeries[0].indices[j], {\n      layerIndex: 0,\n      x: layerPoints[0][j][0],\n      y0: baseY0,\n      y: layerPoints[0][j][1] * ky\n    });\n\n    for (var i = 1; i < n; ++i) {\n      baseY0 += layerPoints[i - 1][j][1] * ky;\n      data.setItemLayout(layerSeries[i].indices[j], {\n        layerIndex: i,\n        x: layerPoints[i][j][0],\n        y0: baseY0,\n        y: layerPoints[i][j][1] * ky\n      });\n    }\n  }\n}\n/**\n * Compute the baseLine of the rawdata\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\n *\n * @param  {Array.<Array>} data  the points in each layer\n * @return {Object}\n */\n\n\nfunction computeBaseline(data) {\n  var layerNum = data.length;\n  var pointNum = data[0].length;\n  var sums = [];\n  var y0 = [];\n  var max = 0;\n  var temp;\n  var base = {};\n\n  for (var i = 0; i < pointNum; ++i) {\n    for (var j = 0, temp = 0; j < layerNum; ++j) {\n      temp += data[j][i][1];\n    }\n\n    if (temp > max) {\n      max = temp;\n    }\n\n    sums.push(temp);\n  }\n\n  for (var k = 0; k < pointNum; ++k) {\n    y0[k] = (max - sums[k]) / 2;\n  }\n\n  max = 0;\n\n  for (var l = 0; l < pointNum; ++l) {\n    var sum = sums[l] + y0[l];\n\n    if (sum > max) {\n      max = sum;\n    }\n  }\n\n  base.y0 = y0;\n  base.max = max;\n  return base;\n}\n\nmodule.exports = _default;","require(\"./visualMapContinuous\");\n\nrequire(\"./visualMapPiecewise\");","function _default(ecModel) {\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var colorList = seriesModel.get('color');\n    var itemStyleModel = seriesModel.getModel('itemStyle.normal');\n    var areaColor = itemStyleModel.get('areaColor');\n    var color = itemStyleModel.get('color') || colorList[seriesModel.seriesIndex % colorList.length];\n    seriesModel.getData().setVisual({\n      'areaColor': areaColor,\n      'color': color\n    });\n  });\n}\n\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;","require(\"../coord/radar/Radar\");\n\nrequire(\"../coord/radar/RadarModel\");\n\nrequire(\"./radar/RadarView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\nvar curry = zrUtil.curry;\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {number} dataZoomInfo.throttleRate\n * @param {Function} dataZoomInfo.panGetRange\n * @param {Function} dataZoomInfo.zoomGetRange\n * @param {boolean} [dataZoomInfo.zoomLock]\n * @param {boolean} [dataZoomInfo.disabled]\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.throttleRate, 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction shouldRecordRange(payload, dataZoomId) {\n  if (payload && payload.type === 'dataZoom' && payload.batch) {\n    for (var i = 0, len = payload.batch.length; i < len; i++) {\n      if (payload.batch[i].dataZoomId === dataZoomId) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  controller.on('pan', curry(onPan, newRecord));\n  controller.on('zoom', curry(onZoom, newRecord));\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n\nfunction onPan(record, dx, dy, oldX, oldY, newX, newY) {\n  wrapAndDispatch(record, function (info) {\n    return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n  });\n}\n\nfunction onZoom(record, scale, mouseX, mouseY) {\n  wrapAndDispatch(record, function (info) {\n    return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n  });\n}\n\nfunction wrapAndDispatch(record, getRange) {\n  var batch = [];\n  zrUtil.each(record.dataZoomInfos, function (info) {\n    var range = getRange(info);\n    !info.disabled && range && batch.push({\n      dataZoomId: info.dataZoomId,\n      start: range[0],\n      end: range[1]\n    });\n  });\n  record.dispatchAction(batch);\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType;\n  var opt = {};\n  var typePriority = {\n    'true': 2,\n    'move': 1,\n    'false': 0,\n    'undefined': -1\n  };\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\n    typePriority[oneType] > typePriority[controlType] && (controlType = oneType); // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\n\n    zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\n  });\n  return {\n    controlType: controlType,\n    opt: opt\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.shouldRecordRange = shouldRecordRange;\nexports.generateCoordId = generateCoordId;","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;","var _forceHelper = require(\"./forceHelper\");\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = require(\"../../util/number\");\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries);\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.normal.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./GridModel\");\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.getFormattedLabels();\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransfrom(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar echarts = require(\"../../echarts\");\n\n/**\n * @file  The file used to draw sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar SankeyShape = graphic.extendShape({\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    cpx2: 0,\n    cpy2: 0,\n    extent: 0\n  },\n  buildPath: function (ctx, shape) {\n    var halfExtent = shape.extent / 2;\n    ctx.moveTo(shape.x1, shape.y1 - halfExtent);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1 - halfExtent, shape.cpx2, shape.cpy2 - halfExtent, shape.x2, shape.y2 - halfExtent);\n    ctx.lineTo(shape.x2, shape.y2 + halfExtent);\n    ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + halfExtent, shape.cpx1, shape.cpy1 + halfExtent, shape.x1, shape.y1 + halfExtent);\n    ctx.closePath();\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'sankey',\n\n  /**\n   * @private\n   * @type {module:echarts/chart/sankey/SankeySeries}\n   */\n  _model: null,\n  render: function (seriesModel, ecModel, api) {\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    this._model = seriesModel;\n    group.removeAll();\n    group.attr('position', [layoutInfo.x, layoutInfo.y]); // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyShape();\n      curve.dataIndex = edge.dataIndex;\n      curve.seriesIndex = seriesModel.seriesIndex;\n      curve.dataType = 'edge';\n      var lineStyleModel = edge.getModel('lineStyle.normal');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var n2Layout = edge.node2.getLayout();\n      var edgeLayout = edge.getLayout();\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      var x1 = n1Layout.x + n1Layout.dx;\n      var y1 = n1Layout.y + edgeLayout.sy + edgeLayout.dy / 2;\n      var x2 = n2Layout.x;\n      var y2 = n2Layout.y + edgeLayout.ty + edgeLayout.dy / 2;\n      var cpx1 = x1 * (1 - curvature) + x2 * curvature;\n      var cpy1 = y1;\n      var cpx2 = x1 * curvature + x2 * (1 - curvature);\n      var cpy2 = y2;\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.setStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          break;\n      }\n\n      graphic.setHoverStyle(curve, edge.getModel('lineStyle.emphasis').getItemStyle());\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n    }); // generate a rect  for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var labelModel = itemModel.getModel('label.normal');\n      var labelHoverModel = itemModel.getModel('label.emphasis');\n      var rect = new graphic.Rect({\n        shape: {\n          x: layout.x,\n          y: layout.y,\n          width: node.getLayout().dx,\n          height: node.getLayout().dy\n        },\n        style: itemModel.getModel('itemStyle.normal').getItemStyle()\n      });\n      var hoverStyle = node.getModel('itemStyle.emphasis').getItemStyle();\n      graphic.setLabelStyle(rect.style, hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id,\n        isRectText: true\n      });\n      rect.setStyle('fill', node.getVisual('color'));\n      graphic.setHoverStyle(rect, hoverStyle);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      rect.dataType = 'node';\n    });\n\n    if (!this._data && seriesModel.get('animation')) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","require(\"./heatmap/HeatmapSeries\");\n\nrequire(\"./heatmap/HeatmapView\");","var echarts = require(\"echarts\");\n\nfunction v2Equal(a, b) {\n  return a && b && a[0] === b[0] && a[1] === b[1];\n}\n\nvar _default = echarts.extendComponentModel({\n  type: 'bmap',\n  getBMap: function () {\n    // __bmap is injected when creating BMapCoordSys\n    return this.__bmap;\n  },\n  setCenterAndZoom: function (center, zoom) {\n    this.option.center = center;\n    this.option.zoom = zoom;\n  },\n  centerOrZoomChanged: function (center, zoom) {\n    var option = this.option;\n    return !(v2Equal(center, option.center) && zoom === option.zoom);\n  },\n  defaultOption: {\n    center: [104.114129, 37.550339],\n    zoom: 5,\n    mapStyle: {},\n    roam: false\n  }\n});\n\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n/**\n * @param {Object} option\n * @param {string} [option.type] See visualHandlers.\n * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n *                                              required when mappingMethod is 'linear'\n * @param {Array.<Object>=} [option.pieceList] [\n *                                             {value: someValue},\n *                                             {interval: [min1, max1], visual: {...}},\n *                                             {interval: [min2, max2]}\n *                                             ],\n *                                            required when mappingMethod is 'piecewise'.\n *                                            Visual for only each piece can be specified.\n * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n *                                            required when mappingMethod is 'category'.\n *                                            If no option.categories, categories is set\n *                                            as [0, 1, 2, ...].\n * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n * @param {(Array|Object|*)} [option.visual]  Visual data.\n *                                            when mappingMethod is 'category',\n *                                            visual data can be array or object\n *                                            (like: {cate1: '#222', none: '#fff'})\n *                                            or primary types (which represents\n *                                            defualt category visual), otherwise visual\n *                                            can be array or primary (which will be\n *                                            normalized to array).\n *\n */\n\nvar VisualMapping = function (option) {\n  var mappingMethod = option.mappingMethod;\n  var visualType = option.type;\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n\n  var thisOption = this.option = zrUtil.clone(option);\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.type = visualType;\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.mappingMethod = mappingMethod;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._normalizeData = normalizers[mappingMethod];\n  var visualHandler = visualHandlers[visualType];\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.applyVisual = visualHandler.applyVisual;\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.getColorMapper = visualHandler.getColorMapper;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._doMap = visualHandler._doMap[mappingMethod];\n\n  if (mappingMethod === 'piecewise') {\n    normalizeVisualRange(thisOption);\n    preprocessForPiecewise(thisOption);\n  } else if (mappingMethod === 'category') {\n    thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\n    // which need no more preprocess except normalize visual.\n    : normalizeVisualRange(thisOption, true);\n  } else {\n    // mappingMethod === 'linear' or 'fixed'\n    zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n    normalizeVisualRange(thisOption);\n  }\n};\n\nVisualMapping.prototype = {\n  constructor: VisualMapping,\n  mapValueToVisual: function (value) {\n    var normalized = this._normalizeData(value);\n\n    return this._doMap(normalized, value);\n  },\n  getNormalizer: function () {\n    return zrUtil.bind(this._normalizeData, this);\n  }\n};\nvar visualHandlers = VisualMapping.visualHandlers = {\n  color: {\n    applyVisual: makeApplyVisual('color'),\n\n    /**\n     * Create a mapper function\n     * @return {Function}\n     */\n    getColorMapper: function () {\n      var thisOption = this.option;\n      return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\n        !isNormalized && (value = this._normalizeData(value));\n        return doMapCategory.call(this, value);\n      } : function (value, isNormalized, out) {\n        // If output rgb array\n        // which will be much faster and useful in pixel manipulation\n        var returnRGBArray = !!out;\n        !isNormalized && (value = this._normalizeData(value));\n        out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\n        return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\n      }, this);\n    },\n    _doMap: {\n      linear: function (normalized) {\n        return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n      },\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  colorHue: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, value);\n  }),\n  colorSaturation: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, value);\n  }),\n  colorLightness: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, null, value);\n  }),\n  colorAlpha: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyAlpha(color, value);\n  }),\n  opacity: {\n    applyVisual: makeApplyVisual('opacity'),\n    _doMap: makeDoMap([0, 1])\n  },\n  symbol: {\n    applyVisual: function (value, getter, setter) {\n      var symbolCfg = this.mapValueToVisual(value);\n\n      if (zrUtil.isString(symbolCfg)) {\n        setter('symbol', symbolCfg);\n      } else if (isObject(symbolCfg)) {\n        for (var name in symbolCfg) {\n          if (symbolCfg.hasOwnProperty(name)) {\n            setter(name, symbolCfg[name]);\n          }\n        }\n      }\n    },\n    _doMap: {\n      linear: doMapToArray,\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = doMapToArray.call(this, normalized);\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  symbolSize: {\n    applyVisual: makeApplyVisual('symbolSize'),\n    _doMap: makeDoMap([0, 1])\n  }\n};\n\nfunction preprocessForPiecewise(thisOption) {\n  var pieceList = thisOption.pieceList;\n  thisOption.hasSpecialVisual = false;\n  zrUtil.each(pieceList, function (piece, index) {\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\n    // a visual range, so it does not need to be normalized.\n\n    if (piece.visual != null) {\n      thisOption.hasSpecialVisual = true;\n    }\n  });\n}\n\nfunction preprocessForSpecifiedCategory(thisOption) {\n  // Hash categories.\n  var categories = thisOption.categories;\n  var visual = thisOption.visual;\n  var categoryMap = thisOption.categoryMap = {};\n  each(categories, function (cate, index) {\n    categoryMap[cate] = index;\n  }); // Process visual map input.\n\n  if (!zrUtil.isArray(visual)) {\n    var visualArr = [];\n\n    if (zrUtil.isObject(visual)) {\n      each(visual, function (v, cate) {\n        var index = categoryMap[cate];\n        visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n      });\n    } else {\n      // Is primary type, represents default visual.\n      visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n    }\n\n    visual = setVisualToOption(thisOption, visualArr);\n  } // Remove categories that has no visual,\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n\n\n  for (var i = categories.length - 1; i >= 0; i--) {\n    if (visual[i] == null) {\n      delete categoryMap[categories[i]];\n      categories.pop();\n    }\n  }\n}\n\nfunction normalizeVisualRange(thisOption, isCategory) {\n  var visual = thisOption.visual;\n  var visualArr = [];\n\n  if (zrUtil.isObject(visual)) {\n    each(visual, function (v) {\n      visualArr.push(v);\n    });\n  } else if (visual != null) {\n    visualArr.push(visual);\n  }\n\n  var doNotNeedPair = {\n    color: 1,\n    symbol: 1\n  };\n\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\n    // Do not care visualArr.length === 0, which is illegal.\n    visualArr[1] = visualArr[0];\n  }\n\n  setVisualToOption(thisOption, visualArr);\n}\n\nfunction makePartialColorVisualHandler(applyValue) {\n  return {\n    applyVisual: function (value, getter, setter) {\n      value = this.mapValueToVisual(value); // Must not be array value\n\n      setter('color', applyValue(getter('color'), value));\n    },\n    _doMap: makeDoMap([0, 1])\n  };\n}\n\nfunction doMapToArray(normalized) {\n  var visual = this.option.visual;\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {};\n}\n\nfunction makeApplyVisual(visualType) {\n  return function (value, getter, setter) {\n    setter(visualType, this.mapValueToVisual(value));\n  };\n}\n\nfunction doMapCategory(normalized) {\n  var visual = this.option.visual;\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\n}\n\nfunction doMapFixed() {\n  return this.option.visual[0];\n}\n\nfunction makeDoMap(sourceExtent) {\n  return {\n    linear: function (normalized) {\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\n    },\n    category: doMapCategory,\n    piecewise: function (normalized, value) {\n      var result = getSpecifiedVisual.call(this, value);\n\n      if (result == null) {\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\n      }\n\n      return result;\n    },\n    fixed: doMapFixed\n  };\n}\n\nfunction getSpecifiedVisual(value) {\n  var thisOption = this.option;\n  var pieceList = thisOption.pieceList;\n\n  if (thisOption.hasSpecialVisual) {\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n    var piece = pieceList[pieceIndex];\n\n    if (piece && piece.visual) {\n      return piece.visual[this.type];\n    }\n  }\n}\n\nfunction setVisualToOption(thisOption, visualArr) {\n  thisOption.visual = visualArr;\n\n  if (thisOption.type === 'color') {\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\n      return zrColor.parse(item);\n    });\n  }\n\n  return visualArr;\n}\n/**\n * Normalizers by mapping methods.\n */\n\n\nvar normalizers = {\n  linear: function (value) {\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\n  },\n  piecewise: function (value) {\n    var pieceList = this.option.pieceList;\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n\n    if (pieceIndex != null) {\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n    }\n  },\n  category: function (value) {\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal\n\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n  },\n  fixed: zrUtil.noop\n};\n/**\n * List available visual types.\n *\n * @public\n * @return {Array.<string>}\n */\n\nVisualMapping.listVisualTypes = function () {\n  var visualTypes = [];\n  zrUtil.each(visualHandlers, function (handler, key) {\n    visualTypes.push(key);\n  });\n  return visualTypes;\n};\n/**\n * @public\n */\n\n\nVisualMapping.addVisualHandler = function (name, handler) {\n  visualHandlers[name] = handler;\n};\n/**\n * @public\n */\n\n\nVisualMapping.isValidType = function (visualType) {\n  return visualHandlers.hasOwnProperty(visualType);\n};\n/**\n * Convinent method.\n * Visual can be Object or Array or primary type.\n *\n * @public\n */\n\n\nVisualMapping.eachVisual = function (visual, callback, context) {\n  if (zrUtil.isObject(visual)) {\n    zrUtil.each(visual, callback, context);\n  } else {\n    callback.call(context, visual);\n  }\n};\n\nVisualMapping.mapVisual = function (visual, callback, context) {\n  var isPrimary;\n  var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\n  VisualMapping.eachVisual(visual, function (v, key) {\n    var newVal = callback.call(context, v, key);\n    isPrimary ? newVisual = newVal : newVisual[key] = newVal;\n  });\n  return newVisual;\n};\n/**\n * @public\n * @param {Object} obj\n * @return {Object} new object containers visual values.\n *                 If no visuals, return null.\n */\n\n\nVisualMapping.retrieveVisuals = function (obj) {\n  var ret = {};\n  var hasVisual;\n  obj && each(visualHandlers, function (h, visualType) {\n    if (obj.hasOwnProperty(visualType)) {\n      ret[visualType] = obj[visualType];\n      hasVisual = true;\n    }\n  });\n  return hasVisual ? ret : null;\n};\n/**\n * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n *\n * @public\n * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n * @return {Array.<string>} Sorted visual types.\n */\n\n\nVisualMapping.prepareVisualTypes = function (visualTypes) {\n  if (isObject(visualTypes)) {\n    var types = [];\n    each(visualTypes, function (item, type) {\n      types.push(type);\n    });\n    visualTypes = types;\n  } else if (zrUtil.isArray(visualTypes)) {\n    visualTypes = visualTypes.slice();\n  } else {\n    return [];\n  }\n\n  visualTypes.sort(function (type1, type2) {\n    // color should be front of colorSaturation, colorAlpha, ...\n    // symbol and symbolSize do not matter.\n    return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\n  });\n  return visualTypes;\n};\n/**\n * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n * Other visuals are only depends on themself.\n *\n * @public\n * @param {string} visualType1\n * @param {string} visualType2\n * @return {boolean}\n */\n\n\nVisualMapping.dependsOn = function (visualType1, visualType2) {\n  return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\n};\n/**\n * @param {number} value\n * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n *                         Always from small to big.\n * @param {boolean} [findClosestWhenOutside=false]\n * @return {number} index\n */\n\n\nVisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n  var possibleI;\n  var abs = Infinity; // value has the higher priority.\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var pieceValue = pieceList[i].value;\n\n    if (pieceValue != null) {\n      if (pieceValue === value // FIXME\n      // It is supposed to compare value according to value type of dimension,\n      // but currently value type can exactly be string or number.\n      // Compromise for numeric-like string (like '12'), especially\n      // in the case that visualMap.categories is ['22', '33'].\n      || typeof pieceValue === 'string' && pieceValue === value + '') {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(pieceValue, i);\n    }\n  }\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var piece = pieceList[i];\n    var interval = piece.interval;\n    var close = piece.close;\n\n    if (interval) {\n      if (interval[0] === -Infinity) {\n        if (littleThan(close[1], value, interval[1])) {\n          return i;\n        }\n      } else if (interval[1] === Infinity) {\n        if (littleThan(close[0], interval[0], value)) {\n          return i;\n        }\n      } else if (littleThan(close[0], interval[0], value) && littleThan(close[1], value, interval[1])) {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(interval[0], i);\n      findClosestWhenOutside && updatePossible(interval[1], i);\n    }\n  }\n\n  if (findClosestWhenOutside) {\n    return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\n  }\n\n  function updatePossible(val, index) {\n    var newAbs = Math.abs(val - value);\n\n    if (newAbs < abs) {\n      abs = newAbs;\n      possibleI = index;\n    }\n  }\n};\n\nfunction littleThan(close, a, b) {\n  return close ? a <= b : a < b;\n}\n\nvar _default = VisualMapping;\nmodule.exports = _default;","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function () {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    this._renderForNormal(seriesModel, payload); // this[\n    //     seriesModel.option.progressive\n    //         ? '_renderForProgressive'\n    //         : '_renderForNormal'\n    // ](seriesModel);\n\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _renderForNormal: function (seriesModel, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var option = seriesModel.option;\n    var smooth = option.smooth ? SMOOTH : null; // Consider switch between progressive and not.\n    // oldData && oldData.__plProgressive && dataGroup.removeAll();\n\n    data.diff(oldData).add(add).update(update).remove(remove).execute(); // Update style\n\n    updateElCommon(data, smooth); // First create\n\n    if (!this._data) {\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n\n    function add(newDataIndex) {\n      addEl(data, dataGroup, newDataIndex, dimensions, coordSys, null, smooth);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(dimName, dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n}\n\nfunction updateElCommon(data, smooth) {\n  var seriesStyleModel = data.hostModel.getModel('lineStyle.normal');\n  var lineStyle = seriesStyleModel.getLineStyle();\n  data.eachItemGraphicEl(function (line, dataIndex) {\n    if (data.hasItemOption) {\n      var itemModel = data.getItemModel(dataIndex);\n      var lineStyleModel = itemModel.getModel('lineStyle.normal', seriesStyleModel);\n      lineStyle = lineStyleModel.getLineStyle(['color', 'stroke']);\n    }\n\n    line.useStyle(zrUtil.extend(lineStyle, {\n      fill: null,\n      // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n      stroke: data.getItemVisual(dataIndex, 'color'),\n      // lineStyle.opacity have been set to itemVisual in parallelVisual.\n      opacity: data.getItemVisual(dataIndex, 'opacity')\n    }));\n    line.shape.smooth = smooth;\n  });\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file Visual mapping.\n */\nvar visualDefault = {\n  /**\n   * @public\n   */\n  get: function (visualType, key, isCategory) {\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\n  }\n};\nvar defaultOption = {\n  color: {\n    active: ['#006edd', '#e0ffff'],\n    inactive: ['rgba(0,0,0,0)']\n  },\n  colorHue: {\n    active: [0, 360],\n    inactive: [0, 0]\n  },\n  colorSaturation: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  colorLightness: {\n    active: [0.9, 0.5],\n    inactive: [0, 0]\n  },\n  colorAlpha: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  opacity: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  symbol: {\n    active: ['circle', 'roundRect', 'diamond'],\n    inactive: ['none']\n  },\n  symbolSize: {\n    active: [10, 50],\n    inactive: [0, 0]\n  }\n};\nvar _default = visualDefault;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar modelUtil = require(\"../util/model\");\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('lines', function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var lineData = seriesModel.getData(); // FIXME Use data dimensions ?\n\n    lineData.each(function (idx) {\n      var itemModel = lineData.getItemModel(idx);\n      var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.get('coords');\n      var pts = [];\n\n      if (seriesModel.get('polyline')) {\n        for (var i = 0; i < coords.length; i++) {\n          pts.push(coordSys.dataToPoint(coords[i]));\n        }\n      } else {\n        pts[0] = coordSys.dataToPoint(coords[0]);\n        pts[1] = coordSys.dataToPoint(coords[1]);\n        var curveness = itemModel.get('lineStyle.normal.curveness');\n\n        if (+curveness) {\n          pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n        }\n      }\n\n      lineData.setItemLayout(idx, pts);\n    });\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(option) {\n  var timelineOpt = option && option.timeline;\n\n  if (!zrUtil.isArray(timelineOpt)) {\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\n  }\n\n  zrUtil.each(timelineOpt, function (opt) {\n    if (!opt) {\n      return;\n    }\n\n    compatibleEC2(opt);\n  });\n}\n\nfunction compatibleEC2(opt) {\n  var type = opt.type;\n  var ec2Types = {\n    'number': 'value',\n    'time': 'time'\n  }; // Compatible with ec2\n\n  if (ec2Types[type]) {\n    opt.axisType = ec2Types[type];\n    delete opt.type;\n  }\n\n  transferItem(opt);\n\n  if (has(opt, 'controlPosition')) {\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\n\n    if (!has(controlStyle, 'position')) {\n      controlStyle.position = opt.controlPosition;\n    }\n\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\n      controlStyle.show = false;\n      delete controlStyle.position;\n    }\n\n    delete opt.controlPosition;\n  }\n\n  zrUtil.each(opt.data || [], function (dataItem) {\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\n        // In ec2, using name as value.\n        dataItem.value = dataItem.name;\n      }\n\n      transferItem(dataItem);\n    }\n  });\n}\n\nfunction transferItem(opt) {\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\n\n  var label = opt.label || opt.label || {};\n  var labelNormal = label.normal || (label.normal = {});\n  var excludeLabelAttr = {\n    normal: 1,\n    emphasis: 1\n  };\n  zrUtil.each(label, function (value, name) {\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\n      labelNormal[name] = value;\n    }\n  });\n\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\n    label.emphasis = itemStyleEmphasis.label;\n    delete itemStyleEmphasis.label;\n  }\n}\n\nfunction has(obj, attr) {\n  return obj.hasOwnProperty(attr);\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * @constructor  module:echarts/coord/single/SingleAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar SingleAxis = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   * - 'category'\n   * - 'value'\n   * - 'time'\n   * - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   *  @type {string}\n   */\n\n  this.position = position || 'bottom';\n  /**\n   * Axis orient\n   *  - 'horizontal'\n   *  - 'vertical'\n   * @type {[type]}\n   */\n\n  this.orient = null;\n  /**\n   * @type {number}\n   */\n\n  this._labelInterval = null;\n};\n\nSingleAxis.prototype = {\n  constructor: SingleAxis,\n\n  /**\n   * Axis model\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n  model: null,\n\n  /**\n   * Judge the orient of the axis.\n   * @return {boolean}\n   */\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordinateSystem.pointToData(point, clamp)[0];\n  },\n\n  /**\n   * Convert the local coord(processed by dataToCoord())\n   * to global coord(concrete pixel coord).\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toGlobalCoord: null,\n\n  /**\n   * Convert the global coord to local coord.\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toLocalCoord: null\n};\nzrUtil.inherits(SingleAxis, Axis);\nvar _default = SingleAxis;\nmodule.exports = _default;","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./map/MapSeries\");\n\nrequire(\"./map/MapView\");\n\nrequire(\"../action/geoRoam\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nvar mapSymbolLayout = require(\"./map/mapSymbolLayout\");\n\nvar mapVisual = require(\"./map/mapVisual\");\n\nvar mapDataStatistic = require(\"./map/mapDataStatistic\");\n\nvar backwardCompat = require(\"./map/backwardCompat\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\necharts.registerLayout(mapSymbolLayout);\necharts.registerVisual(mapVisual);\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\necharts.registerPreprocessor(backwardCompat);\ncreateDataSelectAction('map', [{\n  type: 'mapToggleSelect',\n  event: 'mapselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'mapSelect',\n  event: 'mapselected',\n  method: 'select'\n}, {\n  type: 'mapUnSelect',\n  event: 'mapunselected',\n  method: 'unSelect'\n}]);","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.effectScatter',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    var list = createListFromArray(option.data, this, ecModel);\n    return list;\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    effectType: 'ripple',\n    progressive: 0,\n    // When to show the effect, option: 'render'|'emphasis'\n    showEffectOn: 'render',\n    // Ripple effect config\n    rippleEffect: {\n      period: 4,\n      // Scale of ripple\n      scale: 2.5,\n      // Brush type can be fill or stroke\n      brushType: 'fill'\n    },\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10 // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    // large: false,\n    // Available when large is true\n    // largeThreshold: 2000,\n    // itemStyle: {\n    //     normal: {\n    //         opacity: 1\n    //     }\n    // }\n\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._render(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  _render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (el) {\n          if (el.type === 'sector') {\n            removeSector(el.dataIndex, ecModel, el);\n          } else {\n            removeRect(el.dataIndex, ecModel, el);\n          }\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    var sector = new graphic.Sector({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle.normal');\n  var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nmodule.exports = _default;","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;","var Polyline = require(\"./Polyline\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar EffectLine = require(\"./EffectLine\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:echarts/chart/helper/EffectLine}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction EffectPolyline(lineData, idx, seriesScope) {\n  EffectLine.call(this, lineData, idx, seriesScope);\n  this._lastFrame = 0;\n  this._lastFramePercent = 0;\n}\n\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\n\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Polyline(lineData, idx, seriesScope);\n}; // Overwrite\n\n\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\n  this._points = points;\n  var accLenArr = [0];\n  var len = 0;\n\n  for (var i = 1; i < points.length; i++) {\n    var p1 = points[i - 1];\n    var p2 = points[i];\n    len += vec2.dist(p1, p2);\n    accLenArr.push(len);\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  for (var i = 0; i < accLenArr.length; i++) {\n    accLenArr[i] /= len;\n  }\n\n  this._offsets = accLenArr;\n  this._length = len;\n}; // Overwrite\n\n\neffectPolylineProto.getLineLength = function (symbol) {\n  return this._length;\n}; // Overwrite\n\n\neffectPolylineProto.updateSymbolPosition = function (symbol) {\n  var t = symbol.__t;\n  var points = this._points;\n  var offsets = this._offsets;\n  var len = points.length;\n\n  if (!offsets) {\n    // Has length 0\n    return;\n  }\n\n  var lastFrame = this._lastFrame;\n  var frame;\n\n  if (t < this._lastFramePercent) {\n    // Start from the next frame\n    // PENDING start from lastFrame ?\n    var start = Math.min(lastFrame + 1, len - 1);\n\n    for (frame = start; frame >= 0; frame--) {\n      if (offsets[frame] <= t) {\n        break;\n      }\n    } // PENDING really need to do this ?\n\n\n    frame = Math.min(frame, len - 2);\n  } else {\n    for (var frame = lastFrame; frame < len; frame++) {\n      if (offsets[frame] > t) {\n        break;\n      }\n    }\n\n    frame = Math.min(frame - 1, len - 2);\n  }\n\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\n  var tx = points[frame + 1][0] - points[frame][0];\n  var ty = points[frame + 1][1] - points[frame][1];\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  this._lastFrame = frame;\n  this._lastFramePercent = t;\n  symbol.ignore = false;\n};\n\nzrUtil.inherits(EffectPolyline, EffectLine);\nvar _default = EffectPolyline;\nmodule.exports = _default;","var formatUtil = require(\"../../util/format\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar PolarAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue;\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get('label.margin');\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  } // Do not support handle, utill any user requires it.\n\n});\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, polar, coordValue, otherExtent, elStyle) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function (axis, polar, coordValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\nvar _default = PolarAxisPointer;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar geoCoordMap = {\n  'Russia': [100, 60],\n  'United States': [-99, 38],\n  'United States of America': [-99, 38]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var geoCoord = geoCoordMap[region.name];\n\n    if (geoCoord) {\n      var cp = region.center;\n      cp[0] = geoCoord[0];\n      cp[1] = geoCoord[1];\n    }\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar _default = echarts.extendComponentView({\n  type: 'radar',\n  render: function (radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    this._buildAxes(radarModel);\n\n    this._buildSplitLineAndArea(radarModel);\n  },\n  _buildAxes: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  },\n  _buildSplitLineAndArea: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n\n    if (!indicatorAxes.length) {\n      return;\n    }\n\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i]\n            }\n          }));\n        }\n\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i],\n              r: ticksRadius[i + 1]\n            }\n          }));\n        }\n      }\n    } // Polyyon\n    else {\n        var realSplitNumber;\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n          var ticksCoords = indicatorAxis.getTicksCoords();\n          realSplitNumber = realSplitNumber == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber);\n          return zrUtil.map(ticksCoords, function (tickCoord) {\n            return radar.coordToPoint(tickCoord, idx);\n          });\n        });\n        var prevPoints = [];\n\n        for (var i = 0; i <= realSplitNumber; i++) {\n          var points = [];\n\n          for (var j = 0; j < indicatorAxes.length; j++) {\n            points.push(axesTicksPoints[j][i]);\n          } // Close\n\n\n          if (points[0]) {\n            points.push(points[0].slice());\n          } else {}\n\n          if (showSplitLine) {\n            var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n            splitLines[colorIndex].push(new graphic.Polyline({\n              shape: {\n                points: points\n              }\n            }));\n          }\n\n          if (showSplitArea && prevPoints) {\n            var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n            splitAreas[colorIndex].push(new graphic.Polygon({\n              shape: {\n                points: points.concat(prevPoints)\n              }\n            }));\n          }\n\n          prevPoints = points.slice().reverse();\n        }\n      }\n\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\n\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColors[idx % splitAreaColors.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColors[idx % splitLineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../component/singleAxis\");\n\nrequire(\"./themeRiver/ThemeRiverSeries\");\n\nrequire(\"./themeRiver/ThemeRiverView\");\n\nvar themeRiverLayout = require(\"./themeRiver/themeRiverLayout\");\n\nvar themeRiverVisual = require(\"./themeRiver/themeRiverVisual\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\necharts.registerLayout(themeRiverLayout);\necharts.registerVisual(themeRiverVisual);\necharts.registerProcessor(zrUtil.curry(dataFilter, 'themeRiver'));","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransform = new TransformDummy();\n  this._viewTransform = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function (x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var viewTransform = this._viewTransform;\n    viewTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    viewTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function (centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function () {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function () {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function () {\n    return this._roamTransform;\n  },\n  _updateCenterAndZoom: function () {\n    // Must update after view transform updated\n    var viewTransformMatrix = this._viewTransform.getLocalTransform();\n\n    var roamTransform = this._roamTransform;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, viewTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, viewTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function () {\n    var roamTransform = this._roamTransform;\n    var viewTransform = this._viewTransform;\n    viewTransform.parent = roamTransform;\n    roamTransform.updateTransform();\n    viewTransform.updateTransform();\n    viewTransform.transform && matrix.copy(this.transform || (this.transform = []), viewTransform.transform);\n\n    if (this.transform) {\n      this.invTransform = this.invTransform || [];\n      matrix.invert(this.invTransform, this.transform);\n    } else {\n      this.invTransform = null;\n    }\n\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function () {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data) {\n    var transform = this.transform;\n    return transform ? v2ApplyTransform([], data, transform) : [data[0], data[1]];\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n\n/**\n * @file  This file used to draw tree view\n */\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.get('orient'),\n      curvature: seriesModel.get('lineStyle.normal.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // update  node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n      removeNode(data, oldIdx, symbolEl, group, seriesModel, seriesScope);\n    }).execute();\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle.normal').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label.normal');\n  seriesScope.hoverLabelModel = itemModel.getModel('label.emphasis');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n\n  if (seriesScope.layout === 'radial') {\n    var x1 = sourceLayout.rawX;\n    var y1 = sourceLayout.rawY;\n    var x2 = targetLayout.rawX;\n    var y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    var x1 = sourceLayout.x;\n    var y1 = sourceLayout.y;\n    var x2 = targetLayout.x;\n    var y2 = targetLayout.y;\n\n    if (orient === 'horizontal') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'vertical') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n\n    return {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      cpx1: cpx1,\n      cpy1: cpy1,\n      cpx2: cpx2,\n      cpy2: cpy2\n    };\n  }\n}\n\nmodule.exports = _default;","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;","/**\n * Traverse the tree from bottom to top and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexports.eachAfter = eachAfter;\nexports.eachBefore = eachBefore;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  updateSelectedMap: function (targetList) {\n    this._targetList = targetList.slice();\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/**\n * @file Visual encoding for themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var rawData = seriesModel.getRawData();\n    var colorList = seriesModel.get('color');\n    var idxMap = createHashMap();\n    data.each(function (idx) {\n      idxMap.set(data.getRawIndex(idx), idx);\n    });\n    rawData.each(function (rawIndex) {\n      var name = rawData.getName(rawIndex);\n      var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\n      rawData.setItemVisual(rawIndex, 'color', color);\n      var idx = idxMap.get(rawIndex);\n\n      if (idx != null) {\n        data.setItemVisual(idx, 'color', color);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n// Convert [ [{coord: []}, {coord: []}] ]\n// to [ { coords: [[]] } ]\nfunction preprocessOption(seriesOpt) {\n  var data = seriesOpt.data;\n\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\n    seriesOpt.data = zrUtil.map(data, function (itemOpt) {\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\n      var target = {\n        coords: coords\n      };\n\n      if (itemOpt[0].name) {\n        target.fromName = itemOpt[0].name;\n      }\n\n      if (itemOpt[1].name) {\n        target.toName = itemOpt[1].name;\n      }\n\n      return zrUtil.mergeAll([target, itemOpt[0], itemOpt[1]]);\n    });\n  }\n}\n\nvar LinesSeries = SeriesModel.extend({\n  type: 'series.lines',\n  dependencies: ['grid', 'polar'],\n  visualColorAccessPath: 'lineStyle.normal.color',\n  init: function (option) {\n    // Not using preprocessor because mergeOption may not have series.type\n    preprocessOption(option);\n    LinesSeries.superApply(this, 'init', arguments);\n  },\n  mergeOption: function (option) {\n    preprocessOption(option);\n    LinesSeries.superApply(this, 'mergeOption', arguments);\n  },\n  getInitialData: function (option, ecModel) {\n    var lineData = new List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var itemModel = data.getItemModel(dataIndex);\n    var name = itemModel.get('name');\n\n    if (name) {\n      return name;\n    }\n\n    var fromName = itemModel.get('fromName');\n    var toName = itemModel.get('toName');\n    var html = [];\n    fromName != null && html.push(fromName);\n    toName != null && html.push(toName);\n    return encodeHTML(html.join(' > '));\n  },\n  defaultOption: {\n    coordinateSystem: 'geo',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    symbol: ['none', 'none'],\n    symbolSize: [10, 10],\n    // Geo coordinate system\n    geoIndex: 0,\n    effect: {\n      show: false,\n      period: 4,\n      // Animation delay. support callback\n      // delay: 0,\n      // If move with constant speed px/sec\n      // period will be ignored if this property is > 0,\n      constantSpeed: 0,\n      symbol: 'circle',\n      symbolSize: 3,\n      loop: true,\n      // Length of trail, 0 - 1\n      trailLength: 0.2 // Same with lineStyle.normal.color\n      // color\n\n    },\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // If lines are polyline\n    // polyline not support curveness, label, animation\n    polyline: false,\n    label: {\n      normal: {\n        show: false,\n        position: 'end' // distance: 5,\n        // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n      }\n    },\n    lineStyle: {\n      normal: {\n        opacity: 0.5\n      }\n    }\n  }\n});\nvar _default = LinesSeries;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar layout = require(\"../../util/layout\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar _default = echarts.extendComponentView({\n  type: 'visualMap',\n\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n  autoPositionValues: {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1\n  },\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/visualMap/visualMapModel}\n     */\n\n    this.visualMapModel;\n  },\n\n  /**\n   * @protected\n   */\n  render: function (visualMapModel, ecModel, api, payload) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender.apply(this, arguments);\n  },\n\n  /**\n   * @protected\n   */\n  renderBackground: function (group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new graphic.Rect({\n      z2: -1,\n      // Lay background rect on the lowest layer.\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  },\n\n  /**\n   * @protected\n   * @param {number} targetValue can be Infinity or -Infinity\n   * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param {Object} [opts]\n   * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n   * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n  getControllerVisual: function (targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  },\n\n  /**\n   * @protected\n   */\n  positionGroup: function (group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  },\n\n  /**\n   * @protected\n   * @abstract\n   */\n  doRender: zrUtil.noop\n});\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!(n1 instanceof Node)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!(n2 instanceof Node)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (n1 instanceof Node) {\n    n1 = n1.id;\n  }\n\n  if (n2 instanceof Node) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!(startNode instanceof Node)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nvar _default = Graph;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\n\n\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n/**\n * @param {module:echarts/data/List} lineData\n */\n\nlineDrawProto.updateData = function (lineData) {\n  var oldLineData = this._lineData;\n  var group = this.group;\n  var LineCtor = this._ctor;\n  var hostModel = lineData.hostModel;\n  var seriesScope = {\n    lineStyle: hostModel.getModel('lineStyle.normal').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('lineStyle.emphasis').getLineStyle(),\n    labelModel: hostModel.getModel('label.normal'),\n    hoverLabelModel: hostModel.getModel('label.emphasis')\n  };\n  lineData.diff(oldLineData).add(function (idx) {\n    if (!lineNeedsDraw(lineData.getItemLayout(idx))) {\n      return;\n    }\n\n    var lineGroup = new LineCtor(lineData, idx, seriesScope);\n    lineData.setItemGraphicEl(idx, lineGroup);\n    group.add(lineGroup);\n  }).update(function (newIdx, oldIdx) {\n    var lineGroup = oldLineData.getItemGraphicEl(oldIdx);\n\n    if (!lineNeedsDraw(lineData.getItemLayout(newIdx))) {\n      group.remove(lineGroup);\n      return;\n    }\n\n    if (!lineGroup) {\n      lineGroup = new LineCtor(lineData, newIdx, seriesScope);\n    } else {\n      lineGroup.updateData(lineData, newIdx, seriesScope);\n    }\n\n    lineData.setItemGraphicEl(newIdx, lineGroup);\n    group.add(lineGroup);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n  this._lineData = lineData;\n};\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData;\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.remove = function () {\n  this.group.removeAll();\n};\n\nvar _default = LineDraw;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/ContinuousModel\");\n\nrequire(\"./visualMap/ContinuousView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;","var MapDraw = require(\"../helper/MapDraw\");\n\nvar echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentView({\n  type: 'geo',\n  init: function (ecModel, api) {\n    var mapDraw = new MapDraw(api, true);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n  },\n  render: function (geoModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'geoToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    this.group.silent = geoModel.get('silent');\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\nfunction IndicatorAxis(dim, scale, radiusExtent) {\n  Axis.call(this, dim, scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'value';\n  this.angle = 0;\n  /**\n   * Indicator name\n   * @type {string}\n   */\n\n  this.name = '';\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.model;\n}\n\nzrUtil.inherits(IndicatorAxis, Axis);\nvar _default = IndicatorAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n// Backward compat for radar chart in 2\nfunction _default(option) {\n  var polarOptArr = option.polar;\n\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n\n    var polarNotRadar = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n\n        option.radar = option.radar || [];\n\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar;\n  }\n\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nrequire(\"./AxisModel\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\n   * @type {module:echarts/coord/polar/Polar}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @param {string} axisType\n   * @return {module:echarts/coord/polar/AxisModel}\n   */\n  findAxisModel: function (axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/RadiusAxisView\");","/*!\n * wordcloud2.js\n * http://timdream.org/wordcloud2.js/\n *\n * Copyright 2011 - 2013 Tim Chien\n * Released under the MIT license\n */\n\n'use strict';\n\n// setImmediate\nif (!window.setImmediate) {\n  window.setImmediate = (function setupSetImmediate() {\n    return window.msSetImmediate ||\n    window.webkitSetImmediate ||\n    window.mozSetImmediate ||\n    window.oSetImmediate ||\n    (function setupSetZeroTimeout() {\n      if (!window.postMessage || !window.addEventListener) {\n        return null;\n      }\n\n      var callbacks = [undefined];\n      var message = 'zero-timeout-message';\n\n      // Like setTimeout, but only takes a function argument.  There's\n      // no time argument (always zero) and no arguments (you have to\n      // use a closure).\n      var setZeroTimeout = function setZeroTimeout(callback) {\n        var id = callbacks.length;\n        callbacks.push(callback);\n        window.postMessage(message + id.toString(36), '*');\n\n        return id;\n      };\n\n      window.addEventListener('message', function setZeroTimeoutMessage(evt) {\n        // Skipping checking event source, retarded IE confused this window\n        // object with another in the presence of iframe\n        if (typeof evt.data !== 'string' ||\n            evt.data.substr(0, message.length) !== message/* ||\n            evt.source !== window */) {\n          return;\n        }\n\n        evt.stopImmediatePropagation();\n\n        var id = parseInt(evt.data.substr(message.length), 36);\n        if (!callbacks[id]) {\n          return;\n        }\n\n        callbacks[id]();\n        callbacks[id] = undefined;\n      }, true);\n\n      /* specify clearImmediate() here since we need the scope */\n      window.clearImmediate = function clearZeroTimeout(id) {\n        if (!callbacks[id]) {\n          return;\n        }\n\n        callbacks[id] = undefined;\n      };\n\n      return setZeroTimeout;\n    })() ||\n    // fallback\n    function setImmediateFallback(fn) {\n      window.setTimeout(fn, 0);\n    };\n  })();\n}\n\nif (!window.clearImmediate) {\n  window.clearImmediate = (function setupClearImmediate() {\n    return window.msClearImmediate ||\n    window.webkitClearImmediate ||\n    window.mozClearImmediate ||\n    window.oClearImmediate ||\n    // \"clearZeroTimeout\" is implement on the previous block ||\n    // fallback\n    function clearImmediateFallback(timer) {\n      window.clearTimeout(timer);\n    };\n  })();\n}\n\n(function(global) {\n\n  // Check if WordCloud can run on this browser\n  var isSupported = (function isSupported() {\n    var canvas = document.createElement('canvas');\n    if (!canvas || !canvas.getContext) {\n      return false;\n    }\n\n    var ctx = canvas.getContext('2d');\n    if (!ctx.getImageData) {\n      return false;\n    }\n    if (!ctx.fillText) {\n      return false;\n    }\n\n    if (!Array.prototype.some) {\n      return false;\n    }\n    if (!Array.prototype.push) {\n      return false;\n    }\n\n    return true;\n  }());\n\n  // Find out if the browser impose minium font size by\n  // drawing small texts on a canvas and measure it's width.\n  var minFontSize = (function getMinFontSize() {\n    if (!isSupported) {\n      return;\n    }\n\n    var ctx = document.createElement('canvas').getContext('2d');\n\n    // start from 20\n    var size = 20;\n\n    // two sizes to measure\n    var hanWidth, mWidth;\n\n    while (size) {\n      ctx.font = size.toString(10) + 'px sans-serif';\n      if ((ctx.measureText('\\uFF37').width === hanWidth) &&\n          (ctx.measureText('m').width) === mWidth) {\n        return (size + 1);\n      }\n\n      hanWidth = ctx.measureText('\\uFF37').width;\n      mWidth = ctx.measureText('m').width;\n\n      size--;\n    }\n\n    return 0;\n  })();\n\n  // Based on http://jsfromhell.com/array/shuffle\n  var shuffleArray = function shuffleArray(arr) {\n    for (var j, x, i = arr.length; i;\n      j = Math.floor(Math.random() * i),\n      x = arr[--i], arr[i] = arr[j],\n      arr[j] = x) {}\n    return arr;\n  };\n\n  var WordCloud = function WordCloud(elements, options) {\n    if (!isSupported) {\n      return;\n    }\n\n    if (!Array.isArray(elements)) {\n      elements = [elements];\n    }\n\n    elements.forEach(function(el, i) {\n      if (typeof el === 'string') {\n        elements[i] = document.getElementById(el);\n        if (!elements[i]) {\n          throw 'The element id specified is not found.';\n        }\n      } else if (!el.tagName && !el.appendChild) {\n        throw 'You must pass valid HTML elements, or ID of the element.';\n      }\n    });\n\n    /* Default values to be overwritten by options object */\n    var settings = {\n      list: [],\n      fontFamily: '\"Trebuchet MS\", \"Heiti TC\", \"微軟正黑體\", ' +\n                  '\"Arial Unicode MS\", \"Droid Fallback Sans\", sans-serif',\n      fontWeight: 'normal',\n      color: 'random-dark',\n      minSize: 0, // 0 to disable\n      weightFactor: 1,\n      clearCanvas: true,\n      backgroundColor: '#fff',  // opaque white = rgba(255, 255, 255, 1)\n\n      gridSize: 8,\n      drawOutOfBound: false,\n      origin: null,\n\n      drawMask: false,\n      maskColor: 'rgba(255,0,0,0.3)',\n      maskGapWidth: 0.3,\n\n      wait: 0,\n      abortThreshold: 0, // disabled\n      abort: function noop() {},\n\n      minRotation: - Math.PI / 2,\n      maxRotation: Math.PI / 2,\n      rotationStep: 0.1,\n\n      shuffle: true,\n      rotateRatio: 0.1,\n\n      shape: 'circle',\n      ellipticity: 0.65,\n\n      classes: null,\n\n      hover: null,\n      click: null\n    };\n\n    if (options) {\n      for (var key in options) {\n        if (key in settings) {\n          settings[key] = options[key];\n        }\n      }\n    }\n\n    /* Convert weightFactor into a function */\n    if (typeof settings.weightFactor !== 'function') {\n      var factor = settings.weightFactor;\n      settings.weightFactor = function weightFactor(pt) {\n        return pt * factor; //in px\n      };\n    }\n\n    /* Convert shape into a function */\n    if (typeof settings.shape !== 'function') {\n      switch (settings.shape) {\n        case 'circle':\n        /* falls through */\n        default:\n          // 'circle' is the default and a shortcut in the code loop.\n          settings.shape = 'circle';\n          break;\n\n        case 'cardioid':\n          settings.shape = function shapeCardioid(theta) {\n            return 1 - Math.sin(theta);\n          };\n          break;\n\n        /*\n        To work out an X-gon, one has to calculate \"m\",\n        where 1/(cos(2*PI/X)+m*sin(2*PI/X)) = 1/(cos(0)+m*sin(0))\n        http://www.wolframalpha.com/input/?i=1%2F%28cos%282*PI%2FX%29%2Bm*sin%28\n        2*PI%2FX%29%29+%3D+1%2F%28cos%280%29%2Bm*sin%280%29%29\n        Copy the solution into polar equation r = 1/(cos(t') + m*sin(t'))\n        where t' equals to mod(t, 2PI/X);\n        */\n\n        case 'diamond':\n        case 'square':\n          // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+\n          // %28t%2C+PI%2F2%29%29%2Bsin%28mod+%28t%2C+PI%2F2%29%29%29%2C+t+%3D\n          // +0+..+2*PI\n          settings.shape = function shapeSquare(theta) {\n            var thetaPrime = theta % (2 * Math.PI / 4);\n            return 1 / (Math.cos(thetaPrime) + Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'triangle-forward':\n          // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+\n          // %28t%2C+2*PI%2F3%29%29%2Bsqrt%283%29sin%28mod+%28t%2C+2*PI%2F3%29\n          // %29%29%2C+t+%3D+0+..+2*PI\n          settings.shape = function shapeTriangle(theta) {\n            var thetaPrime = theta % (2 * Math.PI / 3);\n            return 1 / (Math.cos(thetaPrime) +\n                        Math.sqrt(3) * Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'triangle':\n        case 'triangle-upright':\n          settings.shape = function shapeTriangle(theta) {\n            var thetaPrime = (theta + Math.PI * 3 / 2) % (2 * Math.PI / 3);\n            return 1 / (Math.cos(thetaPrime) +\n                        Math.sqrt(3) * Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'pentagon':\n          settings.shape = function shapePentagon(theta) {\n            var thetaPrime = (theta + 0.955) % (2 * Math.PI / 5);\n            return 1 / (Math.cos(thetaPrime) +\n                        0.726543 * Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'star':\n          settings.shape = function shapeStar(theta) {\n            var thetaPrime = (theta + 0.955) % (2 * Math.PI / 10);\n            if ((theta + 0.955) % (2 * Math.PI / 5) - (2 * Math.PI / 10) >= 0) {\n              return 1 / (Math.cos((2 * Math.PI / 10) - thetaPrime) +\n                          3.07768 * Math.sin((2 * Math.PI / 10) - thetaPrime));\n            } else {\n              return 1 / (Math.cos(thetaPrime) +\n                          3.07768 * Math.sin(thetaPrime));\n            }\n          };\n          break;\n      }\n    }\n\n    /* Make sure gridSize is a whole number and is not smaller than 4px */\n    settings.gridSize = Math.max(Math.floor(settings.gridSize), 4);\n\n    /* shorthand */\n    var g = settings.gridSize;\n    var maskRectWidth = g - settings.maskGapWidth;\n\n    /* normalize rotation settings */\n    var rotationRange = Math.abs(settings.maxRotation - settings.minRotation);\n    var minRotation = Math.min(settings.maxRotation, settings.minRotation);\n    var rotationStep = settings.rotationStep;\n\n    /* information/object available to all functions, set when start() */\n    var grid, // 2d array containing filling information\n      ngx, ngy, // width and height of the grid\n      center, // position of the center of the cloud\n      maxRadius;\n\n    /* timestamp for measuring each putWord() action */\n    var escapeTime;\n\n    /* function for getting the color of the text */\n    var getTextColor;\n    function random_hsl_color(min, max) {\n      return 'hsl(' +\n        (Math.random() * 360).toFixed() + ',' +\n        (Math.random() * 30 + 70).toFixed() + '%,' +\n        (Math.random() * (max - min) + min).toFixed() + '%)';\n    }\n    switch (settings.color) {\n      case 'random-dark':\n        getTextColor = function getRandomDarkColor() {\n          return random_hsl_color(10, 50);\n        };\n        break;\n\n      case 'random-light':\n        getTextColor = function getRandomLightColor() {\n          return random_hsl_color(50, 90);\n        };\n        break;\n\n      default:\n        if (typeof settings.color === 'function') {\n          getTextColor = settings.color;\n        }\n        break;\n    }\n\n    /* function for getting the classes of the text */\n    var getTextClasses = null;\n    if (typeof settings.classes === 'function') {\n      getTextClasses = settings.classes;\n    }\n\n    /* Interactive */\n    var interactive = false;\n    var infoGrid = [];\n    var hovered;\n\n    var getInfoGridFromMouseTouchEvent =\n    function getInfoGridFromMouseTouchEvent(evt) {\n      var canvas = evt.currentTarget;\n      var rect = canvas.getBoundingClientRect();\n      var clientX;\n      var clientY;\n      /** Detect if touches are available */\n      if (evt.touches) {\n        clientX = evt.touches[0].clientX;\n        clientY = evt.touches[0].clientY;\n      } else {\n        clientX = evt.clientX;\n        clientY = evt.clientY;\n      }\n      var eventX = clientX - rect.left;\n      var eventY = clientY - rect.top;\n\n      var x = Math.floor(eventX * ((canvas.width / rect.width) || 1) / g);\n      var y = Math.floor(eventY * ((canvas.height / rect.height) || 1) / g);\n\n      return infoGrid[x][y];\n    };\n\n    var wordcloudhover = function wordcloudhover(evt) {\n      var info = getInfoGridFromMouseTouchEvent(evt);\n\n      if (hovered === info) {\n        return;\n      }\n\n      hovered = info;\n      if (!info) {\n        settings.hover(undefined, undefined, evt);\n\n        return;\n      }\n\n      settings.hover(info.item, info.dimension, evt);\n\n    };\n\n    var wordcloudclick = function wordcloudclick(evt) {\n      var info = getInfoGridFromMouseTouchEvent(evt);\n      if (!info) {\n        return;\n      }\n\n      settings.click(info.item, info.dimension, evt);\n      evt.preventDefault();\n    };\n\n    /* Get points on the grid for a given radius away from the center */\n    var pointsAtRadius = [];\n    var getPointsAtRadius = function getPointsAtRadius(radius) {\n      if (pointsAtRadius[radius]) {\n        return pointsAtRadius[radius];\n      }\n\n      // Look for these number of points on each radius\n      var T = radius * 8;\n\n      // Getting all the points at this radius\n      var t = T;\n      var points = [];\n\n      if (radius === 0) {\n        points.push([center[0], center[1], 0]);\n      }\n\n      while (t--) {\n        // distort the radius to put the cloud in shape\n        var rx = 1;\n        if (settings.shape !== 'circle') {\n          rx = settings.shape(t / T * 2 * Math.PI); // 0 to 1\n        }\n\n        // Push [x, y, t]; t is used solely for getTextColor()\n        points.push([\n          center[0] + radius * rx * Math.cos(-t / T * 2 * Math.PI),\n          center[1] + radius * rx * Math.sin(-t / T * 2 * Math.PI) *\n            settings.ellipticity,\n          t / T * 2 * Math.PI]);\n      }\n\n      pointsAtRadius[radius] = points;\n      return points;\n    };\n\n    /* Return true if we had spent too much time */\n    var exceedTime = function exceedTime() {\n      return ((settings.abortThreshold > 0) &&\n        ((new Date()).getTime() - escapeTime > settings.abortThreshold));\n    };\n\n    /* Get the deg of rotation according to settings, and luck. */\n    var getRotateDeg = function getRotateDeg() {\n      if (settings.rotateRatio === 0) {\n        return 0;\n      }\n\n      if (Math.random() > settings.rotateRatio) {\n        return 0;\n      }\n\n      if (rotationRange === 0) {\n        return minRotation;\n      }\n\n      return minRotation + Math.round(Math.random() * rotationRange / rotationStep) * rotationStep;\n    };\n\n    var getTextInfo = function getTextInfo(word, weight, rotateDeg) {\n      // calculate the acutal font size\n      // fontSize === 0 means weightFactor function wants the text skipped,\n      // and size < minSize means we cannot draw the text.\n      var debug = false;\n      var fontSize = settings.weightFactor(weight);\n      if (fontSize <= settings.minSize) {\n        return false;\n      }\n\n      // Scale factor here is to make sure fillText is not limited by\n      // the minium font size set by browser.\n      // It will always be 1 or 2n.\n      var mu = 1;\n      if (fontSize < minFontSize) {\n        mu = (function calculateScaleFactor() {\n          var mu = 2;\n          while (mu * fontSize < minFontSize) {\n            mu += 2;\n          }\n          return mu;\n        })();\n      }\n\n      var fcanvas = document.createElement('canvas');\n      var fctx = fcanvas.getContext('2d', { willReadFrequently: true });\n\n      fctx.font = settings.fontWeight + ' ' +\n        (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;\n\n      // Estimate the dimension of the text with measureText().\n      var fw = fctx.measureText(word).width / mu;\n      var fh = Math.max(fontSize * mu,\n                        fctx.measureText('m').width,\n                        fctx.measureText('\\uFF37').width) / mu;\n\n      // Create a boundary box that is larger than our estimates,\n      // so text don't get cut of (it sill might)\n      var boxWidth = fw + fh * 2;\n      var boxHeight = fh * 3;\n      var fgw = Math.ceil(boxWidth / g);\n      var fgh = Math.ceil(boxHeight / g);\n      boxWidth = fgw * g;\n      boxHeight = fgh * g;\n\n      // Calculate the proper offsets to make the text centered at\n      // the preferred position.\n\n      // This is simply half of the width.\n      var fillTextOffsetX = - fw / 2;\n      // Instead of moving the box to the exact middle of the preferred\n      // position, for Y-offset we move 0.4 instead, so Latin alphabets look\n      // vertical centered.\n      var fillTextOffsetY = - fh * 0.4;\n\n      // Calculate the actual dimension of the canvas, considering the rotation.\n      var cgh = Math.ceil((boxWidth * Math.abs(Math.sin(rotateDeg)) +\n                           boxHeight * Math.abs(Math.cos(rotateDeg))) / g);\n      var cgw = Math.ceil((boxWidth * Math.abs(Math.cos(rotateDeg)) +\n                           boxHeight * Math.abs(Math.sin(rotateDeg))) / g);\n      var width = cgw * g;\n      var height = cgh * g;\n\n      fcanvas.setAttribute('width', width);\n      fcanvas.setAttribute('height', height);\n\n      if (debug) {\n        // Attach fcanvas to the DOM\n        document.body.appendChild(fcanvas);\n        // Save it's state so that we could restore and draw the grid correctly.\n        fctx.save();\n      }\n\n      // Scale the canvas with |mu|.\n      fctx.scale(1 / mu, 1 / mu);\n      fctx.translate(width * mu / 2, height * mu / 2);\n      fctx.rotate(- rotateDeg);\n\n      // Once the width/height is set, ctx info will be reset.\n      // Set it again here.\n      fctx.font = settings.fontWeight + ' ' +\n        (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;\n\n      // Fill the text into the fcanvas.\n      // XXX: We cannot because textBaseline = 'top' here because\n      // Firefox and Chrome uses different default line-height for canvas.\n      // Please read https://bugzil.la/737852#c6.\n      // Here, we use textBaseline = 'middle' and draw the text at exactly\n      // 0.5 * fontSize lower.\n      fctx.fillStyle = '#000';\n      fctx.textBaseline = 'middle';\n      fctx.fillText(word, fillTextOffsetX * mu,\n                    (fillTextOffsetY + fontSize * 0.5) * mu);\n\n      // Get the pixels of the text\n      var imageData = fctx.getImageData(0, 0, width, height).data;\n\n      if (exceedTime()) {\n        return false;\n      }\n\n      if (debug) {\n        // Draw the box of the original estimation\n        fctx.strokeRect(fillTextOffsetX * mu,\n                        fillTextOffsetY, fw * mu, fh * mu);\n        fctx.restore();\n      }\n\n      // Read the pixels and save the information to the occupied array\n      var occupied = [];\n      var gx = cgw, gy, x, y;\n      var bounds = [cgh / 2, cgw / 2, cgh / 2, cgw / 2];\n      while (gx--) {\n        gy = cgh;\n        while (gy--) {\n          y = g;\n          singleGridLoop: {\n            while (y--) {\n              x = g;\n              while (x--) {\n                if (imageData[((gy * g + y) * width +\n                               (gx * g + x)) * 4 + 3]) {\n                  occupied.push([gx, gy]);\n\n                  if (gx < bounds[3]) {\n                    bounds[3] = gx;\n                  }\n                  if (gx > bounds[1]) {\n                    bounds[1] = gx;\n                  }\n                  if (gy < bounds[0]) {\n                    bounds[0] = gy;\n                  }\n                  if (gy > bounds[2]) {\n                    bounds[2] = gy;\n                  }\n\n                  if (debug) {\n                    fctx.fillStyle = 'rgba(255, 0, 0, 0.5)';\n                    fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);\n                  }\n                  break singleGridLoop;\n                }\n              }\n            }\n            if (debug) {\n              fctx.fillStyle = 'rgba(0, 0, 255, 0.5)';\n              fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);\n            }\n          }\n        }\n      }\n\n      if (debug) {\n        fctx.fillStyle = 'rgba(0, 255, 0, 0.5)';\n        fctx.fillRect(bounds[3] * g,\n                      bounds[0] * g,\n                      (bounds[1] - bounds[3] + 1) * g,\n                      (bounds[2] - bounds[0] + 1) * g);\n      }\n\n      // Return information needed to create the text on the real canvas\n      return {\n        mu: mu,\n        occupied: occupied,\n        bounds: bounds,\n        gw: cgw,\n        gh: cgh,\n        fillTextOffsetX: fillTextOffsetX,\n        fillTextOffsetY: fillTextOffsetY,\n        fillTextWidth: fw,\n        fillTextHeight: fh,\n        fontSize: fontSize\n      };\n    };\n\n    /* Determine if there is room available in the given dimension */\n    var canFitText = function canFitText(gx, gy, gw, gh, occupied) {\n      // Go through the occupied points,\n      // return false if the space is not available.\n      var i = occupied.length;\n      while (i--) {\n        var px = gx + occupied[i][0];\n        var py = gy + occupied[i][1];\n\n        if (px >= ngx || py >= ngy || px < 0 || py < 0) {\n          if (!settings.drawOutOfBound) {\n            return false;\n          }\n          continue;\n        }\n\n        if (!grid[px][py]) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    /* Actually draw the text on the grid */\n    var drawText = function drawText(gx, gy, info, word, weight,\n                                     distance, theta, rotateDeg, attributes) {\n\n      var fontSize = info.fontSize;\n      var color;\n      if (getTextColor) {\n        color = getTextColor(word, weight, fontSize, distance, theta);\n      } else {\n        color = settings.color;\n      }\n\n      var classes;\n      if (getTextClasses) {\n        classes = getTextClasses(word, weight, fontSize, distance, theta);\n      } else {\n        classes = settings.classes;\n      }\n\n      var dimension;\n      var bounds = info.bounds;\n      dimension = {\n        x: (gx + bounds[3]) * g,\n        y: (gy + bounds[0]) * g,\n        w: (bounds[1] - bounds[3] + 1) * g,\n        h: (bounds[2] - bounds[0] + 1) * g\n      };\n\n      elements.forEach(function(el) {\n        if (el.getContext) {\n          var ctx = el.getContext('2d');\n          var mu = info.mu;\n\n          // Save the current state before messing it\n          ctx.save();\n          ctx.scale(1 / mu, 1 / mu);\n\n          ctx.font = settings.fontWeight + ' ' +\n                     (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;\n          ctx.fillStyle = color;\n\n          // Translate the canvas position to the origin coordinate of where\n          // the text should be put.\n          ctx.translate((gx + info.gw / 2) * g * mu,\n                        (gy + info.gh / 2) * g * mu);\n\n          if (rotateDeg !== 0) {\n            ctx.rotate(- rotateDeg);\n          }\n\n          // Finally, fill the text.\n\n          // XXX: We cannot because textBaseline = 'top' here because\n          // Firefox and Chrome uses different default line-height for canvas.\n          // Please read https://bugzil.la/737852#c6.\n          // Here, we use textBaseline = 'middle' and draw the text at exactly\n          // 0.5 * fontSize lower.\n          ctx.textBaseline = 'middle';\n          ctx.fillText(word, info.fillTextOffsetX * mu,\n                             (info.fillTextOffsetY + fontSize * 0.5) * mu);\n\n          // The below box is always matches how <span>s are positioned\n          /* ctx.strokeRect(info.fillTextOffsetX, info.fillTextOffsetY,\n            info.fillTextWidth, info.fillTextHeight); */\n\n          // Restore the state.\n          ctx.restore();\n        } else {\n          // drawText on DIV element\n          var span = document.createElement('span');\n          var transformRule = '';\n          transformRule = 'rotate(' + (- rotateDeg / Math.PI * 180) + 'deg) ';\n          if (info.mu !== 1) {\n            transformRule +=\n              'translateX(-' + (info.fillTextWidth / 4) + 'px) ' +\n              'scale(' + (1 / info.mu) + ')';\n          }\n          var styleRules = {\n            'position': 'absolute',\n            'display': 'block',\n            'font': settings.fontWeight + ' ' +\n                    (fontSize * info.mu) + 'px ' + settings.fontFamily,\n            'left': ((gx + info.gw / 2) * g + info.fillTextOffsetX) + 'px',\n            'top': ((gy + info.gh / 2) * g + info.fillTextOffsetY) + 'px',\n            'width': info.fillTextWidth + 'px',\n            'height': info.fillTextHeight + 'px',\n            'lineHeight': fontSize + 'px',\n            'whiteSpace': 'nowrap',\n            'transform': transformRule,\n            'webkitTransform': transformRule,\n            'msTransform': transformRule,\n            'transformOrigin': '50% 40%',\n            'webkitTransformOrigin': '50% 40%',\n            'msTransformOrigin': '50% 40%'\n          };\n          if (color) {\n            styleRules.color = color;\n          }\n          span.textContent = word;\n          for (var cssProp in styleRules) {\n            span.style[cssProp] = styleRules[cssProp];\n          }\n          if (attributes) {\n            for (var attribute in attributes) {\n              span.setAttribute(attribute, attributes[attribute]);\n            }\n          }\n          if (classes) {\n            span.className += classes;\n          }\n          el.appendChild(span);\n        }\n      });\n    };\n\n    /* Help function to updateGrid */\n    var fillGridAt = function fillGridAt(x, y, drawMask, dimension, item) {\n      if (x >= ngx || y >= ngy || x < 0 || y < 0) {\n        return;\n      }\n\n      grid[x][y] = false;\n\n      if (drawMask) {\n        var ctx = elements[0].getContext('2d');\n        ctx.fillRect(x * g, y * g, maskRectWidth, maskRectWidth);\n      }\n\n      if (interactive) {\n        infoGrid[x][y] = { item: item, dimension: dimension };\n      }\n    };\n\n    /* Update the filling information of the given space with occupied points.\n       Draw the mask on the canvas if necessary. */\n    var updateGrid = function updateGrid(gx, gy, gw, gh, info, item) {\n      var occupied = info.occupied;\n      var drawMask = settings.drawMask;\n      var ctx;\n      if (drawMask) {\n        ctx = elements[0].getContext('2d');\n        ctx.save();\n        ctx.fillStyle = settings.maskColor;\n      }\n\n      var dimension;\n      if (interactive) {\n        var bounds = info.bounds;\n        dimension = {\n          x: (gx + bounds[3]) * g,\n          y: (gy + bounds[0]) * g,\n          w: (bounds[1] - bounds[3] + 1) * g,\n          h: (bounds[2] - bounds[0] + 1) * g\n        };\n      }\n\n      var i = occupied.length;\n      while (i--) {\n        var px = gx + occupied[i][0];\n        var py = gy + occupied[i][1];\n\n        if (px >= ngx || py >= ngy || px < 0 || py < 0) {\n          continue;\n        }\n\n        fillGridAt(px, py, drawMask, dimension, item);\n      }\n\n      if (drawMask) {\n        ctx.restore();\n      }\n    };\n\n    /* putWord() processes each item on the list,\n       calculate it's size and determine it's position, and actually\n       put it on the canvas. */\n    var putWord = function putWord(item) {\n      var word, weight, attributes;\n      if (Array.isArray(item)) {\n        word = item[0];\n        weight = item[1];\n      } else {\n        word = item.word;\n        weight = item.weight;\n        attributes = item.attributes;\n      }\n      var rotateDeg = getRotateDeg();\n\n      // get info needed to put the text onto the canvas\n      var info = getTextInfo(word, weight, rotateDeg);\n\n      // not getting the info means we shouldn't be drawing this one.\n      if (!info) {\n        return false;\n      }\n\n      if (exceedTime()) {\n        return false;\n      }\n\n      // If drawOutOfBound is set to false,\n      // skip the loop if we have already know the bounding box of\n      // word is larger than the canvas.\n      if (!settings.drawOutOfBound) {\n        var bounds = info.bounds;\n        if ((bounds[1] - bounds[3] + 1) > ngx ||\n          (bounds[2] - bounds[0] + 1) > ngy) {\n          return false;\n        }\n      }\n\n      // Determine the position to put the text by\n      // start looking for the nearest points\n      var r = maxRadius + 1;\n\n      var tryToPutWordAtPoint = function(gxy) {\n        var gx = Math.floor(gxy[0] - info.gw / 2);\n        var gy = Math.floor(gxy[1] - info.gh / 2);\n        var gw = info.gw;\n        var gh = info.gh;\n\n        // If we cannot fit the text at this position, return false\n        // and go to the next position.\n        if (!canFitText(gx, gy, gw, gh, info.occupied)) {\n          return false;\n        }\n\n        // Actually put the text on the canvas\n        drawText(gx, gy, info, word, weight,\n                 (maxRadius - r), gxy[2], rotateDeg, attributes);\n\n        // Mark the spaces on the grid as filled\n        updateGrid(gx, gy, gw, gh, info, item);\n\n        return {\n          gx: gx,\n          gy: gy,\n          rot: rotateDeg,\n          info: info\n        };\n      };\n\n      while (r--) {\n        var points = getPointsAtRadius(maxRadius - r);\n\n        if (settings.shuffle) {\n          points = [].concat(points);\n          shuffleArray(points);\n        }\n\n        // Try to fit the words by looking at each point.\n        // array.some() will stop and return true\n        // when putWordAtPoint() returns true.\n        for (var i = 0; i < points.length; i++) {\n          var res = tryToPutWordAtPoint(points[i]);\n          if (res) {\n            return res;\n          }\n        }\n\n        // var drawn = points.some(tryToPutWordAtPoint);\n        // if (drawn) {\n        //   // leave putWord() and return true\n        //   return true;\n        // }\n      }\n      // we tried all distances but text won't fit, return null\n      return null;\n    };\n\n    /* Send DOM event to all elements. Will stop sending event and return\n       if the previous one is canceled (for cancelable events). */\n    var sendEvent = function sendEvent(type, cancelable, detail) {\n      if (cancelable) {\n        return !elements.some(function(el) {\n          var evt = document.createEvent('CustomEvent');\n          evt.initCustomEvent(type, true, cancelable, detail || {});\n          return !el.dispatchEvent(evt);\n        }, this);\n      } else {\n        elements.forEach(function(el) {\n          var evt = document.createEvent('CustomEvent');\n          evt.initCustomEvent(type, true, cancelable, detail || {});\n          el.dispatchEvent(evt);\n        }, this);\n      }\n    };\n\n    /* Start drawing on a canvas */\n    var start = function start() {\n      // For dimensions, clearCanvas etc.,\n      // we only care about the first element.\n      var canvas = elements[0];\n\n      if (canvas.getContext) {\n        ngx = Math.ceil(canvas.width / g);\n        ngy = Math.ceil(canvas.height / g);\n      } else {\n        var rect = canvas.getBoundingClientRect();\n        ngx = Math.ceil(rect.width / g);\n        ngy = Math.ceil(rect.height / g);\n      }\n\n      // Sending a wordcloudstart event which cause the previous loop to stop.\n      // Do nothing if the event is canceled.\n      if (!sendEvent('wordcloudstart', true)) {\n        return;\n      }\n\n      // Determine the center of the word cloud\n      center = (settings.origin) ?\n        [settings.origin[0]/g, settings.origin[1]/g] :\n        [ngx / 2, ngy / 2];\n\n      // Maxium radius to look for space\n      maxRadius = Math.floor(Math.sqrt(ngx * ngx + ngy * ngy));\n\n      /* Clear the canvas only if the clearCanvas is set,\n         if not, update the grid to the current canvas state */\n      grid = [];\n\n      var gx, gy, i;\n      if (!canvas.getContext || settings.clearCanvas) {\n        elements.forEach(function(el) {\n          if (el.getContext) {\n            var ctx = el.getContext('2d');\n            ctx.fillStyle = settings.backgroundColor;\n            ctx.clearRect(0, 0, ngx * (g + 1), ngy * (g + 1));\n            ctx.fillRect(0, 0, ngx * (g + 1), ngy * (g + 1));\n          } else {\n            el.textContent = '';\n            el.style.backgroundColor = settings.backgroundColor;\n            el.style.position = 'relative';\n          }\n        });\n\n        /* fill the grid with empty state */\n        gx = ngx;\n        while (gx--) {\n          grid[gx] = [];\n          gy = ngy;\n          while (gy--) {\n            grid[gx][gy] = true;\n          }\n        }\n      } else {\n        /* Determine bgPixel by creating\n           another canvas and fill the specified background color. */\n        var bctx = document.createElement('canvas').getContext('2d');\n\n        bctx.fillStyle = settings.backgroundColor;\n        bctx.fillRect(0, 0, 1, 1);\n        var bgPixel = bctx.getImageData(0, 0, 1, 1).data;\n\n        /* Read back the pixels of the canvas we got to tell which part of the\n           canvas is empty.\n           (no clearCanvas only works with a canvas, not divs) */\n        var imageData =\n          canvas.getContext('2d').getImageData(0, 0, ngx * g, ngy * g).data;\n\n        gx = ngx;\n        var x, y;\n        while (gx--) {\n          grid[gx] = [];\n          gy = ngy;\n          while (gy--) {\n            y = g;\n            singleGridLoop: while (y--) {\n              x = g;\n              while (x--) {\n                i = 4;\n                while (i--) {\n                  if (imageData[((gy * g + y) * ngx * g +\n                                 (gx * g + x)) * 4 + i] !== bgPixel[i]) {\n                    grid[gx][gy] = false;\n                    break singleGridLoop;\n                  }\n                }\n              }\n            }\n            if (grid[gx][gy] !== false) {\n              grid[gx][gy] = true;\n            }\n          }\n        }\n\n        imageData = bctx = bgPixel = undefined;\n      }\n\n      // fill the infoGrid with empty state if we need it\n      if (settings.hover || settings.click) {\n\n        interactive = true;\n\n        /* fill the grid with empty state */\n        gx = ngx + 1;\n        while (gx--) {\n          infoGrid[gx] = [];\n        }\n\n        if (settings.hover) {\n          canvas.addEventListener('mousemove', wordcloudhover);\n        }\n\n        if (settings.click) {\n          canvas.addEventListener('click', wordcloudclick);\n          canvas.addEventListener('touchstart', wordcloudclick);\n          canvas.addEventListener('touchend', function (e) {\n            e.preventDefault();\n          });\n          canvas.style.webkitTapHighlightColor = 'rgba(0, 0, 0, 0)';\n        }\n\n        canvas.addEventListener('wordcloudstart', function stopInteraction() {\n          canvas.removeEventListener('wordcloudstart', stopInteraction);\n\n          canvas.removeEventListener('mousemove', wordcloudhover);\n          canvas.removeEventListener('click', wordcloudclick);\n          hovered = undefined;\n        });\n      }\n\n      i = 0;\n      var loopingFunction, stoppingFunction;\n      if (settings.wait !== 0) {\n        loopingFunction = window.setTimeout;\n        stoppingFunction = window.clearTimeout;\n      } else {\n        loopingFunction = window.setImmediate;\n        stoppingFunction = window.clearImmediate;\n      }\n\n      var addEventListener = function addEventListener(type, listener) {\n        elements.forEach(function(el) {\n          el.addEventListener(type, listener);\n        }, this);\n      };\n\n      var removeEventListener = function removeEventListener(type, listener) {\n        elements.forEach(function(el) {\n          el.removeEventListener(type, listener);\n        }, this);\n      };\n\n      var anotherWordCloudStart = function anotherWordCloudStart() {\n        removeEventListener('wordcloudstart', anotherWordCloudStart);\n        stoppingFunction(timer);\n      };\n\n      addEventListener('wordcloudstart', anotherWordCloudStart);\n\n      var timer = loopingFunction(function loop() {\n        if (i >= settings.list.length) {\n          stoppingFunction(timer);\n          sendEvent('wordcloudstop', false);\n          removeEventListener('wordcloudstart', anotherWordCloudStart);\n\n          return;\n        }\n        escapeTime = (new Date()).getTime();\n        var drawn = putWord(settings.list[i]);\n        var canceled = !sendEvent('wordclouddrawn', true, {\n          item: settings.list[i], drawn: drawn });\n        if (exceedTime() || canceled) {\n          stoppingFunction(timer);\n          settings.abort();\n          sendEvent('wordcloudabort', false);\n          sendEvent('wordcloudstop', false);\n          removeEventListener('wordcloudstart', anotherWordCloudStart);\n          return;\n        }\n        i++;\n        timer = loopingFunction(loop, settings.wait);\n      }, settings.wait);\n    };\n\n    // All set, start the drawing\n    start();\n  };\n\n  WordCloud.isSupported = isSupported;\n  WordCloud.minFontSize = minFontSize;\n\n  // Expose the library as an AMD module\n  if (typeof define === 'function' && define.amd) {\n    define('wordcloud', [], function() { return WordCloud; });\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = WordCloud;\n  } else {\n    global.WordCloud = WordCloud;\n  }\n\n})(this); //jshint ignore:line","var View = require(\"../../coord/View\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\n// FIXME Where to create the simple view coordinate system\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom;\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkAreaModel\");\n\nrequire(\"./marker/MarkAreaView\");\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markArea component is enabled\n  opt.markArea = opt.markArea || {};\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n    hoverLineStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n    labelModel = itemModel.getModel('label.normal');\n    hoverLabelModel = itemModel.getModel('label.emphasis');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var defaultText;\n  var normalText;\n  var emphasisText;\n\n  if (showLabel || hoverShowLabel) {\n    var rawVal = seriesModel.getRawValue(idx);\n    defaultText = rawVal == null ? defaultText = lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    defaultLabelColor = visualColor || '#000';\n    normalText = zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType), defaultText);\n    emphasisText = zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), normalText);\n  } // label.afterUpdate = lineAfterUpdate;\n\n\n  if (showLabel) {\n    var labelStyle = graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  } else {\n    label.setStyle('text', null);\n  }\n\n  if (hoverShowLabel) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMinin = require(\"./mixin/colorPalette\");\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar layoutUtil = require(\"../util/layout\");\n\n// -------------\n// Preprocessor\n// -------------\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel, api);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _updateElements: function (graphicModel, api) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n\n      if (elOption.type === 'text') {\n        var elOptionStyle = elOption.style; // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidth = elOption.width;\n        el.__ecGraphicHeight = elOption.height;\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap; // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: api.getWidth(),\n        height: api.getHeight()\n      } : {\n        // Like 'position:absolut' in css, default 0.\n        width: parentEl.__ecGraphicWidth || 0,\n        height: parentEl.__ecGraphicHeight || 0\n      };\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}","var graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function (t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","function _default(seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n    var symbolSize = seriesModel.get('symbolSize');\n    data.setVisual({\n      legendSymbol: legendSymbol || symbolType,\n      symbol: symbolType,\n      symbolSize: symbolSize\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof symbolSize === 'function') {\n        data.each(function (idx) {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        });\n      }\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var itemSymbolType = itemModel.getShallow('symbol', true);\n        var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n        if (itemSymbolType != null) {\n          data.setItemVisual(idx, 'symbol', itemSymbolType);\n        }\n\n        if (itemSymbolSize != null) {\n          // PENDING Transform symbolSize ?\n          data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","function defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\nvar nest = require(\"../../util/array/nest\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file The layout algorithm of sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations);\n  });\n}\n/**\n * Get the layout position of the whole view\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations) {\n  computeNodeBreadths(nodes, nodeWidth, width);\n  computeNodeDepths(nodes, edges, height, nodeGap, iterations);\n  computeEdgeDepths(nodes);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var value = Math.max(value1, value2);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param  {number} nodeWidth  the dx of the node\n * @param  {number} width  the whole width of the area to draw the view\n */\n\n\nfunction computeNodeBreadths(nodes, nodeWidth, width) {\n  var remainNodes = nodes;\n  var nextNode = null;\n  var x = 0;\n  var kx = 0;\n\n  while (remainNodes.length) {\n    nextNode = [];\n\n    for (var i = 0, len = remainNodes.length; i < len; i++) {\n      var node = remainNodes[i];\n      node.setLayout({\n        x: x\n      }, true);\n      node.setLayout({\n        dx: nodeWidth\n      }, true);\n\n      for (var j = 0, lenj = node.outEdges.length; j < lenj; j++) {\n        nextNode.push(node.outEdges[j].node2);\n      }\n    }\n\n    remainNodes = nextNode;\n    ++x;\n  }\n\n  moveSinksRight(nodes, x);\n  kx = (width - nodeWidth) / (x - 1);\n  scaleNodeBreadths(nodes, kx);\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} x  value (x-1) use to assign to node without outEdges\n *     as x-position\n */\n\n\nfunction moveSinksRight(nodes, x) {\n  zrUtil.each(nodes, function (node) {\n    if (!node.outEdges.length) {\n      node.setLayout({\n        x: x - 1\n      }, true);\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx) {\n  zrUtil.each(nodes, function (node) {\n    var nodeX = node.getLayout().x * kx;\n    node.setLayout({\n      x: nodeX\n    }, true);\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param {number} iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, nodeGap, iterations) {\n  var nodesByBreadth = nest().key(function (d) {\n    return d.getLayout().x;\n  }).sortKeys(ascending).entries(nodes).map(function (d) {\n    return d.values;\n  });\n  initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap);\n  resolveCollisions(nodesByBreadth, nodeGap, height);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n    relaxLeftToRight(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n  }\n}\n/**\n * Compute the original y-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n */\n\n\nfunction initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap) {\n  var kyArray = [];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n    var ky = (height - (n - 1) * nodeGap) / sum;\n    kyArray.push(ky);\n  });\n  kyArray.sort(function (a, b) {\n    return a - b;\n  });\n  var ky0 = kyArray[0];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      node.setLayout({\n        y: i\n      }, true);\n      var nodeDy = node.getLayout().value * ky0;\n      node.setLayout({\n        dy: nodeDy\n      }, true);\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * ky0;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {number} nodeGap  the vertical distance between two nodes\n * @param {number} height  the whole height of the area to draw the view\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var i;\n    nodes.sort(ascendingDepth);\n\n    for (i = 0; i < n; i++) {\n      node = nodes[i];\n      dy = y0 - node.getLayout().y;\n\n      if (dy > 0) {\n        var nodeY = node.getLayout().y + dy;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n\n      y0 = node.getLayout().y + node.getLayout().dy + nodeGap;\n    } // if the bottommost node goes outside the bounds, push it back up\n\n\n    dy = y0 - nodeGap - height;\n\n    if (dy > 0) {\n      var nodeY = node.getLayout().y - dy;\n      node.setLayout({\n        y: nodeY\n      }, true);\n      y0 = node.getLayout().y;\n\n      for (i = n - 2; i >= 0; --i) {\n        node = nodes[i];\n        dy = node.getLayout().y + node.getLayout().dy + nodeGap - y0;\n\n        if (dy > 0) {\n          nodeY = node.getLayout().y - dy;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n\n        y0 = node.getLayout().y;\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget) / sum(node.outEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge) {\n  return center(edge.node2) * edge.getValue();\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource) / sum(node.inEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedSource(edge) {\n  return center(edge.node1) * edge.getValue();\n}\n/**\n * Compute the depth(y-position) of each edge\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeEdgeDepths(nodes) {\n  zrUtil.each(nodes, function (node) {\n    node.outEdges.sort(ascendingTargetDepth);\n    node.inEdges.sort(ascendingSourceDepth);\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}\n\nfunction ascendingTargetDepth(a, b) {\n  return a.node2.getLayout().y - b.node2.getLayout().y;\n}\n\nfunction ascendingSourceDepth(a, b) {\n  return a.node1.getLayout().y - b.node1.getLayout().y;\n}\n\nfunction sum(array, f) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +f.call(array, array[i], i);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction center(node) {\n  return node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction ascendingDepth(a, b) {\n  return a.getLayout().y - b.getLayout().y;\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a === b ? 0 : NaN;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../../chart/helper/SymbolDraw\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar List = require(\"../../data/List\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  updateLayout: function (markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.normal.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.coordDimToDataDim(coordDim)[0]) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      info.name = coordDim;\n      return info;\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar sizeCalculable = _layout.sizeCalculable;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar CalendarModel = ComponentModel.extend({\n  type: 'calendar',\n\n  /**\n   * @type {module:echarts/coord/calendar/Calendar}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    left: 80,\n    top: 60,\n    cellSize: 20,\n    // horizontal vertical\n    orient: 'horizontal',\n    // month separate line style\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: '#000',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // rect style  temporarily unused emphasis\n    itemStyle: {\n      normal: {\n        color: '#fff',\n        borderWidth: 1,\n        borderColor: '#ccc'\n      }\n    },\n    // week text style\n    dayLabel: {\n      show: true,\n      // a week first day\n      firstDay: 0,\n      // start end\n      position: 'start',\n      margin: '50%',\n      // 50% of cellSize\n      nameMap: 'en',\n      color: '#000'\n    },\n    // month text style\n    monthLabel: {\n      show: true,\n      // start end\n      position: 'start',\n      margin: 5,\n      // center or left\n      align: 'center',\n      // cn en []\n      nameMap: 'en',\n      formatter: null,\n      color: '#000'\n    },\n    // year text style\n    yearLabel: {\n      show: true,\n      // top bottom left right\n      position: null,\n      margin: 30,\n      formatter: null,\n      color: '#ccc',\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      fontSize: 20\n    }\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    CalendarModel.superApply(this, 'init', arguments);\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    CalendarModel.superApply(this, 'mergeOption', arguments);\n    mergeAndNormalizeLayoutParams(this.option, option);\n  }\n});\n\nfunction mergeAndNormalizeLayoutParams(target, raw) {\n  // Normalize cellSize\n  var cellSize = target.cellSize;\n\n  if (!zrUtil.isArray(cellSize)) {\n    cellSize = target.cellSize = [cellSize, cellSize];\n  } else if (cellSize.length === 1) {\n    cellSize[1] = cellSize[0];\n  }\n\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\n    // If user have set `width` or both `left` and `right`, cellSize\n    // will be automatically set to 'auto', otherwise the default\n    // setting of cellSize will make `width` setting not work.\n    if (sizeCalculable(raw, hvIdx)) {\n      cellSize[hvIdx] = 'auto';\n    }\n\n    return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\n  });\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = CalendarModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected',\n  update: 'updateVisual'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});","var Parallel = require(\"./Parallel\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/**\n * Parallel coordinate system creater.\n */\nfunction create(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = ecModel.queryComponents({\n        mainType: 'parallel',\n        index: seriesModel.get('parallelIndex'),\n        id: seriesModel.get('parallelId')\n      })[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nCoordinateSystem.register('parallel', {\n  create: create\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    this._data = legendData;\n    var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n      return series.name;\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        availableNames = availableNames.concat(data.mapArray(data.getName));\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;","function _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    function pointsConverter(val, idx) {\n      points[idx] = points[idx] || [];\n      points[idx][i] = coordSys.dataToPoint(val, i);\n    }\n\n    for (var i = 0; i < coordSys.getIndicatorAxes().length; i++) {\n      var dim = data.dimensions[i];\n      data.each(dim, pointsConverter);\n    }\n\n    data.each(function (idx) {\n      // Close polygon\n      points[idx][0] && points[idx].push(points[idx][0].slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nmodule.exports = _default;","var svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction retrieveTargetInfo(payload, seriesModel) {\n  if (payload && (payload.type === 'treemapZoomToNode' || payload.type === 'treemapRootToNode')) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function (option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option.edgeLabel, ['show']);\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      normal: {\n        position: 'middle'\n      },\n      emphasis: {}\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      normal: {\n        show: false,\n        formatter: '{b}'\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    itemStyle: {\n      normal: {},\n      emphasis: {}\n    },\n    lineStyle: {\n      normal: {\n        color: '#aaa',\n        width: 1,\n        curveness: 0,\n        opacity: 0.5\n      },\n      emphasis: {}\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;","module.exports = require('./src/wordCloud');","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;","function _default(seriesType, ecModel) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    var dims = [];\n    var coordDims = coordSys.dimensions;\n\n    for (var i = 0; i < coordDims.length; i++) {\n      dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n    }\n\n    if (dims.length === 1) {\n      data.each(dims[0], function (x, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n      });\n    } else if (dims.length === 2) {\n      data.each(dims, function (x, y, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) || isNaN(y) ? [NaN, NaN] : coordSys.dataToPoint([x, y]));\n      }, true);\n    }\n  });\n}\n\nmodule.exports = _default;","var ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function () {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function (markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function () {}\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;","var platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('el-scrollbar',{staticClass:\"default-scrollbar\",attrs:{\"wrap-class\":\"default-scrollbar__wrap\",\"view-class\":\"p20-scrollbar__view\"}},[_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{staticClass:\"echarts-item\",attrs:{\"span\":12}},[_c('div',{staticClass:\"content-title\"},[_vm._v(\"柱状图\")]),_c('ve-histogram',{attrs:{\"data\":_vm.histogramChartData,\"settings\":_vm.histogramChartSettings,\"mark-line\":_vm.histogramChartMarkLine}})],1),_c('el-col',{staticClass:\"echarts-item\",attrs:{\"span\":12}},[_c('div',{staticClass:\"content-title\"},[_vm._v(\"折线图\")]),_c('ve-line',{attrs:{\"data\":_vm.lineChartData,\"settings\":_vm.lineChartSettings,\"mark-point\":_vm.lineChartMarkPoint}})],1),_c('el-col',{staticClass:\"echarts-item\",attrs:{\"span\":12}},[_c('div',{staticClass:\"content-title\"},[_vm._v(\"饼图\")]),_c('ve-pie',{attrs:{\"data\":_vm.pieChartData,\"settings\":_vm.pieChartSettings}})],1),_c('el-col',{staticClass:\"echarts-item\",attrs:{\"span\":12}},[_c('div',{staticClass:\"content-title\"},[_vm._v(\"环形图\")]),_c('ve-ring',{attrs:{\"data\":_vm.ringChartData,\"settings\":_vm.ringChartSettings}})],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <section>\r\n        <el-scrollbar class=\"default-scrollbar\" wrap-class=\"default-scrollbar__wrap\" view-class=\"p20-scrollbar__view\">\r\n            <el-row :gutter=\"20\">\r\n                <el-col :span=\"12\" class=\"echarts-item\">\r\n                    <div class=\"content-title\">柱状图</div>\r\n                    <ve-histogram :data=\"histogramChartData\" :settings=\"histogramChartSettings\" :mark-line=\"histogramChartMarkLine\"></ve-histogram>\r\n                </el-col>\r\n                <el-col :span=\"12\" class=\"echarts-item\">\r\n                    <div class=\"content-title\">折线图</div>\r\n                    <ve-line :data=\"lineChartData\" :settings=\"lineChartSettings\" :mark-point=\"lineChartMarkPoint\"></ve-line>\r\n                </el-col>\r\n                <el-col :span=\"12\" class=\"echarts-item\">\r\n                    <div class=\"content-title\">饼图</div>\r\n                    <ve-pie :data=\"pieChartData\" :settings=\"pieChartSettings\"></ve-pie>\r\n                </el-col>\r\n                <el-col :span=\"12\" class=\"echarts-item\">\r\n                    <div class=\"content-title\">环形图</div>\r\n                    <ve-ring :data=\"ringChartData\" :settings=\"ringChartSettings\"></ve-ring>\r\n                </el-col>\r\n            </el-row>\r\n        </el-scrollbar>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\n    import Vue from 'vue'\r\n    import VCharts from 'v-charts'\r\n    Vue.use(VCharts)\r\n    export default {\r\n        name: 'AdminDashboard',\r\n        data () {\r\n            return {\r\n                histogramChartData: {\r\n                    columns: ['日期', '直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎', '百度', '谷歌', '必应', '其他'],\r\n                    rows: [{\r\n                        '日期': '周一', '直接访问': 320, '邮件营销': 120, '联盟广告': 220, '视频广告': 150, '搜索引擎': 862, '百度': 620, '谷歌': 120, '必应': 60, '其他': 62\r\n                    }, {\r\n                        '日期': '周二', '直接访问': 332, '邮件营销': 132, '联盟广告': 182, '视频广告': 232, '搜索引擎': 1018, '百度': 732, '谷歌': 132, '必应': 72, '其他': 82\r\n                    }, {\r\n                        '日期': '周三', '直接访问': 301, '邮件营销': 101, '联盟广告': 191, '视频广告': 201, '搜索引擎': 964, '百度': 701, '谷歌': 101, '必应': 71, '其他': 91\r\n                    }, {\r\n                        '日期': '周四', '直接访问': 334, '邮件营销': 134, '联盟广告': 234, '视频广告': 154, '搜索引擎': 1026, '百度': 734, '谷歌': 134, '必应': 74, '其他': 84\r\n                    }, {\r\n                        '日期': '周五', '直接访问': 390, '邮件营销': 90, '联盟广告': 290, '视频广告': 190, '搜索引擎': 1679, '百度': 1090, '谷歌': 290, '必应': 190, '其他': 109\r\n                    }, {\r\n                        '日期': '周六', '直接访问': 330, '邮件营销': 230, '联盟广告': 330, '视频广告': 330, '搜索引擎': 1600, '百度': 1130, '谷歌': 230, '必应': 130, '其他': 110\r\n                    }, {\r\n                        '日期': '周日', '直接访问': 320, '邮件营销': 210, '联盟广告': 310, '视频广告': 410, '搜索引擎': 1570, '百度': 1120, '谷歌': 220, '必应': 110, '其他': 120\r\n                    }]\r\n                },\r\n                histogramChartSettings: {\r\n                    metrics: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎', '百度', '谷歌', '必应', '其他'],\r\n                    dimension: ['日期'],\r\n                    stack: {\r\n                        '广告': ['邮件营销', '联盟广告', '视频广告'],\r\n                        '搜索引擎': ['百度', '谷歌', '必应', '其他']\r\n                    }\r\n                },\r\n                histogramChartMarkLine: {\r\n                    data: [\r\n                        [{type: 'min'}, {type: 'max'}]\r\n                    ]\r\n                },\r\n                lineChartData: {\r\n                    columns: ['日期', '成本', '利润', '占比', '其他'],\r\n                    rows: [{\r\n                        '成本': 1523, '日期': '1月1日', '利润': 1523, '占比': 0.12, '其他': 100\r\n                    }, {\r\n                        '成本': 1223, '日期': '1月2日', '利润': 1523, '占比': 0.345, '其他': 100\r\n                    }, {\r\n                        '成本': 2123, '日期': '1月3日', '利润': 1523, '占比': 0.7, '其他': 100\r\n                    }, {\r\n                        '成本': 4123, '日期': '1月4日', '利润': 1523, '占比': 0.31, '其他': 100\r\n                    }, {\r\n                        '成本': 3123, '日期': '1月5日', '利润': 1523, '占比': 0.12, '其他': 100\r\n                    }, {\r\n                        '成本': 7123, '日期': '1月6日', '利润': 1523, '占比': 0.65, '其他': 100\r\n                    }]\r\n                },\r\n                lineChartSettings: {\r\n                    metrics: ['成本', '利润'],\r\n                    dimension: ['日期']\r\n                },\r\n                lineChartMarkPoint: {\r\n                    data: [{\r\n                        name: '最大值',\r\n                        type: 'max'\r\n                    }]\r\n                },\r\n                pieChartData: {\r\n                    columns: ['日期', '成本', '利润'],\r\n                    rows: [{\r\n                        '日期': '1月1号', '成本': 123, '利润': 3\r\n                    }, {\r\n                        '日期': '1月2号', '成本': 1223, '利润': 6\r\n                    }, {\r\n                        '日期': '1月3号', '成本': 2123, '利润': 90\r\n                    }, {\r\n                        '日期': '1月4号', '成本': 4123, '利润': 12\r\n                    }, {\r\n                        '日期': '1月5号', '成本': 3123, '利润': 15\r\n                    }, {\r\n                        '日期': '1月6号', '成本': 7123, '利润': 20\r\n                    }]\r\n                },\r\n                pieChartSettings: {\r\n                    dimension: '成本',\r\n                    metrics: '利润'\r\n                },\r\n                ringChartData: {\r\n                    columns: ['日期', '成本', '利润'],\r\n                    rows: [{\r\n                        '日期': '1月1号', '成本': 123, '利润': 3\r\n                    }, {\r\n                        '日期': '1月2号', '成本': 1223, '利润': 6\r\n                    }, {\r\n                        '日期': '1月3号', '成本': 2123, '利润': 90\r\n                    }, {\r\n                        '日期': '1月4号', '成本': 4123, '利润': 12\r\n                    }, {\r\n                        '日期': '1月5号', '成本': 3123, '利润': 15\r\n                    }, {\r\n                        '日期': '1月6号', '成本': 7123, '利润': 20\r\n                    }]\r\n                },\r\n                ringChartSettings: {\r\n                    dimension: '成本',\r\n                    metrics: '利润'\r\n                }\r\n            }\r\n        },\r\n        created: function () {\r\n        },\r\n        methods: {\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .content-title{\r\n        clear: both;\r\n        font-weight: 400;\r\n        line-height: 50px;\r\n        padding: 10px 10px;\r\n        font-size: 22px;\r\n        color: #1f2f3d;\r\n    }\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Charts.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Charts.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Charts.vue?vue&type=template&id=079fd192&scoped=true&\"\nimport script from \"./Charts.vue?vue&type=script&lang=js&\"\nexport * from \"./Charts.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Charts.vue?vue&type=style&index=0&id=079fd192&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"079fd192\",\n  null\n  \n)\n\ncomponent.options.__file = \"Charts.vue\"\nexport default component.exports","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../component/radar\");\n\nrequire(\"./radar/RadarSeries\");\n\nrequire(\"./radar/RadarView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar radarLayout = require(\"./radar/radarLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\nvar backwardCompat = require(\"./radar/backwardCompat\");\n\n// Must use radar component\necharts.registerVisual(zrUtil.curry(dataColor, 'radar'));\necharts.registerVisual(zrUtil.curry(visualSymbol, 'radar', 'circle', null));\necharts.registerLayout(radarLayout);\necharts.registerProcessor(zrUtil.curry(dataFilter, 'radar'));\necharts.registerPreprocessor(backwardCompat);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorUtil = require(\"zrender/lib/tool/color\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n// TODO Better on polar\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y], true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  updateLayout: function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesName = seriesModel.name;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesName) || areaGroupMap.set(seriesName, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label.normal');\n      var labelHoverModel = itemModel.getModel('label.emphasis');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle.normal').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.coordDimToDataDim(coordDim)[0]) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      info.name = coordDim;\n      return info;\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  mergeDefaultAndTheme: function (option) {\n    ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      normal: {\n        borderColor: '#666',\n        color: 'none'\n      },\n      emphasis: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('svg', Painter);","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle.normal';\n\nfunction _default(ecModel, api, payload) {\n  var condition = {\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  };\n  ecModel.eachComponent(condition, function (seriesModel) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  });\n}\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n}\n\nfunction getPrecision(data, valueAxisDim, dataIndex) {\n  var precision = -1;\n\n  do {\n    precision = Math.max(numberUtil.getPrecision(data.get(valueAxisDim, dataIndex)), precision);\n    data = data.stackedOn;\n  } while (data);\n\n  return precision;\n}\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var value = numCalculate(data, targetDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(targetDataDim, value, true)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex, true);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex, true);\n  var precision = getPrecision(data, targetDataDim, dataIndex);\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          var dataDim = seriesModel.coordDimToDataDim(dims[i])[0];\n          coord[i] = numCalculate(data, dataDim, coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(seriesModel.dataDimToCoordDim(ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\n    ret.valueDataDim = seriesModel.coordDimToDataDim(ret.valueAxis.dim)[0];\n  }\n\n  return ret;\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    }, true);\n    return sum / count;\n  } else {\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar _helper = require(\"./helper\");\n\nvar wrapTreePathInfo = _helper.wrapTreePathInfo;\n\nvar _default = SeriesModel.extend({\n  type: 'series.treemap',\n  layoutMode: 'box',\n  dependencies: ['grid', 'polar'],\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  defaultOption: {\n    // Disable progressive rendering\n    progressive: 0,\n    hoverLayerThreshold: Infinity,\n    // center: ['50%', '50%'],          // not supported in ec3.\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    right: null,\n    bottom: null,\n    width: '80%',\n    height: '80%',\n    sort: true,\n    // Can be null or false or true\n    // (order by desc default, asc not supported yet (strange effect))\n    clipWindow: 'origin',\n    // Size of clipped window when zooming. 'origin' or 'fullscreen'\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    // golden ratio\n    leafDepth: null,\n    // Nodes on depth from root are regarded as leaves.\n    // Count from zero (zero represents only view root).\n    drillDownIcon: '▶',\n    // Use html character temporarily because it is complicated\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    // Be effective when using zoomToNode. Specify the proportion of the\n    // target node area in the view area.\n    roam: true,\n    // true, false, 'scale' or 'zoom', 'move'.\n    nodeClick: 'zoomToNode',\n    // Leaf node click behaviour: 'zoomToNode', 'link', false.\n    // If leafDepth is set and clicking a node which has children but\n    // be on left depth, the behaviour would be changing root. Otherwise\n    // use behavious defined above.\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      // Width of empty node.\n      itemStyle: {\n        normal: {\n          color: 'rgba(0,0,0,0.7)',\n          //'#5793f3',\n          borderColor: 'rgba(255,255,255,0.7)',\n          borderWidth: 1,\n          shadowColor: 'rgba(150,150,150,1)',\n          shadowBlur: 3,\n          shadowOffsetX: 0,\n          shadowOffsetY: 0,\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        emphasis: {\n          textStyle: {}\n        }\n      }\n    },\n    label: {\n      normal: {\n        show: true,\n        // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n        distance: 0,\n        padding: 5,\n        position: 'inside',\n        // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\n        // formatter: null,\n        color: '#fff',\n        ellipsis: true // align\n        // verticalAlign\n\n      }\n    },\n    upperLabel: {\n      // Label when node is parent.\n      normal: {\n        show: false,\n        position: [0, '50%'],\n        height: 20,\n        // formatter: null,\n        color: '#fff',\n        ellipsis: true,\n        // align: null,\n        verticalAlign: 'middle'\n      },\n      emphasis: {\n        show: true,\n        position: [0, '50%'],\n        color: '#fff',\n        ellipsis: true,\n        verticalAlign: 'middle'\n      }\n    },\n    itemStyle: {\n      normal: {\n        color: null,\n        // Can be 'none' if not necessary.\n        colorAlpha: null,\n        // Can be 'none' if not necessary.\n        colorSaturation: null,\n        // Can be 'none' if not necessary.\n        borderWidth: 0,\n        gapWidth: 0,\n        borderColor: '#fff',\n        borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n        // border color is evaluated by color of current node and\n        // borderColorSaturation.\n\n      },\n      emphasis: {}\n    },\n    visualDimension: 0,\n    // Can be 0, 1, 2, 3.\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // + treemapSeries.color should not be modified. Please only modified\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    // Array. Specify color alpha range of each level, like [0.2, 0.8]\n    colorSaturation: null,\n    // Array. Specify color saturation of each level, like [0.2, 0.5]\n    colorMappingBy: 'index',\n    // 'value' or 'index' or 'id'.\n    visibleMin: 10,\n    // If area less than this threshold (unit: pixel^2), node will not\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // If area of a node less than this threshold (unit: pixel^2),\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n    // data: {\n    //      value: [],\n    //      children: [],\n    //      link: 'http://xxx.xxx.xxx',\n    //      target: 'blank' or 'self'\n    // }\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || [];\n    levels = option.levels = setDefault(levels, ecModel);\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? addCommas(value[0]) : addCommas(value);\n    var name = data.getName(dataIndex);\n    return encodeHTML(name + ': ' + formattedValue);\n  },\n\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n  setLayoutInfo: function (layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  },\n\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n  mapIdToIndex: function (id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n\n    var index = idIndexMap.get(id);\n\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n\n    return index;\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = ecModel.get('color');\n\n  if (!globalColorList) {\n    return;\n  }\n\n  levels = levels || [];\n  var hasColorDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n\n    if (model.get('itemStyle.normal.color') || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n  });\n\n  if (!hasColorDefine) {\n    var level0 = levels[0] || (levels[0] = {});\n    level0.color = globalColorList.slice();\n  }\n\n  return levels;\n}\n\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n\nvar _default = ComponentView.extend({\n  type: 'timeline'\n});\n\nmodule.exports = _default;","require(\"../coord/calendar/Calendar\");\n\nrequire(\"../coord/calendar/CalendarModel\");\n\nrequire(\"./calendar/CalendarView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(option) {\n  // Save geoCoord\n  var mapSeries = [];\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'map') {\n      mapSeries.push(seriesOpt);\n      seriesOpt.map = seriesOpt.map || seriesOpt.mapType; // Put x, y, width, height, x2, y2 in the top level\n\n      zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\n    }\n  });\n}\n\nmodule.exports = _default;","var numberUtil = require(\"../util/number\");\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barLayoutGrid = require(\"../layout/barGrid\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar')); // Visual coding for legend\n\necharts.registerVisual(function (ecModel) {\n  ecModel.eachSeriesByType('bar', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual('legendSymbol', 'roundRect');\n  });\n});","var vec2 = require(\"zrender/lib/core/vector\");\n\nfunction circularLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var angle = 0;\n  var sum = nodeData.getSum('value');\n  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  graph.eachNode(function (node) {\n    var value = node.getValue('value');\n    angle += unitAngle * (sum ? value : 1) / 2;\n    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n    angle += unitAngle * (sum ? value : 1) / 2;\n  });\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.normal.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nexports.circularLayout = circularLayout;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkLineModel\");\n\nrequire(\"./marker/MarkLineView\");\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markLine component is enabled\n  opt.markLine = opt.markLine || {};\n});","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar adjustEdge = require(\"./adjustEdge\");\n\nvar nodeOpacityPath = ['itemStyle', 'normal', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'normal', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = data.getItemModel(idx).get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        symbolPath.setStyle({\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        });\n        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n      } else {\n        symbolPath.setStyle({\n          textRotation: 0\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (dx, dy) {\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: dx,\n        dy: dy\n      });\n    }).on('zoom', function (zoom, mouseX, mouseY) {\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  updateLayout: function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;","// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType, ecModel) {\n  // Pie and funnel may use diferrent scope\n  var paletteScope = {};\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var dataAll = seriesModel.getRawData();\n    var idxMap = {};\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.normal.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar MAX_SAFE_INTEGER = _number.MAX_SAFE_INTEGER;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"./helper\");\n\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'normal', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'normal', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'normal', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'normal', 'height'];\n/**\n * @public\n */\n\nfunction _default(ecModel, api, payload) {\n  // Layout result in each node:\n  // {x, y, width, height, area, borderWidth}\n  var condition = {\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  };\n  ecModel.eachComponent(condition, function (seriesModel) {\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var targetInfo = helper.retrieveTargetInfo(payload, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort = seriesOption.sort;\n\n      if (sort && sort !== 'asc' && sort !== 'desc') {\n        sort = 'desc';\n      }\n\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      var viewRootLayout = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout));\n      });\n    }\n\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot, // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  });\n}\n/**\n * Layout treemap with squarify algorithm.\n * @see https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf\n * @see https://github.com/mbostock/d3/blob/master/src/layout/treemap.js\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n\n  if (node.isRemoved()) {\n    return;\n  }\n\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  var nodeModel = node.getModel();\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n\n  if (!viewChildren.length) {\n    return;\n  }\n\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n        row.area -= row.pop().getLayout().area;\n        position(row, rowFixedLength, rect, halfGapWidth, false);\n        rowFixedLength = mathMin(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n  }\n\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n      var dataExtent = [Infinity, -Infinity];\n      each(children, function (child) {\n        var value = child.getValue(dimension);\n        value < dataExtent[0] && (dataExtent[0] = value);\n        value > dataExtent[1] && (dataExtent[1] = value);\n      });\n    }\n\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n\n  for (var i = 0, area, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as defualt.\n\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whold width and heigth by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n\n    var currNodeValue = currNode.getValue();\n\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root postion base on coord of containerGroup\n\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\n\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutGrid(seriesType, ecModel, api) {\n  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n  }));\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var valueAxisStart = baseAxis.onZero ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n    var coordDims = [seriesModel.coordDimToDataDim('x')[0], seriesModel.coordDimToDataDim('y')[0]];\n    var coords = data.mapArray(coordDims, function (x, y) {\n      return cartesian.dataToPoint([x, y]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = coords[idx];\n      var lastCoord = lastStackCoords[stackId][idx][sign];\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (valueAxis.isHorizontal()) {\n        x = lastCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - lastCoordOrigin;\n        height = columnWidth;\n        lastStackCoordsOrigin[stackId][idx][sign] += width;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += width;\n      } else {\n        x = coord[0] + columnOffset;\n        y = lastCoord;\n        width = columnWidth;\n        height = coord[1] - lastCoordOrigin;\n        lastStackCoordsOrigin[stackId][idx][sign] += height;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += height;\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }, true);\n  }, this);\n}\n\nbarLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\nvar _default = barLayoutGrid;\nmodule.exports = _default;","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar matrix = require(\"../../core/matrix\");\n\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ClippathManager(svgRoot) {\n  Definable.call(this, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n */\n\nClippathManager.prototype.update = function (displayable) {\n  var svgEl = this.getSvgElement(displayable);\n\n  if (svgEl) {\n    this.updateDom(svgEl, displayable.__clipPaths, false);\n  }\n\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    /**\n     * Use `cloneNode()` here to appendChild to multiple parents,\n     * which may happend when Text and other shapes are using the same\n     * clipPath. Since Text will create an extra clipPath DOM due to\n     * different transform rules.\n     */\n\n    clipPathEl.appendChild(pathEl.cloneNode());\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;","var echarts = require(\"echarts\");\n\nvar BMapCoordSys = require(\"./BMapCoordSys\");\n\nrequire(\"./BMapModel\");\n\nrequire(\"./BMapView\");\n\n/**\n * BMap component extension\n */\necharts.registerCoordinateSystem('bmap', BMapCoordSys); // Action\n\necharts.registerAction({\n  type: 'bmapRoam',\n  event: 'bmapRoam',\n  update: 'updateLayout'\n}, function (payload, ecModel) {\n  ecModel.eachComponent('bmap', function (bMapModel) {\n    var bmap = bMapModel.getBMap();\n    var center = bmap.getCenter();\n    bMapModel.setCenterAndZoom([center.lng, center.lat], bmap.getZoom());\n  });\n});\nvar version = '1.0.0';\nexports.version = version;","var SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar RadarSeries = SeriesModel.extend({\n  type: 'series.radar',\n  dependencies: ['radar'],\n  // Overwrite\n  init: function (option) {\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    var data = option.data || [];\n    var dimensions = completeDimensions([], data, {\n      extraPrefix: 'indicator_',\n      extraFromZero: true\n    });\n    var list = new List(dimensions, this);\n    list.initData(data);\n    return list;\n  },\n  formatTooltip: function (dataIndex) {\n    var value = this.getRawValue(dataIndex);\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\n      return encodeHTML(axis.name + ' : ' + value[idx]);\n    }).join('<br />');\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      normal: {\n        width: 2,\n        type: 'solid'\n      }\n    },\n    label: {\n      normal: {\n        position: 'top'\n      }\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbol: 'emptyCircle',\n    symbolSize: 4 // symbolRotate: null\n\n  }\n});\nvar _default = RadarSeries;\nmodule.exports = _default;","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('timeline', function () {\n  // Only slider now.\n  return 'slider';\n});","var commonLayout = require(\"./commonLayout\");\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    disabled: false,\n    // Whether disable this inside zoom.\n    zoomLock: false,\n    // Whether disable zoom but only pan.\n    zoomOnMouseWheel: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseMove: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    preventDefaultMouseMove: true\n  }\n});\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar lineContain = require(\"zrender/lib/contain/line\");\n\nvar quadraticContain = require(\"zrender/lib/contain/quadratic\");\n\n// TODO Batch by color\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    segs: []\n  },\n  buildPath: function (path, shape) {\n    var segs = shape.segs;\n    var isPolyline = shape.polyline;\n\n    for (var i = 0; i < segs.length; i++) {\n      var seg = segs[i];\n\n      if (isPolyline) {\n        path.moveTo(seg[0][0], seg[0][1]);\n\n        for (var j = 1; j < seg.length; j++) {\n          path.lineTo(seg[j][0], seg[j][1]);\n        }\n      } else {\n        path.moveTo(seg[0][0], seg[0][1]);\n\n        if (seg.length > 2) {\n          path.quadraticCurveTo(seg[2][0], seg[2][1], seg[1][0], seg[1][1]);\n        } else {\n          path.lineTo(seg[1][0], seg[1][1]);\n        }\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var isPolyline = shape.polyline;\n    var lineWidth = Math.max(this.style.lineWidth, 1); // Not consider transform\n\n    for (var i = 0; i < segs.length; i++) {\n      var seg = segs[i];\n\n      if (isPolyline) {\n        for (var j = 1; j < seg.length; j++) {\n          if (lineContain.containStroke(seg[j - 1][0], seg[j - 1][1], seg[j][0], seg[j][1], lineWidth, x, y)) {\n            return i;\n          }\n        }\n      } else {\n        if (seg.length > 2) {\n          if (quadraticContain.containStroke(seg[0][0], seg[0][1], seg[2][0], seg[2][1], seg[1][0], seg[1][1], lineWidth, x, y)) {\n            return i;\n          }\n        } else {\n          if (lineContain.containStroke(seg[0][0], seg[0][1], seg[1][0], seg[1][1], lineWidth, x, y)) {\n            return i;\n          }\n        }\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n  this._lineEl = new LargeLineShape();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = this._lineEl;\n  var seriesModel = data.hostModel;\n  lineEl.setShape({\n    segs: data.mapArray(data.getItemLayout),\n    polyline: seriesModel.get('polyline')\n  });\n  lineEl.useStyle(seriesModel.getModel('lineStyle.normal').getLineStyle());\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill'); // Enable tooltip\n  // PENDING May have performance issue when path is extremely large\n\n  lineEl.seriesIndex = seriesModel.seriesIndex;\n  lineEl.on('mousemove', function (e) {\n    lineEl.dataIndex = null;\n    var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n    if (dataIndex > 0) {\n      // Provide dataIndex for tooltip\n      lineEl.dataIndex = dataIndex;\n    }\n  }); // Add back\n\n  this.group.add(lineEl);\n};\n\nlargeLineProto.updateLayout = function (seriesModel) {\n  var data = seriesModel.getData();\n\n  this._lineEl.setShape({\n    segs: data.mapArray(data.getItemLayout)\n  });\n};\n\nlargeLineProto.remove = function () {\n  this.group.removeAll();\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./funnel/FunnelSeries\");\n\nrequire(\"./funnel/FunnelView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar funnelLayout = require(\"./funnel/funnelLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\necharts.registerVisual(zrUtil.curry(dataColor, 'funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(zrUtil.curry(dataFilter, 'funnel'));","var echarts = require(\"../../echarts\");\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar MapDraw = require(\"../../component/helper/MapDraw\");\n\nvar _default = echarts.extendChartView({\n  type: 'map',\n  render: function (mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api, true);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  },\n  remove: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  },\n  _renderSymbols: function (mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each('value', function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(idx);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          fill: mapModel.getData().getVisual('color')\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: !offset ? 10 : 8\n      }); // First data on the same region\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name = originalData.getName(idx);\n        var fullIndex = fullData.indexOfName(name);\n        var itemModel = originalData.getItemModel(idx);\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n        var polygonGroups = fullData.getItemGraphicEl(fullIndex);\n        var normalText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'normal'), name);\n        var emphasisText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'emphasis'), normalText);\n\n        var onEmphasis = function () {\n          var hoverStyle = graphic.setTextStyle({}, hoverLabelModel, {\n            text: hoverLabelModel.get('show') ? emphasisText : null\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          }, true);\n          circle.style.extendFrom(hoverStyle); // Make label upper than others if overlaps.\n\n          circle.__mapOriginalZ2 = circle.z2;\n          circle.z2 += 1;\n        };\n\n        var onNormal = function () {\n          graphic.setTextStyle(circle.style, labelModel, {\n            text: labelModel.get('show') ? normalText : null,\n            textPosition: labelModel.getShallow('position') || 'bottom'\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          });\n\n          if (circle.__mapOriginalZ2 != null) {\n            circle.z2 = circle.__mapOriginalZ2;\n            circle.__mapOriginalZ2 = null;\n          }\n        };\n\n        polygonGroups.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n        onNormal();\n      }\n\n      group.add(circle);\n    });\n  }\n});\n\nmodule.exports = _default;","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;","var PointerPath = require(\"./PointerPath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get('value', idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get('value', newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle.normal').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get('value', idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('itemStyle.emphasis').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get('value', 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: seriesModel.getData().getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var value = seriesModel.getData().get('value', 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./lines/LinesSeries\");\n\nrequire(\"./lines/LinesView\");\n\nvar linesLayout = require(\"./lines/linesLayout\");\n\nvar linesVisual = require(\"./lines/linesVisual\");\n\necharts.registerLayout(linesLayout);\necharts.registerVisual(linesVisual);","// Fix for 钓鱼岛\n// var Region = require('../Region');\n// var zrUtil = require('zrender/src/core/util');\n// var geoCoord = [126, 25];\nvar points = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    for (var i = 0, len = geo.regions.length; i < len; ++i) {\n      if (geo.regions[i].name === '台湾') {\n        geo.regions[i].geometries.push({\n          type: 'polygon',\n          exterior: points[0]\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;","var env = require(\"../core/env\");\n\nvar _vector = require(\"../core/vector\");\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar colorTool = require(\"../tool/color\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar RectText = require(\"../graphic/mixin/RectText\");\n\nvar Displayable = require(\"../graphic/Displayable\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar Text = require(\"../graphic/Text\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar Gradient = require(\"../graphic/Gradient\");\n\nvar vmlCore = require(\"./core\");\n\n// http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function (el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function (s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function (r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function (parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function (parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function (zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function (value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function (el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function (color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function (el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function (el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function (path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function (img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function (fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$override('measureText', function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function (vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function (vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}","var polygonContain = require(\"zrender/lib/contain/polygon\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      var points = area.range;\n\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || lineIntersectPolygon(x, y, x + width, y, points) || lineIntersectPolygon(x, y, x, y + height, points) || lineIntersectPolygon(x + width, y, x + width, y + height, points) || lineIntersectPolygon(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\n\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\n\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\n\nfunction lineIntersectPolygon(lx, ly, l2x, l2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineIntersect(lx, ly, l2x, l2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n} // Code from <http://blog.csdn.net/rickliuxiao/article/details/6259322> with some fix.\n// See <https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection>\n\n\nfunction lineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  var delta = determinant(a2x - a1x, b1x - b2x, a2y - a1y, b1y - b2y);\n\n  if (nearZero(delta)) {\n    // parallel\n    return false;\n  }\n\n  var namenda = determinant(b1x - a1x, b1x - b2x, b1y - a1y, b1y - b2y) / delta;\n\n  if (namenda < 0 || namenda > 1) {\n    return false;\n  }\n\n  var miu = determinant(a2x - a1x, b1x - a1x, a2y - a1y, b1y - a1y) / delta;\n\n  if (miu < 0 || miu > 1) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nfunction determinant(v1, v2, v3, v4) {\n  return v1 * v4 - v2 * v3;\n}\n\nvar _default = selector;\nmodule.exports = _default;","var MarkerModel = require(\"./MarkerModel\");\n\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      normal: {\n        show: true,\n        position: 'inside'\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 2\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require('echarts/lib/echarts');\n\nrequire('./liquidFillSeries');\nrequire('./liquidFillView');\n\n\necharts.registerVisual(\n    echarts.util.curry(\n        require('echarts/lib/visual/dataColor'), 'liquidFill'\n    )\n);\n","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\nfunction AngleAxis(scale, angleExtent) {\n  angleExtent = angleExtent || [0, 360];\n  Axis.call(this, 'angle', scale, angleExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nAngleAxis.prototype = {\n  constructor: AngleAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToAngle: Axis.prototype.dataToCoord,\n  angleToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(AngleAxis, Axis);\nvar _default = AngleAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\n    var axis = this.getAxis(dim);\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.grid.getRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'cartesian2d',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: zrUtil.bind(coordSys.dataToPoint, coordSys),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/PictorialBarSeries\");\n\nrequire(\"./bar/PictorialBarView\");\n\nvar barLayoutGrid = require(\"../layout/barGrid\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(barLayoutGrid, 'pictorialBar'));\necharts.registerVisual(zrUtil.curry(visualSymbol, 'pictorialBar', 'roundRect', null));","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\necharts.registerVisual(echarts.PRIORITY.VISUAL.COMPONENT, function (ecModel) {\n  ecModel.eachComponent('visualMap', function (visualMapModel) {\n    processSingleVisualMap(visualMapModel, ecModel);\n  });\n  prepareVisualMeta(ecModel);\n});\n\nfunction processSingleVisualMap(visualMapModel, ecModel) {\n  visualMapModel.eachTargetSeries(function (seriesModel) {\n    var data = seriesModel.getData();\n    visualSolution.applyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, data, visualMapModel.getValueState, visualMapModel, visualMapModel.getDataDimension(data));\n  });\n} // Only support color.\n\n\nfunction prepareVisualMeta(ecModel) {\n  ecModel.eachSeries(function (seriesModel) {\n    var data = seriesModel.getData();\n    var visualMetaList = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (visualMapModel.isTargetSeries(seriesModel)) {\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\n          stops: [],\n          outerColors: []\n        };\n        visualMeta.dimension = visualMapModel.getDataDimension(data);\n        visualMetaList.push(visualMeta);\n      }\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\n  });\n} // FIXME\n// performance and export for heatmap?\n// value can be Infinity or -Infinity\n\n\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\n  var mappings = visualMapModel.targetVisuals[valueState];\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n  var resultVisual = {\n    color: seriesModel.getData().getVisual('color') // default color.\n\n  };\n\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\n    var type = visualTypes[i];\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\n  }\n\n  return resultVisual.color;\n\n  function getVisual(key) {\n    return resultVisual[key];\n  }\n\n  function setVisual(key, value) {\n    resultVisual[key] = value;\n  }\n}","var opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('parallel', function (seriesModel) {\n    var itemStyleModel = seriesModel.getModel('itemStyle.normal');\n    var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n    var globalColors = ecModel.get('color');\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\n    var activeOpacity = seriesModel.get('activeOpacity');\n    var lineStyle = seriesModel.getModel('lineStyle.normal').getLineStyle();\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var opacityMap = {\n      normal: lineStyle.opacity,\n      active: activeOpacity,\n      inactive: inactiveOpacity\n    };\n    coordSys.eachActiveState(data, function (activeState, dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var opacity = opacityMap[activeState];\n\n      if (activeState === 'normal') {\n        var itemOpacity = itemModel.get(opacityAccessPath, true);\n        itemOpacity != null && (opacity = itemOpacity);\n      }\n\n      data.setItemVisual(dataIndex, 'opacity', opacity);\n    });\n    data.setVisual('color', color);\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\necharts.extendChartView({\n  type: 'scatter',\n  init: function () {\n    this._normalSymbolDraw = new SymbolDraw();\n    this._largeSymbolDraw = new LargeSymbolDraw();\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var largeSymbolDraw = this._largeSymbolDraw;\n    var normalSymbolDraw = this._normalSymbolDraw;\n    var group = this.group;\n    var symbolDraw = seriesModel.get('large') && data.count() > seriesModel.get('largeThreshold') ? largeSymbolDraw : normalSymbolDraw;\n    this._symbolDraw = symbolDraw;\n    symbolDraw.updateData(data);\n    group.add(symbolDraw.group);\n    group.remove(symbolDraw === largeSymbolDraw ? normalSymbolDraw.group : largeSymbolDraw.group);\n  },\n  updateLayout: function (seriesModel) {\n    this._symbolDraw.updateLayout(seriesModel);\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api, true);\n  },\n  dispose: function () {}\n});","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","var _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","var completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar nest = require(\"../../util/array/nest\");\n\n/**\n * @file  Define the themeRiver view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n\n  /**\n   * @override\n   */\n  init: function (option) {\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function (data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var dataByName = nest().key(function (dataItem) {\n      return dataItem[2];\n    }).entries(data); // data group in each layer\n\n    var layData = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        dataList: d.values\n      };\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function (option, ecModel) {\n    var dimensions = [];\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type');\n    dimensions = [{\n      name: 'time',\n      // FIXME common?\n      type: axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float'\n    }, {\n      name: 'value',\n      type: 'float'\n    }, {\n      name: 'name',\n      type: 'ordinal'\n    }]; // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    });\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    dimensions = completeDimensions(dimensions, data);\n    var list = new List(dimensions, this);\n    list.initData(data, nameList);\n    return list;\n  },\n\n  /**\n   * Used by single coordinate\n   *\n   * @param {string} axisDim  the dimension for single coordinate\n   * @return {Array.<string> } specified dimensions on the axis.\n   */\n  coordDimToDataDim: function (axisDim) {\n    return ['time'];\n  },\n\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function () {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    } // data group by name\n\n\n    var dataByName = nest().key(function (index) {\n      return data.get('name', index);\n    }).entries(indexArr);\n    var layerSeries = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        indices: d.values\n      };\n    });\n\n    for (var j = 0; j < layerSeries.length; ++j) {\n      layerSeries[j].indices.sort(comparer);\n    }\n\n    function comparer(index1, index2) {\n      return data.get('time', index1) - data.get('time', index2);\n    }\n\n    return layerSeries;\n  },\n\n  /**\n   * Get data indices for show tooltip content\n   *\n   * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function (dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var htmlName = data.get('name', dataIndex);\n    var htmlValue = data.get('value', dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      normal: {\n        margin: 4,\n        textAlign: 'right',\n        show: true,\n        position: 'left',\n        color: '#000',\n        fontSize: 11\n      },\n      emphasis: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar EffectLine = require(\"../helper/EffectLine\");\n\nvar Line = require(\"../helper/Line\");\n\nvar Polyline = require(\"../helper/Polyline\");\n\nvar EffectPolyline = require(\"../helper/EffectPolyline\");\n\nvar LargeLineDraw = require(\"../helper/LargeLineDraw\");\n\nvar _default = echarts.extendChartView({\n  type: 'lines',\n  init: function () {},\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var lineDraw = this._lineDraw;\n    var hasEffect = seriesModel.get('effect.show');\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.get('large') && data.count() >= seriesModel.get('largeThreshold');\n\n    if (hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLarge !== this._isLarge) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLarge ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLarge = isLarge;\n    }\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get('effect.trailLength');\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (hasEffect && trailLength) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      }\n    }\n\n    this.group.add(lineDraw.group);\n    lineDraw.updateData(data);\n    this._lastZlevel = zlevel;\n  },\n  updateLayout: function (seriesModel, ecModel, api) {\n    this._lineDraw.updateLayout(seriesModel); // Not use motion when dragging or zooming\n\n\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  remove: function (ecModel, api) {\n    this._lineDraw && this._lineDraw.remove(api, true); // Clear motion when lineDraw is removed\n\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\n\nfunction _default(option, isNew) {\n  var brushComponents = option && option.brush;\n\n  if (!zrUtil.isArray(brushComponents)) {\n    brushComponents = brushComponents ? [brushComponents] : [];\n  }\n\n  if (!brushComponents.length) {\n    return;\n  }\n\n  var brushComponentSpecifiedBtns = [];\n  zrUtil.each(brushComponents, function (brushOpt) {\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\n\n    if (tbs instanceof Array) {\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\n    }\n  });\n  var toolbox = option && option.toolbox;\n\n  if (zrUtil.isArray(toolbox)) {\n    toolbox = toolbox[0];\n  }\n\n  if (!toolbox) {\n    toolbox = {\n      feature: {}\n    };\n    option.toolbox = [toolbox];\n  }\n\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\n  removeDuplicate(brushTypes);\n\n  if (isNew && !brushTypes.length) {\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\n  }\n}\n\nfunction removeDuplicate(arr) {\n  var map = {};\n  zrUtil.each(arr, function (val) {\n    map[val] = 1;\n  });\n  arr.length = 0;\n  zrUtil.each(map, function (flag, val) {\n    arr.push(val);\n  });\n}\n\nmodule.exports = _default;","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar brushHelper = require(\"../helper/brushHelper\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\nvar AxisView = echarts.extendComponentView({\n  type: 'parallelAxis',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    AxisView.superApply(this, 'init', arguments);\n    /**\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  },\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    var animationModel = payload && payload.animation === false ? null : axisModel;\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\n  },\n\n  /**\n   * @override\n   */\n  updateVisual: function (axisModel, ecModel, api, payload) {\n    this._brushController && this._brushController.updateCovers(getCoverInfoList(axisModel));\n  },\n  _refreshBrushController: function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      position: builderOpt.position\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  },\n  _onBrush: function (coverInfoList, opt) {\n    // Do not cache these object, because the mey be changed.\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  }\n});\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nvar _default = AxisView;\nmodule.exports = _default;","require(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar zrLog = require(\"../../core/log\");\n\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction GradientManager(svgRoot) {\n  Definable.call(this, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\n\nfunction _default(option) {\n  var visualMap = option && option.visualMap;\n\n  if (!zrUtil.isArray(visualMap)) {\n    visualMap = visualMap ? [visualMap] : [];\n  }\n\n  each(visualMap, function (opt) {\n    if (!opt) {\n      return;\n    } // rename splitList to pieces\n\n\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n      opt.pieces = opt.splitList;\n      delete opt.splitList;\n    }\n\n    var pieces = opt.pieces;\n\n    if (pieces && zrUtil.isArray(pieces)) {\n      each(pieces, function (piece) {\n        if (zrUtil.isObject(piece)) {\n          if (has(piece, 'start') && !has(piece, 'min')) {\n            piece.min = piece.start;\n          }\n\n          if (has(piece, 'end') && !has(piece, 'max')) {\n            piece.max = piece.end;\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction has(obj, name) {\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar helper = require(\"./helper\");\n\nvar Breadcrumb = require(\"./Breadcrumb\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar animationUtil = require(\"../../util/animation\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label', 'normal'];\nvar PATH_LABEL_EMPHASIS = ['label', 'emphasis'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel', 'normal'];\nvar PATH_UPPERLABEL_EMPHASIS = ['upperLabel', 'emphasis'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function (o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var targetInfo = helper.retrieveTargetInfo(payload, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function (containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0\n            } // Others.\n\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (dx, dy) {\n    if (this._state !== 'animating' && (Math.abs(dx) > DRAG_THRESHOLD || Math.abs(dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + dx,\n          y: rootLayout.y + dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (scale, mouseX, mouseY) {\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [scale, scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function (containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && window.open(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function (seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function () {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle.normal');\n  var itemStyleEmphasisModel = thisNode.getModel('itemStyle.emphasis'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperHeight); // No children, render content.\n\n  if (!isParent) {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n    var visualBorderColor = thisNode.getVisual('borderColor', true);\n    var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n    updateStyle(bg, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          normalStyle.text = emphasisStyle.text = null;\n        }\n\n      bg.setStyle(normalStyle);\n      graphic.setHoverStyle(bg, emphasisStyle);\n    });\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n    var visualColor = thisNode.getVisual('color', true);\n    updateStyle(content, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setHoverStyle(content, emphasisStyle);\n    });\n    group.add(content);\n  }\n\n  function updateStyle(element, cb) {\n    if (!thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      cb();\n\n      if (!element.__tmWillVisible) {\n        element.invisible = false;\n      }\n    } else {\n      // Delay invisible setting utill animation finished,\n      // avoid element vanish suddenly before animation.\n      !element.invisible && willInvisibleEls.push(element);\n    }\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var nodeModel = thisNode.getModel();\n    var text = zrUtil.retrieve(seriesModel.getFormattedLabel(thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'), nodeModel.get('name'));\n\n    if (!upperLabelRect && thisLayout.isLeafRoot) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      text = iconChar ? iconChar + ' ' + text : text;\n    }\n\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? text : null,\n      autoColor: visualColor,\n      isRectText: true\n    });\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor({\n          z: calculateZ(depth, z)\n        });\n        element.__tmDepth = depth;\n        element.__tmStorageName = storageName;\n        prepareAnimationWhenNoOld(lasts, element, storageName);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'splitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n}\n\nvar _default = AxisView.extend({\n  type: 'angleAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n\n    if (angleAxis.type !== 'category') {\n      // Remove the last tick which will overlap the first tick\n      ticksAngles.pop();\n    }\n\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        this['_' + name](angleAxisModel, polar, ticksAngles, radiusExtent);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _axisLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle');\n    var circle = new graphic.Circle({\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: radiusExtent[getRadiusIdx(polar)]\n      },\n      style: lineStyleModel.getLineStyle(),\n      z2: 1,\n      silent: true\n    });\n    circle.style.fill = null;\n    this.group.add(circle);\n  },\n\n  /**\n   * @private\n   */\n  _axisTick: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngle) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngle)\n      });\n    });\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      })\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _axisLabel: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var axis = angleAxisModel.axis;\n    var categoryData = angleAxisModel.get('data');\n    var labelModel = angleAxisModel.getModel('axisLabel');\n    var labels = angleAxisModel.getFormattedLabels();\n    var labelMargin = labelModel.get('margin');\n    var labelsAngles = axis.getLabelsCoords(); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelsAngles[i]]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (categoryData && categoryData[i] && categoryData[i].textStyle) {\n        labelModel = new Model(categoryData[i].textStyle, labelModel, labelModel.ecModel);\n      }\n\n      var textEl = new graphic.Text({\n        silent: true\n      });\n      this.group.add(textEl);\n      graphic.setTextStyle(textEl.style, labelModel, {\n        x: p[0],\n        y: p[1],\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\n        text: labels[i],\n        textAlign: labelTextAlign,\n        textVerticalAlign: labelTextVerticalAlign\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i])\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0] * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -ticksAngles[i] * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -ticksAngles[i] * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n\nmodule.exports = _default;","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\nvar _parseGeoJson = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;","var echarts = require(\"../../echarts\");\n\n/**\n * payload: {\n *      brushIndex: number, or,\n *      brushId: string, or,\n *      brushName: string,\n *      globalRanges: Array\n * }\n */\necharts.registerAction({\n  type: 'brush',\n  event: 'brush',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush',\n    query: payload\n  }, function (brushModel) {\n    brushModel.setAreas(payload.areas);\n  });\n});\n/**\n * payload: {\n *      brushComponents: [\n *          {\n *              brushId,\n *              brushIndex,\n *              brushName,\n *              series: [\n *                  {\n *                      seriesId,\n *                      seriesIndex,\n *                      seriesName,\n *                      rawIndices: [21, 34, ...]\n *                  },\n *                  ...\n *              ]\n *          },\n *          ...\n *      ]\n * }\n */\n\necharts.registerAction({\n  type: 'brushSelect',\n  event: 'brushSelected',\n  update: 'none'\n}, function () {});","var textContain = require(\"zrender/lib/contain/text\");\n\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label.normal'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n    var labelLineModel = itemModel.getModel('labelLine.normal');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('visualMap', function (option) {\n  // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n  return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar singleAxisHelper = require(\"./singleAxisHelper\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar getInterval = AxisBuilder.getInterval;\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttr = 'splitLine';\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(axisBuilder.getGroup());\n\n    if (axisModel.get(selfBuilderAttr + '.show')) {\n      this['_' + selfBuilderAttr](axisModel, layout.labelInterval);\n    }\n\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  _splitLine: function (axisModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var p1 = [];\n    var p2 = [];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line(graphic.subPixelOptimizeLine({\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      })));\n    }\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\nvar CandlestickSeries = SeriesModel.extend({\n  type: 'series.candlestick',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n\n  /**\n   * @readOnly\n   */\n  defaultValueDimensions: ['open', 'close', 'lowest', 'highest'],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    itemStyle: {\n      normal: {\n        color: '#c23531',\n        // 阳线 positive\n        color0: '#314656',\n        // 阴线 negative     '#c23531', '#314656'\n        borderWidth: 1,\n        // FIXME\n        // ec2中使用的是lineStyle.color 和 lineStyle.color0\n        borderColor: '#c23531',\n        borderColor0: '#314656'\n      },\n      emphasis: {\n        borderWidth: 2\n      }\n    },\n    barMaxWidth: null,\n    barMinWidth: null,\n    barWidth: null,\n    animationUpdate: false,\n    animationEasing: 'linear',\n    animationDuration: 300\n  },\n\n  /**\n   * Get dimension for shadow in dataZoom\n   * @return {string} dimension name\n   */\n  getShadowDim: function () {\n    return 'open';\n  },\n  brushSelector: function (dataIndex, data, selectors) {\n    var itemLayout = data.getItemLayout(dataIndex);\n    return selectors.rect(itemLayout.brushRect);\n  }\n});\nzrUtil.mixin(CandlestickSeries, seriesModelMixin, true);\nvar _default = CandlestickSeries;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(zrUtil.curry(dataColor, 'pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'pie'));","var echarts = require('echarts/lib/echarts');\n\nfunction getShallow(model, path) {\n    return model && model.getShallow(path);\n}\n\necharts.extendChartView({\n\n    type: 'wordCloud',\n\n    render: function (seriesModel, ecModel, api) {\n        var group = this.group;\n        group.removeAll();\n\n        var data = seriesModel.getData();\n\n        var gridSize = seriesModel.get('gridSize');\n\n        seriesModel.layoutInstance.ondraw = function (text, size, dataIdx, drawn) {\n            var itemModel = data.getItemModel(dataIdx);\n            var textStyleModel = itemModel.getModel('textStyle.normal');\n            var emphasisTextStyleModel = itemModel.getModel('textStyle.emphasis');\n\n            var textEl = new echarts.graphic.Text({\n                style: echarts.graphic.setTextStyle({}, textStyleModel, {\n                    x: drawn.info.fillTextOffsetX,\n                    y: drawn.info.fillTextOffsetY + size * 0.5,\n                    text: text,\n                    textBaseline: 'middle',\n                    textFill: data.getItemVisual(dataIdx, 'color'),\n                    fontSize: size\n                }),\n                scale: [1 / drawn.info.mu, 1 / drawn.info.mu],\n                position: [\n                    (drawn.gx + drawn.info.gw / 2) * gridSize,\n                    (drawn.gy + drawn.info.gh / 2) * gridSize\n                ],\n                rotation: drawn.rot\n            });\n\n            group.add(textEl);\n\n            data.setItemGraphicEl(dataIdx, textEl);\n\n            echarts.graphic.setHoverStyle(\n                textEl,\n                echarts.graphic.setTextStyle({}, emphasisTextStyleModel, null, {forMerge: true}, true)\n            );\n        };\n\n        this._model = seriesModel;\n    },\n\n    remove: function () {\n        this.group.removeAll();\n\n        this._model.layoutInstance.dispose();\n    },\n\n    dispose: function () {\n        this._model.layoutInstance.dispose();\n    }\n});\n","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar _default = echarts.extendComponentView({\n  type: 'brush',\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/brush/BrushModel}\n     */\n\n    this.model;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  },\n\n  /**\n   * @override\n   */\n  render: function (brushModel) {\n    this.model = brushModel;\n    return updateController.apply(this, arguments);\n  },\n\n  /**\n   * @override\n   */\n  updateView: updateController,\n\n  /**\n   * @override\n   */\n  updateLayout: updateController,\n\n  /**\n   * @override\n   */\n  updateVisual: updateController,\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  },\n\n  /**\n   * @private\n   */\n  _onBrush: function (areas, opt) {\n    var modelId = this.model.id;\n    this.model.brushTargetManager.setOutputRanges(areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\n    // emits the same params with the last drag move event, and\n    // may have some delay when using touch pad, which makes\n    // animation not smooth (when using debounce).\n\n    (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\n      type: 'brush',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n  }\n});\n\nfunction updateController(brushModel, ecModel, api, payload) {\n  // Do not update controller when drawing.\n  (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\n}\n\nmodule.exports = _default;","require(\"../coord/parallel/parallelCreator\");\n\nrequire(\"./axis/parallelAxisAction\");\n\nrequire(\"./axis/ParallelAxisView\");","var IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'singleAxis',\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/single/SingleAxis}\n   */\n  axis: null,\n\n  /**\n   * @type {module:echarts/coord/single/Single}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this;\n  }\n});\nvar defaultOption = {\n  left: '5%',\n  top: '5%',\n  right: '5%',\n  bottom: '5%',\n  type: 'value',\n  position: 'bottom',\n  orient: 'horizontal',\n  axisLine: {\n    show: true,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    }\n  },\n  // Single coordinate system and single axis is the,\n  // which is used as the parent tooltip model.\n  // same model, so we set default tooltip show as true.\n  tooltip: {\n    show: true\n  },\n  axisTick: {\n    show: true,\n    length: 6,\n    lineStyle: {\n      width: 2\n    }\n  },\n  axisLabel: {\n    show: true,\n    interval: 'auto'\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      type: 'dashed',\n      opacity: 0.2\n    }\n  }\n};\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\naxisModelCreator('single', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var _model = require(\"../../util/model\");\n\nvar otherDimToDataDim = _model.otherDimToDataDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction findLabelValueDim(data) {\n  var valueDim;\n  var labelDims = otherDimToDataDim(data, 'label');\n\n  if (labelDims.length) {\n    valueDim = labelDims[0];\n  } else {\n    // Get last value dim\n    var dimensions = data.dimensions.slice();\n    var dataType;\n\n    while (dimensions.length && (valueDim = dimensions.pop(), dataType = data.getDimensionInfo(valueDim).type, dataType === 'ordinal' || dataType === 'time')) {} // jshint ignore:line\n\n  }\n\n  return valueDim;\n}\n\nexports.findLabelValueDim = findLabelValueDim;","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar Group = _graphic.Group;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar SymbolClz = require(\"./Symbol\");\n\n/**\n * Symbol with ripple effect\n * @module echarts/chart/helper/EffectSymbol\n */\nvar EFFECT_RIPPLE_NUMBER = 3;\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nfunction updateRipplePath(rippleGroup, effectCfg) {\n  rippleGroup.eachChild(function (ripplePath) {\n    ripplePath.attr({\n      z: effectCfg.z,\n      zlevel: effectCfg.zlevel,\n      style: {\n        stroke: effectCfg.brushType === 'stroke' ? effectCfg.color : null,\n        fill: effectCfg.brushType === 'fill' ? effectCfg.color : null\n      }\n    });\n  });\n}\n/**\n * @constructor\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction EffectSymbol(data, idx) {\n  Group.call(this);\n  var symbol = new SymbolClz(data, idx);\n  var rippleGroup = new Group();\n  this.add(symbol);\n  this.add(rippleGroup);\n\n  rippleGroup.beforeUpdate = function () {\n    this.attr(symbol.getScale());\n  };\n\n  this.updateData(data, idx);\n}\n\nvar effectSymbolProto = EffectSymbol.prototype;\n\neffectSymbolProto.stopEffectAnimation = function () {\n  this.childAt(1).removeAll();\n};\n\neffectSymbolProto.startEffectAnimation = function (effectCfg) {\n  var symbolType = effectCfg.symbolType;\n  var color = effectCfg.color;\n  var rippleGroup = this.childAt(1);\n\n  for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\n    // var ripplePath = createSymbol(\n    //     symbolType, -0.5, -0.5, 1, 1, color\n    // );\n    // If width/height are set too small (e.g., set to 1) on ios10\n    // and macOS Sierra, a circle stroke become a rect, no matter what\n    // the scale is set. So we set width/height as 2. See #4136.\n    var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\n    ripplePath.attr({\n      style: {\n        strokeNoScale: true\n      },\n      z2: 99,\n      silent: true,\n      scale: [0.5, 0.5]\n    });\n    var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset; // TODO Configurable effectCfg.period\n\n    ripplePath.animate('', true).when(effectCfg.period, {\n      scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\n    }).delay(delay).start();\n    ripplePath.animateStyle(true).when(effectCfg.period, {\n      opacity: 0\n    }).delay(delay).start();\n    rippleGroup.add(ripplePath);\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Update effect symbol\n */\n\n\neffectSymbolProto.updateEffectAnimation = function (effectCfg) {\n  var oldEffectCfg = this._effectCfg;\n  var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\n\n  var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\n\n  for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\n    var propName = DIFFICULT_PROPS[i];\n\n    if (oldEffectCfg[propName] !== effectCfg[propName]) {\n      this.stopEffectAnimation();\n      this.startEffectAnimation(effectCfg);\n      return;\n    }\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Highlight symbol\n */\n\n\neffectSymbolProto.highlight = function () {\n  this.trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\neffectSymbolProto.downplay = function () {\n  this.trigger('normal');\n};\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\neffectSymbolProto.updateData = function (data, idx) {\n  var seriesModel = data.hostModel;\n  this.childAt(0).updateData(data, idx);\n  var rippleGroup = this.childAt(1);\n  var itemModel = data.getItemModel(idx);\n  var symbolType = data.getItemVisual(idx, 'symbol');\n  var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n  var color = data.getItemVisual(idx, 'color');\n  rippleGroup.attr('scale', symbolSize);\n  rippleGroup.traverse(function (ripplePath) {\n    ripplePath.attr({\n      fill: color\n    });\n  });\n  var symbolOffset = itemModel.getShallow('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = rippleGroup.position;\n    pos[0] = parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] = parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  rippleGroup.rotation = (itemModel.getShallow('symbolRotate') || 0) * Math.PI / 180 || 0;\n  var effectCfg = {};\n  effectCfg.showEffectOn = seriesModel.get('showEffectOn');\n  effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\n  effectCfg.brushType = itemModel.get('rippleEffect.brushType');\n  effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\n  effectCfg.effectOffset = idx / data.count();\n  effectCfg.z = itemModel.getShallow('z') || 0;\n  effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\n  effectCfg.symbolType = symbolType;\n  effectCfg.color = color;\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (effectCfg.showEffectOn === 'render') {\n    this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\n    this._effectCfg = effectCfg;\n  } else {\n    // Not keep old effect config\n    this._effectCfg = null;\n    this.stopEffectAnimation();\n    var symbol = this.childAt(0);\n\n    var onEmphasis = function () {\n      symbol.highlight();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.startEffectAnimation(effectCfg);\n      }\n    };\n\n    var onNormal = function () {\n      symbol.downplay();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.stopEffectAnimation();\n      }\n    };\n\n    this.on('mouseover', onEmphasis, this).on('mouseout', onNormal, this).on('emphasis', onEmphasis, this).on('normal', onNormal, this);\n  }\n\n  this._effectCfg = effectCfg;\n};\n\neffectSymbolProto.fadeOut = function (cb) {\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  cb && cb();\n};\n\nzrUtil.inherits(EffectSymbol, Group);\nvar _default = EffectSymbol;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n// TODO Batch by color\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null,\n    sizes: null\n  },\n  symbolProxy: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var sizes = shape.sizes;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (isNaN(pt[0]) || isNaN(pt[1])) {\n        continue;\n      }\n\n      var size = sizes[i];\n\n      if (size[0] < 4) {\n        // Optimize for small symbol\n        path.rect(pt[0] - size[0] / 2, pt[1] - size[1] / 2, size[0], size[1]);\n      } else {\n        symbolProxyShape.x = pt[0] - size[0] / 2;\n        symbolProxyShape.y = pt[1] - size[1] / 2;\n        symbolProxyShape.width = size[0];\n        symbolProxyShape.height = size[1];\n        symbolProxy.buildPath(path, symbolProxyShape, true);\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var points = shape.points;\n    var sizes = shape.sizes; // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var i = points.length - 1; i >= 0; i--) {\n      var pt = points[i];\n      var size = sizes[i];\n      var x0 = pt[0] - size[0] / 2;\n      var y0 = pt[1] - size[1] / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + size[0] && y <= y0 + size[1]) {\n        // i is dataIndex\n        return i;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n  this._symbolEl = new LargeSymbolPath({// rectHover: true,\n    // cursor: 'default'\n  });\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nlargeSymbolProto.updateData = function (data) {\n  this.group.removeAll();\n  var symbolEl = this._symbolEl;\n  var seriesModel = data.hostModel;\n  symbolEl.setShape({\n    points: data.mapArray(data.getItemLayout),\n    sizes: data.mapArray(function (idx) {\n      var size = data.getItemVisual(idx, 'symbolSize');\n\n      if (!(size instanceof Array)) {\n        size = [size, size];\n      }\n\n      return size;\n    })\n  }); // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  symbolEl.useStyle(seriesModel.getModel('itemStyle.normal').getItemStyle(['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  } // Enable tooltip\n  // PENDING May have performance issue when path is extremely large\n\n\n  symbolEl.seriesIndex = seriesModel.seriesIndex;\n  symbolEl.on('mousemove', function (e) {\n    symbolEl.dataIndex = null;\n    var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n    if (dataIndex >= 0) {\n      // Provide dataIndex for tooltip\n      symbolEl.dataIndex = dataIndex;\n    }\n  }); // Add back\n\n  this.group.add(symbolEl);\n};\n\nlargeSymbolProto.updateLayout = function (seriesModel) {\n  var data = seriesModel.getData();\n\n  this._symbolEl.setShape({\n    points: data.mapArray(data.getItemLayout)\n  });\n};\n\nlargeSymbolProto.remove = function () {\n  this.group.removeAll();\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.scatter',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10,\n    // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // cursor: null,\n    // label: {\n    // normal: {\n    // show: false\n    // distance: 5,\n    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\n    //           'inside'|'left'|'right'|'top'|'bottom'\n    // 默认使用全局文本样式，详见TEXTSTYLE\n    //     }\n    // },\n    itemStyle: {\n      normal: {\n        opacity: 0.8 // color: 各异\n\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;","var echarts = require('echarts/lib/echarts');\nvar numberUtil = echarts.number;\nvar symbolUtil = require('echarts/lib/util/symbol');\nvar parsePercent = numberUtil.parsePercent;\n\nvar LiquidLayout = require('./liquidFillLayout');\n\nfunction getShallow(model, path) {\n    return model && model.getShallow(path);\n}\n\necharts.extendChartView({\n\n    type: 'liquidFill',\n\n    render: function (seriesModel, ecModel, api) {\n        var group = this.group;\n        group.removeAll();\n\n        var data = seriesModel.getData();\n\n        var itemModel = data.getItemModel(0);\n\n        var center = itemModel.get('center');\n        var radius = itemModel.get('radius');\n\n        var width = api.getWidth();\n        var height = api.getHeight();\n        var size = Math.min(width, height);\n        // itemStyle\n        var outlineDistance = 0;\n        var outlineBorderWidth = 0;\n        var showOutline = seriesModel.get('outline.show');\n\n        if (showOutline) {\n            outlineDistance = seriesModel.get('outline.borderDistance');\n            outlineBorderWidth = parsePercent(\n                seriesModel.get('outline.itemStyle.borderWidth'), size\n            );\n        }\n\n        var cx = parsePercent(center[0], width);\n        var cy = parsePercent(center[1], height);\n\n        var outterRadius;\n        var innerRadius;\n        var paddingRadius;\n\n        var isFillContainer = false;\n\n        var symbol = seriesModel.get('shape');\n        if (symbol === 'container') {\n            // a shape that fully fills the container\n            isFillContainer = true;\n\n            outterRadius = [\n                width / 2,\n                height / 2\n            ];\n            innerRadius = [\n                outterRadius[0] - outlineBorderWidth / 2,\n                outterRadius[1] - outlineBorderWidth / 2\n            ];\n            paddingRadius = [\n                parsePercent(outlineDistance, width),\n                parsePercent(outlineDistance, height)\n            ];\n\n            radius = [\n                Math.max(innerRadius[0] - paddingRadius[0], 0),\n                Math.max(innerRadius[1] - paddingRadius[1], 0)\n            ];\n        }\n        else {\n            outterRadius = parsePercent(radius, size) / 2;\n            innerRadius = outterRadius - outlineBorderWidth / 2;\n            paddingRadius = parsePercent(outlineDistance, size);\n\n            radius = Math.max(innerRadius - paddingRadius, 0);\n        }\n\n        if (showOutline) {\n            var outline = getOutline();\n            outline.style.lineWidth = outlineBorderWidth;\n            group.add(getOutline());\n        }\n\n        var left = isFillContainer ? 0 : cx - radius;\n        var top = isFillContainer ? 0 : cy - radius;\n\n        var wavePath = null;\n\n        group.add(getBackground());\n\n        // each data item for a wave\n        var oldData = this._data;\n        var waves = [];\n        data.diff(oldData)\n            .add(function (idx) {\n                var wave = getWave(idx, false);\n\n                var waterLevel = wave.shape.waterLevel;\n                wave.shape.waterLevel = isFillContainer ? height / 2 : radius;\n                echarts.graphic.initProps(wave, {\n                    shape: {\n                        waterLevel: waterLevel\n                    }\n                }, seriesModel);\n\n                wave.z2 = 2;\n                setWaveAnimation(idx, wave, null);\n\n                group.add(wave);\n                data.setItemGraphicEl(idx, wave);\n                waves.push(wave);\n            })\n            .update(function (newIdx, oldIdx) {\n                var waveElement = oldData.getItemGraphicEl(oldIdx);\n\n                // new wave is used to calculate position, but not added\n                var newWave = getWave(newIdx, false, waveElement);\n\n                // changes with animation\n                var shape = {};\n                var shapeAttrs = ['amplitude', 'cx', 'cy', 'phase', 'radius', 'radiusY', 'waterLevel', 'waveLength'];\n                for (var i = 0; i < shapeAttrs.length; ++i) {\n                    var attr = shapeAttrs[i];\n                    if (newWave.shape.hasOwnProperty(attr)) {\n                        shape[attr] = newWave.shape[attr];\n                    }\n                }\n\n                var style = {};\n                var styleAttrs = ['fill', 'opacity', 'shadowBlur', 'shadowColor'];\n                for (var i = 0; i < styleAttrs.length; ++i) {\n                    var attr = styleAttrs[i];\n                    if (newWave.style.hasOwnProperty(attr)) {\n                        style[attr] = newWave.style[attr];\n                    }\n                }\n\n                if (isFillContainer) {\n                    shape.radiusY = height / 2;\n                }\n\n                // changes with animation\n                echarts.graphic.updateProps(waveElement, {\n                    shape: shape,\n                    style: style\n                }, seriesModel);\n\n                // instant changes\n                waveElement.position = newWave.position;\n                waveElement.setClipPath(newWave.clipPath);\n                waveElement.shape.inverse = newWave.inverse;\n\n                setWaveAnimation(newIdx, waveElement, waveElement);\n                group.add(waveElement);\n                data.setItemGraphicEl(newIdx, waveElement);\n                waves.push(waveElement);\n            })\n            .remove(function (idx) {\n                var wave = oldData.getItemGraphicEl(idx);\n                group.remove(wave);\n            })\n            .execute();\n\n        if (itemModel.get('label.show')) {\n            group.add(getText(waves));\n        }\n\n        this._data = data;\n\n        /**\n         * Get path for outline, background and clipping\n         *\n         * @param {number} r outter radius of shape\n         * @param {boolean|undefined} isForClipping if the shape is used\n         *                                          for clipping\n         */\n        function getPath(r, isForClipping) {\n            if (symbol) {\n                // customed symbol path\n                if (symbol.indexOf('path://') === 0) {\n                    var path = echarts.graphic.makePath(symbol.slice(7), {});\n                    var bouding = path.getBoundingRect();\n                    var w = bouding.width;\n                    var h = bouding.height;\n                    if (w > h) {\n                        h = r * 2 / w * h;\n                        w = r * 2;\n                    }\n                    else {\n                        w = r * 2 / h * w;\n                        h = r * 2;\n                    }\n\n                    var left = isForClipping ? 0 : cx - w / 2;\n                    var top = isForClipping ? 0 : cy - h / 2;\n                    path = echarts.graphic.makePath(\n                        symbol.slice(7),\n                        {},\n                        new echarts.graphic.BoundingRect(left, top, w, h)\n                    );\n                    if (isForClipping) {\n                        path.position = [-w / 2, -h / 2];\n                    }\n                    return path;\n                }\n                else if (isFillContainer) {\n                    // fully fill the container\n                    var x = isForClipping ? -r[0] : cx - r[0];\n                    var y = isForClipping ? -r[1] : cy - r[1];\n                    return symbolUtil.createSymbol(\n                        'rect', x, y, r[0] * 2, r[1] * 2\n                    );\n                }\n                else {\n                    var x = isForClipping ? -r : cx - r;\n                    var y = isForClipping ? -r : cy - r;\n                    if (symbol === 'pin') {\n                        y += r;\n                    }\n                    else if (symbol === 'arrow') {\n                        y -= r;\n                    }\n                    return symbolUtil.createSymbol(symbol, x, y, r * 2, r * 2);\n                }\n            }\n\n            return new echarts.graphic.Circle({\n                shape: {\n                    cx: isForClipping ? 0 : cx,\n                    cy: isForClipping ? 0 : cy,\n                    r: r\n                }\n            });\n        }\n        /**\n         * Create outline\n         */\n        function getOutline() {\n            var outlinePath = getPath(outterRadius);\n            outlinePath.style.fill = null;\n\n            outlinePath.setStyle(seriesModel.getModel('outline.itemStyle')\n                .getItemStyle());\n\n            return outlinePath;\n        }\n\n        /**\n         * Create background\n         */\n        function getBackground() {\n            // Seperate stroke and fill, so we can use stroke to cover the alias of clipping.\n            var strokePath = getPath(radius);\n            strokePath.setStyle(seriesModel.getModel('backgroundStyle')\n                .getItemStyle());\n            strokePath.style.fill = null;\n\n            // Stroke is front of wave\n            strokePath.z2 = 5;\n\n            var fillPath = getPath(radius);\n            fillPath.setStyle(seriesModel.getModel('backgroundStyle')\n                .getItemStyle());\n            fillPath.style.stroke = null;\n\n            var group = new echarts.graphic.Group();\n            group.add(strokePath);\n            group.add(fillPath);\n\n            return group;\n        }\n\n        /**\n         * wave shape\n         */\n        function getWave(idx, isInverse, oldWave) {\n            var radiusX = isFillContainer ? radius[0] : radius;\n            var radiusY = isFillContainer ? height / 2 : radius;\n            console.log(radiusY);\n\n            var itemModel = data.getItemModel(idx);\n            var itemStyleModel = itemModel.getModel('itemStyle');\n            var phase = itemModel.get('phase');\n            var amplitude = parsePercent(itemModel.get('amplitude'),\n                radiusY * 2);\n            var waveLength = parsePercent(itemModel.get('waveLength'),\n                radiusX * 2);\n\n            var value = data.get('value', idx);\n            var waterLevel = radiusY - value * radiusY * 2;\n            phase = oldWave ? oldWave.shape.phase\n                : (phase === 'auto' ? idx * Math.PI / 4 : phase);\n            var normalStyle = itemStyleModel.getItemStyle();\n            if (!normalStyle.fill) {\n                var seriesColor = seriesModel.get('color');\n                var id = idx % seriesColor.length;\n                normalStyle.fill = seriesColor[id];\n            }\n\n            var x = radiusX * 2;\n            var wave = new LiquidLayout({\n                shape: {\n                    waveLength: waveLength,\n                    radius: radiusX,\n                    radiusY: radiusY,\n                    cx: x,\n                    cy: 0,\n                    waterLevel: waterLevel,\n                    amplitude: amplitude,\n                    phase: phase,\n                    inverse: isInverse\n                },\n                style: normalStyle,\n                position: [cx, cy]\n            });\n            wave.shape._waterLevel = waterLevel;\n\n            var hoverStyle = itemModel.getModel('emphasis.itemStyle')\n                .getItemStyle();\n            hoverStyle.lineWidth = 0;\n            echarts.graphic.setHoverStyle(wave, hoverStyle);\n\n            // clip out the part outside the circle\n            var clip = getPath(radius, true);\n            // set fill for clipPath, otherwise it will not trigger hover event\n            clip.setStyle({\n                fill: 'white'\n            });\n            wave.setClipPath(clip);\n\n            return wave;\n        }\n\n        function setWaveAnimation(idx, wave, oldWave) {\n            var itemModel = data.getItemModel(idx);\n\n            var maxSpeed = itemModel.get('period');\n            var direction = itemModel.get('direction');\n\n            var value = data.get('value', idx);\n\n            var phase = itemModel.get('phase');\n            phase = oldWave ? oldWave.shape.phase\n                : (phase === 'auto' ? idx * Math.PI / 4 : phase);\n\n            var defaultSpeed = function (maxSpeed) {\n                var cnt = data.count();\n                return cnt === 0 ? maxSpeed : maxSpeed *\n                    (0.2 + (cnt - idx) / cnt * 0.8);\n            };\n            var speed = 0;\n            if (maxSpeed === 'auto') {\n                speed = defaultSpeed(5000);\n            }\n            else {\n                speed = typeof maxSpeed === 'function'\n                    ? maxSpeed(value, idx) : maxSpeed;\n            }\n\n            // phase for moving left/right\n            var phaseOffset = 0;\n            if (direction === 'right' || direction == null) {\n                phaseOffset = Math.PI;\n            }\n            else if (direction === 'left') {\n                phaseOffset = -Math.PI;\n            }\n            else if (direction === 'none') {\n                phaseOffset = 0;\n            }\n            else {\n                console.error('Illegal direction value for liquid fill.');\n            }\n\n            // wave animation of moving left/right\n            if (direction !== 'none' && itemModel.get('waveAnimation')) {\n                wave\n                    .animate('shape', true)\n                    .when(0, {\n                        phase: phase\n                    })\n                    .when(speed / 2, {\n                        phase: phaseOffset + phase\n                    })\n                    .when(speed, {\n                        phase: phaseOffset * 2 + phase\n                    })\n                    .during(function () {\n                        if (wavePath) {\n                            wavePath.dirty(true);\n                        }\n                    })\n                    .start();\n            }\n        }\n\n        /**\n         * text on wave\n         */\n        function getText(waves) {\n            var labelModel = itemModel.getModel('label');\n\n            function formatLabel() {\n                var formatted = seriesModel.getFormattedLabel(0, 'normal');\n                var defaultVal = (data.get('value', 0) * 100);\n                var defaultLabel = data.getName(0) || seriesModel.name;\n                if (!isNaN(defaultVal)) {\n                    defaultLabel = defaultVal.toFixed(0) + '%';\n                }\n                return formatted == null ? defaultLabel : formatted;\n            }\n\n            var textOption = {\n                z2: 10,\n                shape: {\n                    x: left,\n                    y: top,\n                    width: (isFillContainer ? radius[0] : radius) * 2,\n                    height: (isFillContainer ? radius[1] : radius) * 2\n                },\n                style: {\n                    fill: 'transparent',\n                    text: formatLabel(),\n                    textAlign: labelModel.get('align'),\n                    textVerticalAlign: labelModel.get('baseline')\n                },\n                silent: true\n            };\n\n            var outsideTextRect = new echarts.graphic.Rect(textOption);\n            var color = labelModel.get('color');\n            echarts.graphic.setText(outsideTextRect.style, labelModel, color);\n\n            var insideTextRect = new echarts.graphic.Rect(textOption);\n            var insColor = labelModel.get('insideColor');\n            echarts.graphic.setText(insideTextRect.style, labelModel, insColor);\n            insideTextRect.style.textFill = insColor;\n\n            var group = new echarts.graphic.Group();\n            group.add(outsideTextRect);\n            group.add(insideTextRect);\n\n            // clip out waves for insideText\n            var boundingCircle = getPath(radius, true);\n\n            wavePath = new echarts.graphic.CompoundPath({\n                shape: {\n                    paths: waves\n                },\n                position: [cx, cy]\n            });\n\n            wavePath.setClipPath(boundingCircle);\n            insideTextRect.setClipPath(wavePath);\n\n            return group;\n        }\n    },\n\n    dispose: function () {\n        // dispose nothing here\n    }\n});\n","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/**\n * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n * @param {module:echarts/ExtensionAPI} api\n * @param {Array.<number>} itemSize always [short, long]\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\n */\nfunction getItemAlign(visualMapModel, api, itemSize) {\n  var modelOption = visualMapModel.option;\n  var itemAlign = modelOption.align;\n\n  if (itemAlign != null && itemAlign !== 'auto') {\n    return itemAlign;\n  } // Auto decision align.\n\n\n  var ecSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n  var paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\n  var reals = paramsSet[realIndex];\n  var fakeValue = [0, null, 10];\n  var layoutInput = {};\n\n  for (var i = 0; i < 3; i++) {\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n  }\n\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\n}\n/**\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n * dataIndexInside means filtered index.\n */\n\n\nfunction convertDataIndex(batch) {\n  zrUtil.each(batch || [], function (batchItem) {\n    if (batch.dataIndex != null) {\n      batch.dataIndexInside = batch.dataIndex;\n      batch.dataIndex = null;\n    }\n  });\n  return batch;\n}\n\nexports.getItemAlign = getItemAlign;\nexports.convertDataIndex = convertDataIndex;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)), yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))];\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp), yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)];\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    } // Culculate data window and data extent, and record them.\n\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, this.getTargetSeriesModels());\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n\n\n    var otherAxisModel = this.getOtherAxisModel();\n\n    if (dataZoomModel.get('$fromToolbox') && otherAxisModel && otherAxisModel.get('type') === 'category') {\n      filterMode = 'empty';\n    } // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n      if (filterMode === 'weakFilter') {\n        seriesData && seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        seriesData && each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            seriesData.filterSelf(dim, isInWindow);\n          }\n        });\n      }\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n        var seriesExtent = seriesData.getDataExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;","var echarts = require('echarts/lib/echarts');\n\nmodule.exports = echarts.graphic.extendShape({\n    type: 'ec-liquid-fill',\n\n    shape: {\n        waveLength: 0,\n        radius: 0,\n        radiusY: 0,\n        cx: 0,\n        cy: 0,\n        waterLevel: 0,\n        amplitude: 0,\n        phase: 0,\n        inverse: false\n    },\n\n    buildPath: function (ctx, shape) {\n        if (shape.radiusY == null) {\n            shape.radiusY = shape.radius;\n        }\n\n        /**\n         * We define a sine wave having 4 waves, and make sure at least 8 curves\n         * is drawn. Otherwise, it may cause blank area for some waves when\n         * wave length is large enough.\n         */\n        var curves = Math.max(\n            Math.ceil(2 * shape.radius / shape.waveLength * 4) * 2,\n            8\n        );\n\n        // map phase to [-Math.PI * 2, 0]\n        while (shape.phase < -Math.PI * 2) {\n            shape.phase += Math.PI * 2;\n        }\n        while (shape.phase > 0) {\n            shape.phase -= Math.PI * 2;\n        }\n        var phase = shape.phase / Math.PI / 2 * shape.waveLength;\n\n        var left = shape.cx - shape.radius + phase - shape.radius * 2;\n\n        /**\n         * top-left corner as start point\n         *\n         * draws this point\n         *  |\n         * \\|/\n         *  ~~~~~~~~\n         *  |      |\n         *  +------+\n         */\n        ctx.moveTo(left, shape.waterLevel);\n\n        /**\n         * top wave\n         *\n         * ~~~~~~~~ <- draws this sine wave\n         * |      |\n         * +------+\n         */\n        var waveRight = 0;\n        for (var c = 0; c < curves; ++c) {\n            var stage = c % 4;\n            var pos = getWaterPositions(c * shape.waveLength / 4, stage,\n                shape.waveLength, shape.amplitude);\n            ctx.bezierCurveTo(pos[0][0] + left, -pos[0][1] + shape.waterLevel,\n                pos[1][0] + left, -pos[1][1] + shape.waterLevel,\n                pos[2][0] + left, -pos[2][1] + shape.waterLevel);\n\n            if (c === curves - 1) {\n                waveRight = pos[2][0];\n            }\n        }\n\n        if (shape.inverse) {\n            /**\n             * top-right corner\n             *                  2. draws this line\n             *                          |\n             *                       +------+\n             * 3. draws this line -> |      | <- 1. draws this line\n             *                       ~~~~~~~~\n             */\n            ctx.lineTo(waveRight + left, shape.cy - shape.radiusY);\n            ctx.lineTo(left, shape.cy - shape.radiusY);\n            ctx.lineTo(left, shape.waterLevel);\n        }\n        else {\n            /**\n             * top-right corner\n             *\n             *                       ~~~~~~~~\n             * 3. draws this line -> |      | <- 1. draws this line\n             *                       +------+\n             *                          ^\n             *                          |\n             *                  2. draws this line\n             */\n            ctx.lineTo(waveRight + left, shape.cy + shape.radiusY);\n            ctx.lineTo(left, shape.cy + shape.radiusY);\n            ctx.lineTo(left, shape.waterLevel);\n        }\n\n        ctx.closePath();\n    }\n});\n\n\n\n/**\n * Using Bezier curves to fit sine wave.\n * There is 4 control points for each curve of wave,\n * which is at 1/4 wave length of the sine wave.\n *\n * The control points for a wave from (a) to (d) are a-b-c-d:\n *          c *----* d\n *     b *\n *       |\n * ... a * ..................\n *\n * whose positions are a: (0, 0), b: (0.5, 0.5), c: (1, 1), d: (PI / 2, 1)\n *\n * @param {number} x          x position of the left-most point (a)\n * @param {number} stage      0-3, stating which part of the wave it is\n * @param {number} waveLength wave length of the sine wave\n * @param {number} amplitude  wave amplitude\n */\nfunction getWaterPositions(x, stage, waveLength, amplitude) {\n    if (stage === 0) {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2, amplitude / 2],\n            [x + 1 / 2 * waveLength / Math.PI,     amplitude],\n            [x + waveLength / 4,                   amplitude]\n        ];\n    }\n    else if (stage === 1) {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2),\n            amplitude],\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1),\n            amplitude / 2],\n            [x + waveLength / 4,                   0]\n        ]\n    }\n    else if (stage === 2) {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2, -amplitude / 2],\n            [x + 1 / 2 * waveLength / Math.PI,     -amplitude],\n            [x + waveLength / 4,                   -amplitude]\n        ]\n    }\n    else {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2),\n            -amplitude],\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1),\n            -amplitude / 2],\n            [x + waveLength / 4,                   0]\n        ]\n    }\n}\n","require(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file defines echarts Heatmap Chart\n * @author Ovilia (me@zhangwenli.com)\n * Inspired by https://github.com/mourner/simpleheat\n *\n * @module\n */\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function (data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function () {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function (data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(ecModel) {\n  var processedMapType = {};\n  ecModel.eachSeriesByType('map', function (mapSeries) {\n    var mapType = mapSeries.getMapType();\n\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\n      return;\n    }\n\n    var mapSymbolOffsets = {};\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\n      var geo = subMapSeries.coordinateSystem;\n      var data = subMapSeries.originalData;\n\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\n        data.each('value', function (value, idx) {\n          var name = data.getName(idx);\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\n          // not be drawn. So here must validate if value is NaN.\n\n          if (!region || isNaN(value)) {\n            return;\n          }\n\n          var offset = mapSymbolOffsets[name] || 0;\n          var point = geo.dataToPoint(region.center);\n          mapSymbolOffsets[name] = offset + 1;\n          data.setItemLayout(idx, {\n            point: point,\n            offset: offset\n          });\n        });\n      }\n    }); // Show label of those region not has legendSymbol(which is offset 0)\n\n    var data = mapSeries.getData();\n    data.each(function (idx) {\n      var name = data.getName(idx);\n      var layout = data.getItemLayout(idx) || {};\n      layout.showLabel = !mapSymbolOffsets[name];\n      data.setItemLayout(idx, layout);\n    });\n    processedMapType[mapType] = true;\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","module.exports = require('./src/liquidFill');\n","var SeriesModel = require(\"../../model/Series\");\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // the position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // the dx of the node\n    nodeWidth: 20,\n    // the vertical distance between two nodes\n    nodeGap: 8,\n    // the number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      normal: {\n        show: true,\n        position: 'right',\n        color: '#000',\n        fontSize: 12\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 1,\n        borderColor: '#333'\n      }\n    },\n    lineStyle: {\n      normal: {\n        color: '#314656',\n        opacity: 0.2,\n        curveness: 0.5\n      },\n      emphasis: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n// (24*60*60*1000)\nvar PROXIMATE_ONE_DAY = 86400000;\n/**\n * Calendar\n *\n * @constructor\n *\n * @param {Object} calendarModel calendarModel\n * @param {Object} ecModel       ecModel\n * @param {Object} api           api\n */\n\nfunction Calendar(calendarModel, ecModel, api) {\n  this._model = calendarModel;\n}\n\nCalendar.prototype = {\n  constructor: Calendar,\n  type: 'calendar',\n  dimensions: ['time', 'value'],\n  // Required in createListFromData\n  getDimensionsInfo: function () {\n    return [{\n      name: 'time',\n      type: 'time'\n    }];\n  },\n  getRangeInfo: function () {\n    return this._rangeInfo;\n  },\n  getModel: function () {\n    return this._model;\n  },\n  getRect: function () {\n    return this._rect;\n  },\n  getCellWidth: function () {\n    return this._sw;\n  },\n  getCellHeight: function () {\n    return this._sh;\n  },\n  getOrient: function () {\n    return this._orient;\n  },\n\n  /**\n   * getFirstDayOfWeek\n   *\n   * @example\n   *     0 : start at Sunday\n   *     1 : start at Monday\n   *\n   * @return {number}\n   */\n  getFirstDayOfWeek: function () {\n    return this._firstDayOfWeek;\n  },\n\n  /**\n   * get date info\n   *\n   * @param  {string|number} date date\n   * @return {Object}\n   * {\n   *      y: string, local full year, eg., '1940',\n   *      m: string, local month, from '01' ot '12',\n   *      d: string, local date, from '01' to '31' (if exists),\n   *      day: It is not date.getDay(). It is the location of the cell in a week, from 0 to 6,\n   *      time: timestamp,\n   *      formatedDate: string, yyyy-MM-dd,\n   *      date: original date object.\n   * }\n   */\n  getDateInfo: function (date) {\n    date = numberUtil.parseDate(date);\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    var d = date.getDate();\n    d = d < 10 ? '0' + d : d;\n    var day = date.getDay();\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\n    return {\n      y: y,\n      m: m,\n      d: d,\n      day: day,\n      time: date.getTime(),\n      formatedDate: y + '-' + m + '-' + d,\n      date: date\n    };\n  },\n  getNextNDay: function (date, n) {\n    n = n || 0;\n\n    if (n === 0) {\n      return this.getDateInfo(date);\n    }\n\n    date = new Date(this.getDateInfo(date).time);\n    date.setDate(date.getDate() + n);\n    return this.getDateInfo(date);\n  },\n  update: function (ecModel, api) {\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\n    this._orient = this._model.get('orient');\n    this._lineWidth = this._model.getModel('itemStyle.normal').getItemStyle().lineWidth || 0;\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\n    var weeks = this._rangeInfo.weeks || 1;\n    var whNames = ['width', 'height'];\n\n    var cellSize = this._model.get('cellSize').slice();\n\n    var layoutParams = this._model.getBoxLayoutParams();\n\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\n    zrUtil.each([0, 1], function (idx) {\n      if (cellSizeSpecified(cellSize, idx)) {\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\n      }\n    });\n    var whGlobal = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\n    zrUtil.each([0, 1], function (idx) {\n      if (!cellSizeSpecified(cellSize, idx)) {\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\n      }\n    });\n\n    function cellSizeSpecified(cellSize, idx) {\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\n    }\n\n    this._sw = cellSize[0];\n    this._sh = cellSize[1];\n  },\n\n  /**\n   * Convert a time data(time, value) item to (x, y) point.\n   *\n   * @override\n   * @param  {Array|number} data data\n   * @param  {boolean} [clamp=true] out of range\n   * @return {Array} point\n   */\n  dataToPoint: function (data, clamp) {\n    zrUtil.isArray(data) && (data = data[0]);\n    clamp == null && (clamp = true);\n    var dayInfo = this.getDateInfo(data);\n    var range = this._rangeInfo;\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\n\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time <= range.end.time)) {\n      return [NaN, NaN];\n    }\n\n    var week = dayInfo.day;\n\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\n\n    if (this._orient === 'vertical') {\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\n    }\n\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\n  },\n\n  /**\n   * Convert a (x, y) point to time data\n   *\n   * @override\n   * @param  {string} point point\n   * @return {string}       data\n   */\n  pointToData: function (point) {\n    var date = this.pointToDate(point);\n    return date && date.time;\n  },\n\n  /**\n   * Convert a time date item to (x, y) four point.\n   *\n   * @param  {Array} data  date[0] is date\n   * @param  {boolean} [clamp=true]  out of range\n   * @return {Object}       point\n   */\n  dataToRect: function (data, clamp) {\n    var point = this.dataToPoint(data, clamp);\n    return {\n      contentShape: {\n        x: point[0] - (this._sw - this._lineWidth) / 2,\n        y: point[1] - (this._sh - this._lineWidth) / 2,\n        width: this._sw - this._lineWidth,\n        height: this._sh - this._lineWidth\n      },\n      center: point,\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\n    };\n  },\n\n  /**\n   * Convert a (x, y) point to time date\n   *\n   * @param  {Array} point point\n   * @return {Object}       date\n   */\n  pointToDate: function (point) {\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\n    var range = this._rangeInfo.range;\n\n    if (this._orient === 'vertical') {\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\n    }\n\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * initRange\n   *\n   * @private\n   * @return {Array} [start, end]\n   */\n  _initRangeOption: function () {\n    var range = this._model.get('range');\n\n    var rg = range;\n\n    if (zrUtil.isArray(rg) && rg.length === 1) {\n      rg = rg[0];\n    }\n\n    if (/^\\d{4}$/.test(rg)) {\n      range = [rg + '-01-01', rg + '-12-31'];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rg)) {\n      var start = this.getDateInfo(rg);\n      var firstDay = start.date;\n      firstDay.setMonth(firstDay.getMonth() + 1);\n      var end = this.getNextNDay(firstDay, -1);\n      range = [start.formatedDate, end.formatedDate];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rg)) {\n      range = [rg, rg];\n    }\n\n    var tmp = this._getRangeInfo(range);\n\n    if (tmp.start.time > tmp.end.time) {\n      range.reverse();\n    }\n\n    return range;\n  },\n\n  /**\n   * range info\n   *\n   * @private\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\n   *  If range[0] > range[1], they will not be reversed.\n   * @return {Object}       obj\n   */\n  _getRangeInfo: function (range) {\n    range = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\n    var reversed;\n\n    if (range[0].time > range[1].time) {\n      reversed = true;\n      range.reverse();\n    }\n\n    var allDay = Math.floor(range[1].time / PROXIMATE_ONE_DAY) - Math.floor(range[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case:\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\n    // ```\n    // var first = new Date(1478412000000 - 3600 * 1000 * 2.5);\n    // var second = new Date(1478412000000);\n    // var allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\n    // ```\n    // will get wrong result because of DST. So we should fix it.\n\n    var date = new Date(range[0].time);\n    var startDateNum = date.getDate();\n    var endDateNum = range[1].date.getDate();\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\n\n    if (date.getDate() !== endDateNum) {\n      var sign = date.getTime() - range[1].time > 0 ? 1 : -1;\n\n      while (date.getDate() !== endDateNum && (date.getTime() - range[1].time) * sign > 0) {\n        allDay -= sign;\n        date.setDate(startDateNum + allDay - 1);\n      }\n    }\n\n    var weeks = Math.floor((allDay + range[0].day + 6) / 7);\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\n    reversed && range.reverse();\n    return {\n      range: [range[0].formatedDate, range[1].formatedDate],\n      start: range[0],\n      end: range[1],\n      allDay: allDay,\n      weeks: weeks,\n      // From 0.\n      nthWeek: nthWeek,\n      fweek: range[0].day,\n      lweek: range[1].day\n    };\n  },\n\n  /**\n   * get date by nthWeeks and week day in range\n   *\n   * @private\n   * @param  {number} nthWeek the week\n   * @param  {number} day   the week day\n   * @param  {Array} range [d1, d2]\n   * @return {Object}\n   */\n  _getDateByWeeksAndDay: function (nthWeek, day, range) {\n    var rangeInfo = this._getRangeInfo(range);\n\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\n      return false;\n    }\n\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\n    var date = new Date(rangeInfo.start.time);\n    date.setDate(rangeInfo.start.d + nthDay);\n    return this.getDateInfo(date);\n  }\n};\nCalendar.dimensions = Calendar.prototype.dimensions;\nCalendar.getDimensionsInfo = Calendar.prototype.getDimensionsInfo;\n\nCalendar.create = function (ecModel, api) {\n  var calendarList = [];\n  ecModel.eachComponent('calendar', function (calendarModel) {\n    var calendar = new Calendar(calendarModel, ecModel, api);\n    calendarList.push(calendar);\n    calendarModel.coordinateSystem = calendar;\n  });\n  ecModel.eachSeries(function (calendarSeries) {\n    if (calendarSeries.get('coordinateSystem') === 'calendar') {\n      // Inject coordinate system\n      calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\n    }\n  });\n  return calendarList;\n};\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var calendarModel = finder.calendarModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nCoordinateSystem.register('calendar', Calendar);\nvar _default = Calendar;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;","var _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = coordSys.dimensions;\n      data.each(dimensions, function () {\n        var hasValue;\n        var args = arguments;\n        var value = [];\n\n        for (var i = 0; i < dimensions.length; i++) {\n          if (!isNaN(args[i])) {\n            hasValue = true;\n          }\n\n          value.push(args[i]);\n        }\n\n        var idx = args[args.length - 1];\n\n        if (hasValue) {\n          data.setItemLayout(idx, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(idx, [NaN, NaN]);\n        }\n      });\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;","var env = require(\"../core/env\");\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\n\nfunction createNode(tagName) {\n  return doCreateNode(tagName);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nvar doCreateNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    doCreateNode = function (tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    doCreateNode = function (tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;","function _default(seriesType, ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType(seriesType, function (series) {\n    var data = series.getData();\n    data.filterSelf(function (idx) {\n      var name = data.getName(idx); // If in any legend component the status is not selected.\n\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(name)) {\n          return false;\n        }\n      }\n\n      return true;\n    }, this);\n  }, this);\n}\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;","var BaseBarSeries = require(\"./BaseBarSeries\");\n\nvar PictorialBarSeries = BaseBarSeries.extend({\n  type: 'series.pictorialBar',\n  dependencies: ['grid'],\n  defaultOption: {\n    symbol: 'circle',\n    // Customized bar shape\n    symbolSize: null,\n    // Can be ['100%', '100%'], null means auto.\n    symbolRotate: null,\n    symbolPosition: null,\n    // 'start' or 'end' or 'center', null means auto.\n    symbolOffset: null,\n    symbolMargin: null,\n    // start margin and end margin. Can be a number or a percent string.\n    // Auto margin by defualt.\n    symbolRepeat: false,\n    // false/null/undefined, means no repeat.\n    // Can be true, means auto calculate repeat times and cut by data.\n    // Can be a number, specifies repeat times, and do not cut by data.\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\n    symbolRepeatDirection: 'end',\n    // 'end' means from 'start' to 'end'.\n    symbolClip: false,\n    symbolBoundingData: null,\n    // Can be 60 or -40 or [-40, 60]\n    symbolPatternSize: 400,\n    // 400 * 400 px\n    barGap: '-100%',\n    // In most case, overlap is needed.\n    // z can be set in data item, which is z2 actually.\n    // Disable progressive\n    progressive: 0,\n    hoverAnimation: false // Open only when needed.\n\n  },\n  getInitialData: function (option) {\n    // Disable stack.\n    option.stack = null;\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\n  }\n});\nvar _default = PictorialBarSeries;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar actionInfo = {\n  type: 'selectDataRange',\n  event: 'dataRangeSelected',\n  // FIXME use updateView appears wrong\n  update: 'update'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'visualMap',\n    query: payload\n  }, function (model) {\n    model.setSelected(payload.selected);\n  });\n});","var echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series.graph:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series.graph:unfocusNodeAdjacency'\n}, function () {});","/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar ParallelAxis = require(\"./ParallelAxis\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../../component/helper/sliderMove\");\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function (parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function () {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function (parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, dim);\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function (parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function () {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function () {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1,\n        labelInterval: axes.get(dim).getLabelInterval()\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function (dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function (value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {Object} context\n   */\n  eachActiveState: function (data, callback, context) {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      var values = data.getValues(dimensions, i);\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var dimName = dimensions[j];\n          var state = axesMap.get(dimName).model.getActiveState(values[j], j);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback.call(context, activeState, i);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function () {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function (coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function (dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize;\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar PolarAxisModel = ComponentModel.extend({\n  type: 'polarAxis',\n\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'polar',\n      index: this.option.polarIndex,\n      id: this.option.polarId\n    })[0];\n  }\n});\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\nvar polarAxisDefaultExtendedOption = {\n  angle: {\n    // polarIndex: 0,\n    // polarId: '',\n    startAngle: 90,\n    clockwise: true,\n    splitNumber: 12,\n    axisLabel: {\n      rotate: false\n    }\n  },\n  radius: {\n    // polarIndex: 0,\n    // polarId: '',\n    splitNumber: 5\n  }\n};\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./treemap/TreemapSeries\");\n\nrequire(\"./treemap/TreemapView\");\n\nrequire(\"./treemap/treemapAction\");\n\nvar treemapVisual = require(\"./treemap/treemapVisual\");\n\nvar treemapLayout = require(\"./treemap/treemapLayout\");\n\necharts.registerVisual(treemapVisual);\necharts.registerLayout(treemapLayout);","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkPointModel\");\n\nrequire(\"./marker/MarkPointView\");\n\n// HINT Markpoint can't be used too much\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getModel('normal').getItemStyle());\n        path.hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  updateLayout: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n    });\n  },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar util = require(\"../core/util\");\n\nvar each = util.each;\n\nvar zrLog = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style['user-select'] = 'none';\n  svgRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(svgRoot);\n  this.clipPathManager = new ClippathManager(svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width && this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToSvg: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:img/svg+xml;utf-8,' + unescape(html);\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Charts.vue?vue&type=style&index=0&id=079fd192&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Charts.vue?vue&type=style&index=0&id=079fd192&scoped=true&lang=css&\"","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar viewMixin = _whiskerBoxCommon.viewMixin;\nvar BoxplotView = ChartView.extend({\n  type: 'boxplot',\n  getStyleUpdater: function () {\n    return updateStyle;\n  },\n  dispose: zrUtil.noop\n});\nzrUtil.mixin(BoxplotView, viewMixin, true); // Update common properties\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n\nfunction updateStyle(itemGroup, data, idx) {\n  var itemModel = data.getItemModel(idx);\n  var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n  var borderColor = data.getItemVisual(idx, 'color'); // Exclude borderColor.\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\n  var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n  whiskerEl.style.set(itemStyle);\n  whiskerEl.style.stroke = borderColor;\n  whiskerEl.dirty();\n  var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n  bodyEl.style.set(itemStyle);\n  bodyEl.style.stroke = borderColor;\n  bodyEl.dirty();\n  var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n  graphic.setHoverStyle(itemGroup, hoverStyle);\n}\n\nvar _default = BoxplotView;\nmodule.exports = _default;","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar TimelineModel = require(\"./TimelineModel\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar SliderTimelineModel = TimelineModel.extend({\n  type: 'timeline.slider',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 时间轴背景颜色\n    borderColor: '#ccc',\n    // 时间轴边框颜色\n    borderWidth: 0,\n    // 时间轴边框线宽，单位px，默认为0（无边框）\n    orient: 'horizontal',\n    // 'vertical'\n    inverse: false,\n    tooltip: {\n      // boolean or Object\n      trigger: 'item' // data item may also have tootip attr.\n\n    },\n    symbol: 'emptyCircle',\n    symbolSize: 10,\n    lineStyle: {\n      show: true,\n      width: 2,\n      color: '#304654'\n    },\n    label: {\n      // 文本标签\n      position: 'auto',\n      // auto left right top bottom\n      // When using number, label position is not\n      // restricted by viewRect.\n      // positive: right/bottom, negative: left/top\n      normal: {\n        show: true,\n        interval: 'auto',\n        rotate: 0,\n        // formatter: null,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#304654'\n      },\n      emphasis: {\n        show: true,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#c23531'\n      }\n    },\n    itemStyle: {\n      normal: {\n        color: '#304654',\n        borderWidth: 1\n      },\n      emphasis: {\n        color: '#c23531'\n      }\n    },\n    checkpointStyle: {\n      symbol: 'circle',\n      symbolSize: 13,\n      color: '#c23531',\n      borderWidth: 5,\n      borderColor: 'rgba(194,53,49, 0.5)',\n      animation: true,\n      animationDuration: 300,\n      animationEasing: 'quinticInOut'\n    },\n    controlStyle: {\n      show: true,\n      showPlayBtn: true,\n      showPrevBtn: true,\n      showNextBtn: true,\n      itemSize: 22,\n      itemGap: 12,\n      position: 'left',\n      // 'left' 'right' 'top' 'bottom'\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\n      // jshint ignore:line\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\n      // jshint ignore:line\n      nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',\n      // jshint ignore:line\n      prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',\n      // jshint ignore:line\n      normal: {\n        color: '#304654',\n        borderColor: '#304654',\n        borderWidth: 1\n      },\n      emphasis: {\n        color: '#c23531',\n        borderColor: '#c23531',\n        borderWidth: 2\n      }\n    },\n    data: []\n  }\n});\nzrUtil.mixin(SliderTimelineModel, modelUtil.dataFormatMixin);\nvar _default = SliderTimelineModel;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;","var _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;","function normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.normal.color'.split('.');\n    var opacityQuery = 'lineStyle.normal.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function (value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null) {\n      return 'inactive';\n    }\n\n    for (var i = 0, len = activeIntervals.length; i < len; i++) {\n      if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n        return 'active';\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar _labelHelper = require(\"./helper/labelHelper\");\n\nvar findLabelValueDim = _labelHelper.findLabelValueDim;\n\nvar createListFromArray = require(\"./helper/createListFromArray\");\n\nvar barGrid = require(\"../layout/barGrid\");\n\nvar DataDiffer = require(\"../data/DataDiffer\");\n\nvar prepareCartesian2d = require(\"../coord/cartesian/prepareCustom\");\n\nvar prepareGeo = require(\"../coord/geo/prepareCustom\");\n\nvar prepareSingleAxis = require(\"../coord/single/prepareCustom\");\n\nvar preparePolar = require(\"../coord/polar/prepareCustom\");\n\nvar prepareCalendar = require(\"../coord/calendar/prepareCustom\");\n\nvar ITEM_STYLE_NORMAL_PATH = ['itemStyle', 'normal'];\nvar ITEM_STYLE_EMPHASIS_PATH = ['itemStyle', 'emphasis'];\nvar LABEL_NORMAL = ['label', 'normal'];\nvar LABEL_EMPHASIS = ['label', 'emphasis']; // Use prefix to avoid index to be the same as el.name,\n// which will cause weird udpate animation.\n\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\n/**\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\n * of each coordinate systems are not required by each coordinate systems directly, but\n * required by the module `custom`.\n *\n * prepareInfoForCustomSeries {Function}: optional\n *     @return {Object} {coordSys: {...}, api: {\n *         coord: function (data, clamp) {}, // return point in global.\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\n *     }}\n */\n\nvar prepareCustoms = {\n  cartesian2d: prepareCartesian2d,\n  geo: prepareGeo,\n  singleAxis: prepareSingleAxis,\n  polar: preparePolar,\n  calendar: prepareCalendar\n}; // ------\n// Model\n// ------\n\necharts.extendSeriesModel({\n  type: 'series.custom',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    // Can be set as 'none'\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // label: {}\n    // itemStyle: {}\n\n  },\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  }\n}); // -----\n// View\n// -----\n\necharts.extendChartView({\n  type: 'custom',\n\n  /**\n   * @private\n   * @type {module:echarts/data/List}\n   */\n  _data: null,\n\n  /**\n   * @override\n   */\n  render: function (customSeries, ecModel, api) {\n    var oldData = this._data;\n    var data = customSeries.getData();\n    var group = this.group;\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n    data.diff(oldData).add(function (newIdx) {\n      data.hasValue(newIdx) && createOrUpdate(null, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      data.hasValue(newIdx) ? createOrUpdate(el, newIdx, renderItem(newIdx), customSeries, group, data) : el && group.remove(el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n\n  /**\n   * @override\n   */\n  dispose: zrUtil.noop\n});\n\nfunction createEl(elOption) {\n  var graphicType = elOption.type;\n  var el;\n\n  if (graphicType === 'path') {\n    var shape = elOption.shape;\n    el = graphicUtil.makePath(shape.pathData, null, {\n      x: shape.x || 0,\n      y: shape.y || 0,\n      width: shape.width || 0,\n      height: shape.height || 0\n    }, 'center');\n    el.__customPathData = elOption.pathData;\n  } else if (graphicType === 'image') {\n    el = new graphicUtil.Image({});\n    el.__customImagePath = elOption.style.image;\n  } else if (graphicType === 'text') {\n    el = new graphicUtil.Text({});\n    el.__customText = elOption.style.text;\n  } else {\n    var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n    el = new Clz();\n  }\n\n  el.__customGraphicType = graphicType;\n  el.name = elOption.name;\n  return el;\n}\n\nfunction updateEl(el, dataIndex, elOption, animatableModel, data, isInit) {\n  var targetProps = {};\n  var elOptionStyle = elOption.style || {};\n  elOption.shape && (targetProps.shape = zrUtil.clone(elOption.shape));\n  elOption.position && (targetProps.position = elOption.position.slice());\n  elOption.scale && (targetProps.scale = elOption.scale.slice());\n  elOption.origin && (targetProps.origin = elOption.origin.slice());\n  elOption.rotation && (targetProps.rotation = elOption.rotation);\n\n  if (el.type === 'image' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y', 'width', 'height'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    });\n  }\n\n  if (el.type === 'text' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    }); // Compatible with previous: both support\n    // textFill and fill, textStroke and stroke in 'text' element.\n\n    !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n    !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n  }\n\n  if (el.type !== 'group') {\n    el.useStyle(elOptionStyle); // Init animation.\n\n    if (isInit) {\n      el.style.opacity = 0;\n      var targetOpacity = elOptionStyle.opacity;\n      targetOpacity == null && (targetOpacity = 1);\n      graphicUtil.initProps(el, {\n        style: {\n          opacity: targetOpacity\n        }\n      }, animatableModel, dataIndex);\n    }\n  }\n\n  if (isInit) {\n    el.attr(targetProps);\n  } else {\n    graphicUtil.updateProps(el, targetProps, animatableModel, dataIndex);\n  } // z2 must not be null/undefined, otherwise sort error may occur.\n\n\n  el.attr({\n    z2: elOption.z2 || 0,\n    silent: elOption.silent\n  });\n  elOption.styleEmphasis !== false && graphicUtil.setHoverStyle(el, elOption.styleEmphasis);\n}\n\nfunction prepareStyleTransition(prop, targetStyle, elOptionStyle, oldElStyle, isInit) {\n  if (elOptionStyle[prop] != null && !isInit) {\n    targetStyle[prop] = elOptionStyle[prop];\n    elOptionStyle[prop] = oldElStyle[prop];\n  }\n}\n\nfunction makeRenderItem(customSeries, data, ecModel, api) {\n  var renderItem = customSeries.get('renderItem');\n  var coordSys = customSeries.coordinateSystem;\n  var prepareResult = {};\n\n  if (coordSys) {\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms() : prepareCustoms[coordSys.type](coordSys);\n  }\n\n  var userAPI = zrUtil.defaults({\n    getWidth: api.getWidth,\n    getHeight: api.getHeight,\n    getZr: api.getZr,\n    getDevicePixelRatio: api.getDevicePixelRatio,\n    value: value,\n    style: style,\n    styleEmphasis: styleEmphasis,\n    visual: visual,\n    barLayout: barLayout,\n    currentSeriesIndices: currentSeriesIndices,\n    font: font\n  }, prepareResult.api || {});\n  var userParams = {\n    context: {},\n    seriesId: customSeries.id,\n    seriesName: customSeries.name,\n    seriesIndex: customSeries.seriesIndex,\n    coordSys: prepareResult.coordSys,\n    dataInsideLength: data.count(),\n    encode: wrapEncodeDef(customSeries.getData())\n  }; // Do not support call `api` asynchronously without dataIndexInside input.\n\n  var currDataIndexInside;\n  var currDirty = true;\n  var currItemModel;\n  var currLabelNormalModel;\n  var currLabelEmphasisModel;\n  var currLabelValueDim;\n  var currVisualColor;\n  return function (dataIndexInside) {\n    currDataIndexInside = dataIndexInside;\n    currDirty = true;\n    return renderItem && renderItem(zrUtil.defaults({\n      dataIndexInside: dataIndexInside,\n      dataIndex: data.getRawIndex(dataIndexInside)\n    }, userParams), userAPI) || {};\n  }; // Do not update cache until api called.\n\n  function updateCache(dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n\n    if (currDirty) {\n      currItemModel = data.getItemModel(dataIndexInside);\n      currLabelNormalModel = currItemModel.getModel(LABEL_NORMAL);\n      currLabelEmphasisModel = currItemModel.getModel(LABEL_EMPHASIS);\n      currLabelValueDim = findLabelValueDim(data);\n      currVisualColor = data.getItemVisual(dataIndexInside, 'color');\n      currDirty = false;\n    }\n  }\n  /**\n   * @public\n   * @param {number|string} dim\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   * @return {number|string} value\n   */\n\n\n  function value(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.get(data.getDimension(dim || 0), dataIndexInside);\n  }\n  /**\n   * By default, `visual` is applied to style (to support visualMap).\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\n   * it can be implemented as:\n   * `api.style({stroke: api.visual('color'), fill: null})`;\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function style(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_NORMAL_PATH).getItemStyle();\n    currVisualColor != null && (itemStyle.fill = currVisualColor);\n    var opacity = data.getItemVisual(dataIndexInside, 'opacity');\n    opacity != null && (itemStyle.opacity = opacity);\n\n    if (currLabelValueDim != null) {\n      graphicUtil.setTextStyle(itemStyle, currLabelNormalModel, null, {\n        autoColor: currVisualColor,\n        isRectText: true\n      });\n      itemStyle.text = currLabelNormalModel.getShallow('show') ? zrUtil.retrieve2(customSeries.getFormattedLabel(dataIndexInside, 'normal'), data.get(currLabelValueDim, dataIndexInside)) : null;\n    }\n\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function styleEmphasis(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_EMPHASIS_PATH).getItemStyle();\n\n    if (currLabelValueDim != null) {\n      graphicUtil.setTextStyle(itemStyle, currLabelEmphasisModel, null, {\n        isRectText: true\n      }, true);\n      itemStyle.text = currLabelEmphasisModel.getShallow('show') ? zrUtil.retrieve3(customSeries.getFormattedLabel(dataIndexInside, 'emphasis'), customSeries.getFormattedLabel(dataIndexInside, 'normal'), data.get(currLabelValueDim, dataIndexInside)) : null;\n    }\n\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {string} visualType\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function visual(visualType, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.getItemVisual(dataIndexInside, visualType);\n  }\n  /**\n   * @public\n   * @param {number} opt.count Positive interger.\n   * @param {number} [opt.barWidth]\n   * @param {number} [opt.barMaxWidth]\n   * @param {number} [opt.barGap]\n   * @param {number} [opt.barCategoryGap]\n   * @return {Object} {width, offset, offsetCenter} is not support, return undefined.\n   */\n\n\n  function barLayout(opt) {\n    if (coordSys.getBaseAxis) {\n      var baseAxis = coordSys.getBaseAxis();\n      return barGrid.getLayoutOnAxis(zrUtil.defaults({\n        axis: baseAxis\n      }, opt), api);\n    }\n  }\n  /**\n   * @public\n   * @return {Array.<number>}\n   */\n\n\n  function currentSeriesIndices() {\n    return ecModel.getCurrentSeriesIndices();\n  }\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {string} [opt.fontStyle]\n   * @param {number} [opt.fontWeight]\n   * @param {number} [opt.fontSize]\n   * @param {string} [opt.fontFamily]\n   * @return {string} font string\n   */\n\n\n  function font(opt) {\n    return graphicUtil.getFont(opt, ecModel);\n  }\n}\n\nfunction wrapEncodeDef(data) {\n  var encodeDef = {};\n  zrUtil.each(data.dimensions, function (dimName, dataDimIndex) {\n    var dimInfo = data.getDimensionInfo(dimName);\n\n    if (!dimInfo.isExtraCoord) {\n      var coordDim = dimInfo.coordDim;\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\n      dataDims[dimInfo.coordDimIndex] = dataDimIndex;\n    }\n  });\n  return encodeDef;\n}\n\nfunction createOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  el = doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data);\n  el && data.setItemGraphicEl(dataIndex, el);\n}\n\nfunction doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  var elOptionType = elOption.type;\n\n  if (el && elOptionType !== el.__customGraphicType && (elOptionType !== 'path' || elOption.pathData !== el.__customPathData) && (elOptionType !== 'image' || elOption.style.image !== el.__customImagePath) && (elOptionType !== 'text' || elOption.style.text !== el.__customText)) {\n    group.remove(el);\n    el = null;\n  } // `elOption.type` is undefined when `renderItem` returns nothing.\n\n\n  if (elOptionType == null) {\n    return;\n  }\n\n  var isInit = !el;\n  !el && (el = createEl(elOption));\n  updateEl(el, dataIndex, elOption, animatableModel, data, isInit);\n\n  if (elOptionType === 'group') {\n    var oldChildren = el.children() || [];\n    var newChildren = elOption.children || [];\n\n    if (elOption.diffChildrenByName) {\n      // lower performance.\n      diffGroupChildren({\n        oldChildren: oldChildren,\n        newChildren: newChildren,\n        dataIndex: dataIndex,\n        animatableModel: animatableModel,\n        group: el,\n        data: data\n      });\n    } else {\n      // better performance.\n      var index = 0;\n\n      for (; index < newChildren.length; index++) {\n        doCreateOrUpdate(el.childAt(index), dataIndex, newChildren[index], animatableModel, el, data);\n      }\n\n      for (; index < oldChildren.length; index++) {\n        oldChildren[index] && el.remove(oldChildren[index]);\n      }\n    }\n  }\n\n  group.add(el);\n  return el;\n}\n\nfunction diffGroupChildren(context) {\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\n}\n\nfunction getKey(item, idx) {\n  var name = item && item.name;\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\n}\n\nfunction processAddUpdate(newIndex, oldIndex) {\n  var context = this.context;\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\n  doCreateOrUpdate(child, context.dataIndex, childOption, context.animatableModel, context.group, context.data);\n}\n\nfunction processRemove(oldIndex) {\n  var context = this.context;\n  var child = context.oldChildren[oldIndex];\n  child && context.group.remove(child);\n}","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"./format\");\n\nvar nubmerUtil = require(\"./number\");\n\nvar Model = require(\"../model/Model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;","var clazzUtil = require(\"../util/clazz\");\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;","var List = require(\"../../data/List\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar WhiskerBoxDraw = require(\"../helper/WhiskerBoxDraw\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar seriesModelMixin = {\n  /**\n   * @private\n   * @type {string}\n   */\n  _baseAxisDim: null,\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // When both types of xAxis and yAxis are 'value', layout is\n    // needed to be specified by user. Otherwise, layout can be\n    // judged by which axis is category.\n    var categories;\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var addOrdinal; // FIXME\n    // 考虑时间轴\n\n    if (xAxisType === 'category') {\n      option.layout = 'horizontal';\n      categories = xAxisModel.getCategories();\n      addOrdinal = true;\n    } else if (yAxisType === 'category') {\n      option.layout = 'vertical';\n      categories = yAxisModel.getCategories();\n      addOrdinal = true;\n    } else {\n      option.layout = option.layout || 'horizontal';\n    }\n\n    var coordDims = ['x', 'y'];\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n    var data = option.data;\n    addOrdinal && zrUtil.each(data, function (item, index) {\n      if (item.value && zrUtil.isArray(item.value)) {\n        item.value.unshift(index);\n      } else {\n        zrUtil.isArray(item) && item.unshift(index);\n      }\n    });\n    var defaultValueDimensions = this.defaultValueDimensions;\n    var dimensions = [{\n      name: baseAxisDim,\n      otherDims: {\n        tooltip: false\n      },\n      dimsDef: ['base']\n    }, {\n      name: otherAxisDim,\n      dimsDef: defaultValueDimensions.slice()\n    }];\n    dimensions = completeDimensions(dimensions, data, {\n      encodeDef: this.get('encode'),\n      dimsDef: this.get('dimensions'),\n      // Consider empty data entry.\n      dimCount: defaultValueDimensions.length + 1\n    });\n    var list = new List(dimensions, this);\n    list.initData(data, categories ? categories.slice() : null);\n    return list;\n  },\n\n  /**\n   * If horizontal, base axis is x, otherwise y.\n   * @override\n   */\n  getBaseAxis: function () {\n    var dim = this._baseAxisDim;\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n  }\n};\nvar viewMixin = {\n  init: function () {\n    /**\n     * Old data.\n     * @private\n     * @type {module:echarts/chart/helper/WhiskerBoxDraw}\n     */\n    var whiskerBoxDraw = this._whiskerBoxDraw = new WhiskerBoxDraw(this.getStyleUpdater());\n    this.group.add(whiskerBoxDraw.group);\n  },\n  render: function (seriesModel, ecModel, api) {\n    this._whiskerBoxDraw.updateData(seriesModel.getData());\n  },\n  remove: function (ecModel) {\n    this._whiskerBoxDraw.remove();\n  }\n};\nexports.seriesModelMixin = seriesModelMixin;\nexports.viewMixin = viewMixin;","var _clazz = require(\"../../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {number} [time=500] Time in ms\n * @param {string} [easing='linear']\n * @param {number} [delay=0]\n * @param {Function} [callback]\n *\n * @example\n *  // Animate position\n *  animation\n *      .createWrap()\n *      .add(el1, {position: [10, 10]})\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\n *      .done(function () { // done })\n *      .start('cubicOut');\n */\nfunction createWrap() {\n  var storage = [];\n  var elExistsMap = {};\n  var doneCallback;\n  return {\n    /**\n     * Caution: a el can only be added once, otherwise 'done'\n     * might not be called. This method checks this (by el.id),\n     * suppresses adding and returns false when existing el found.\n     *\n     * @param {modele:zrender/Element} el\n     * @param {Object} target\n     * @param {number} [time=500]\n     * @param {number} [delay=0]\n     * @param {string} [easing='linear']\n     * @return {boolean} Whether adding succeeded.\n     *\n     * @example\n     *     add(el, target, time, delay, easing);\n     *     add(el, target, time, easing);\n     *     add(el, target, time);\n     *     add(el, target);\n     */\n    add: function (el, target, time, delay, easing) {\n      if (zrUtil.isString(delay)) {\n        easing = delay;\n        delay = 0;\n      }\n\n      if (elExistsMap[el.id]) {\n        return false;\n      }\n\n      elExistsMap[el.id] = 1;\n      storage.push({\n        el: el,\n        target: target,\n        time: time,\n        delay: delay,\n        easing: easing\n      });\n      return true;\n    },\n\n    /**\n     * Only execute when animation finished. Will not execute when any\n     * of 'stop' or 'stopAnimation' called.\n     *\n     * @param {Function} callback\n     */\n    done: function (callback) {\n      doneCallback = callback;\n      return this;\n    },\n\n    /**\n     * Will stop exist animation firstly.\n     */\n    start: function () {\n      var count = storage.length;\n\n      for (var i = 0, len = storage.length; i < len; i++) {\n        var item = storage[i];\n        item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\n      }\n\n      return this;\n\n      function done() {\n        count--;\n\n        if (!count) {\n          storage.length = 0;\n          elExistsMap = {};\n          doneCallback && doneCallback();\n        }\n      }\n    }\n  };\n}\n\nexports.createWrap = createWrap;","var graphic = require(\"../../util/graphic\");\n\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label.normal');\n  var hoverLabelModel = itemModel.getModel('label.emphasis');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: seriesModel.getRawValue(dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;","var zrLog = require(\"../core/log\");\n\nvar vmlCore = require(\"./core\");\n\nvar _util = require(\"../core/util\");\n\nvar each = _util.each;\n\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function () {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function () {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function (width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function () {\n    return this._width;\n  },\n  getHeight: function () {\n    return this._height;\n  },\n  clear: function () {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(option) {\n  if (!option || !zrUtil.isArray(option.series)) {\n    return;\n  } // Translate 'k' to 'candlestick'.\n\n\n  zrUtil.each(option.series, function (seriesItem) {\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n      seriesItem.type = 'candlestick';\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar mapVisual = VisualMapping.mapVisual;\nvar eachVisual = VisualMapping.eachVisual;\nvar isArray = zrUtil.isArray;\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\nvar linearMap = numberUtil.linearMap;\nvar noop = zrUtil.noop;\nvar DEFAULT_COLOR = ['#f6efa6', '#d88273', '#bf444c'];\nvar VisualMapModel = echarts.extendComponentModel({\n  type: 'visualMap',\n  dependencies: ['series'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  stateList: ['inRange', 'outOfRange'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  replacableOptionKeys: ['inRange', 'outOfRange', 'target', 'controller', 'color'],\n\n  /**\n   * [lowerBound, upperBound]\n   *\n   * @readOnly\n   * @type {Array.<number>}\n   */\n  dataBound: [-Infinity, Infinity],\n\n  /**\n   * @readOnly\n   * @type {string|Object}\n   */\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    zlevel: 0,\n    z: 4,\n    seriesIndex: 'all',\n    // 'all' or null/undefined: all series.\n    // A number or an array of number: the specified series.\n    // set min: 0, max: 200, only for campatible with ec2.\n    // In fact min max should not have default value.\n    min: 0,\n    // min value, must specified if pieces is not specified.\n    max: 200,\n    // max value, must specified if pieces is not specified.\n    dimension: null,\n    inRange: null,\n    // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    outOfRange: null,\n    // 'color', 'colorHue', 'colorSaturation',\n    // 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    left: 0,\n    // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n    right: null,\n    // The same as left.\n    top: null,\n    // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n    bottom: 0,\n    // The same as top.\n    itemWidth: null,\n    itemHeight: null,\n    inverse: false,\n    orient: 'vertical',\n    // 'horizontal' ¦ 'vertical'\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    // 值域边框颜色\n    contentColor: '#5793f3',\n    inactiveColor: '#aaa',\n    borderWidth: 0,\n    // 值域边框线宽，单位px，默认为0（无边框）\n    padding: 5,\n    // 值域内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    textGap: 10,\n    //\n    precision: 0,\n    // 小数精度，默认为0，无小数点\n    color: null,\n    //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n    formatter: null,\n    text: null,\n    // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n    textStyle: {\n      color: '#333' // 值域文字颜色\n\n    }\n  },\n\n  /**\n   * @protected\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this._dataExtent;\n    /**\n     * @readOnly\n     */\n\n    this.targetVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.controllerVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * [width, height]\n     * @readOnly\n     * @type {Array.<number>}\n     */\n\n    this.itemSize;\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n\n  /**\n   * @protected\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option; // FIXME\n    // necessary?\n    // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\n    this.textStyleModel = this.getModel('textStyle');\n    this.resetItemSize();\n    this.completeVisualOption();\n  },\n\n  /**\n   * @protected\n   */\n  resetVisual: function (supplementVisualOption) {\n    var stateList = this.stateList;\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\n  },\n\n  /**\n   * @protected\n   * @return {Array.<number>} An array of series indices.\n   */\n  getTargetSeriesIndices: function () {\n    var optionSeriesIndex = this.option.seriesIndex;\n    var seriesIndices = [];\n\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\n      this.ecModel.eachSeries(function (seriesModel, index) {\n        seriesIndices.push(index);\n      });\n    } else {\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\n    }\n\n    return seriesIndices;\n  },\n\n  /**\n   * @public\n   */\n  eachTargetSeries: function (callback, context) {\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\n      callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n    }, this);\n  },\n\n  /**\n   * @pubilc\n   */\n  isTargetSeries: function (seriesModel) {\n    var is = false;\n    this.eachTargetSeries(function (model) {\n      model === seriesModel && (is = true);\n    });\n    return is;\n  },\n\n  /**\n   * @example\n   * this.formatValueText(someVal); // format single numeric value to text.\n   * this.formatValueText(someVal, true); // format single category value to text.\n   * this.formatValueText([min, max]); // format numeric min-max to text.\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n   *\n   * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n   * @param {boolean} [isCategory=false] Only available when value is number.\n   * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n   * @return {string}\n   * @protected\n   */\n  formatValueText: function (value, isCategory, edgeSymbols) {\n    var option = this.option;\n    var precision = option.precision;\n    var dataBound = this.dataBound;\n    var formatter = option.formatter;\n    var isMinMax;\n    var textValue;\n    edgeSymbols = edgeSymbols || ['<', '>'];\n\n    if (zrUtil.isArray(value)) {\n      value = value.slice();\n      isMinMax = true;\n    }\n\n    textValue = isCategory ? value : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\n\n    if (zrUtil.isString(formatter)) {\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\n    } else if (zrUtil.isFunction(formatter)) {\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\n    }\n\n    if (isMinMax) {\n      if (value[0] === dataBound[0]) {\n        return edgeSymbols[0] + ' ' + textValue[1];\n      } else if (value[1] === dataBound[1]) {\n        return edgeSymbols[1] + ' ' + textValue[0];\n      } else {\n        return textValue[0] + ' - ' + textValue[1];\n      }\n    } else {\n      // Format single value (includes category case).\n      return textValue;\n    }\n\n    function toFixed(val) {\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetExtent: function () {\n    var thisOption = this.option; // Can not calculate data extent by data here.\n    // Because series and data may be modified in processing stage.\n    // So we do not support the feature \"auto min/max\".\n\n    var extent = asc([thisOption.min, thisOption.max]);\n    this._dataExtent = extent;\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/data/List} list\n   * @return {string} Concrete dimention. If return null/undefined,\n   *                  no dimension used.\n   */\n  getDataDimension: function (list) {\n    var optDim = this.option.dimension;\n    return optDim != null ? optDim : list.dimensions.length - 1;\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getExtent: function () {\n    return this._dataExtent.slice();\n  },\n\n  /**\n   * @protected\n   */\n  completeVisualOption: function () {\n    var thisOption = this.option;\n    var base = {\n      inRange: thisOption.inRange,\n      outOfRange: thisOption.outOfRange\n    };\n    var target = thisOption.target || (thisOption.target = {});\n    var controller = thisOption.controller || (thisOption.controller = {});\n    zrUtil.merge(target, base); // Do not override\n\n    zrUtil.merge(controller, base); // Do not override\n\n    var isCategory = this.isCategory();\n    completeSingle.call(this, target);\n    completeSingle.call(this, controller);\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\n\n    completeController.call(this, controller);\n\n    function completeSingle(base) {\n      // Compatible with ec2 dataRange.color.\n      // The mapping order of dataRange.color is: [high value, ..., low value]\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n      // Notice: ec2 has no inverse.\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\n      // So adding color only when no inRange defined.\n      && !base.inRange) {\n        base.inRange = {\n          color: thisOption.color.slice().reverse()\n        };\n      } // Compatible with previous logic, always give a defautl color, otherwise\n      // simple config with no inRange and outOfRange will not work.\n      // Originally we use visualMap.color as the default color, but setOption at\n      // the second time the default color will be erased. So we change to use\n      // constant DEFAULT_COLOR.\n      // If user do not want the defualt color, set inRange: {color: null}.\n\n\n      base.inRange = base.inRange || {\n        color: DEFAULT_COLOR\n      }; // If using shortcut like: {inRange: 'symbol'}, complete default value.\n\n      each(this.stateList, function (state) {\n        var visualType = base[state];\n\n        if (zrUtil.isString(visualType)) {\n          var defa = visualDefault.get(visualType, 'active', isCategory);\n\n          if (defa) {\n            base[state] = {};\n            base[state][visualType] = defa;\n          } else {\n            // Mark as not specified.\n            delete base[state];\n          }\n        }\n      }, this);\n    }\n\n    function completeInactive(base, stateExist, stateAbsent) {\n      var optExist = base[stateExist];\n      var optAbsent = base[stateAbsent];\n\n      if (optExist && !optAbsent) {\n        optAbsent = base[stateAbsent] = {};\n        each(optExist, function (visualData, visualType) {\n          if (!VisualMapping.isValidType(visualType)) {\n            return;\n          }\n\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n          if (defa != null) {\n            optAbsent[visualType] = defa; // Compatibable with ec2:\n            // Only inactive color to rgba(0,0,0,0) can not\n            // make label transparent, so use opacity also.\n\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\n              optAbsent.opacity = [0, 0];\n            }\n          }\n        });\n      }\n    }\n\n    function completeController(controller) {\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\n      var inactiveColor = this.get('inactiveColor');\n      each(this.stateList, function (state) {\n        var itemSize = this.itemSize;\n        var visuals = controller[state]; // Set inactive color for controller if no other color\n        // attr (like colorAlpha) specified.\n\n        if (!visuals) {\n          visuals = controller[state] = {\n            color: isCategory ? inactiveColor : [inactiveColor]\n          };\n        } // Consistent symbol and symbolSize if not specified.\n\n\n        if (visuals.symbol == null) {\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? 'roundRect' : ['roundRect']);\n        }\n\n        if (visuals.symbolSize == null) {\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n        } // Filter square and none.\n\n\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n          return symbol === 'none' || symbol === 'square' ? 'roundRect' : symbol;\n        }); // Normalize symbolSize\n\n        var symbolSize = visuals.symbolSize;\n\n        if (symbolSize != null) {\n          var max = -Infinity; // symbolSize can be object when categories defined.\n\n          eachVisual(symbolSize, function (value) {\n            value > max && (max = value);\n          });\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\n            return linearMap(value, [0, max], [0, itemSize[0]], true);\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetItemSize: function () {\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\n  },\n\n  /**\n   * @public\n   */\n  isCategory: function () {\n    return !!this.option.categories;\n  },\n\n  /**\n   * @public\n   * @abstract\n   */\n  setSelected: noop,\n\n  /**\n   * @public\n   * @abstract\n   * @param {*|module:echarts/data/List} valueOrData\n   * @param {number} dataIndex\n   * @return {string} state See this.stateList\n   */\n  getValueState: noop,\n\n  /**\n   * FIXME\n   * Do not publish to thirt-part-dev temporarily\n   * util the interface is stable. (Should it return\n   * a function but not visual meta?)\n   *\n   * @pubilc\n   * @abstract\n   * @param {Function} getColorVisual\n   *        params: value, valueState\n   *        return: color\n   * @return {Object} visualMeta\n   *        should includes {stops, outerColors}\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n   */\n  getVisualMeta: noop\n});\nvar _default = VisualMapModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var axis = this['get' + dim + 'Axis']();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var method = 'dataTo' + dim;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: zrUtil.bind(function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      }),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(axisModel, opt) {\n  opt = opt || {};\n  var single = axisModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var axisPosition = axis.position;\n  var orient = axis.orient;\n  var rect = single.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var positionMap = {\n    horizontal: {\n      top: rectBound[2],\n      bottom: rectBound[3]\n    },\n    vertical: {\n      left: rectBound[0],\n      right: rectBound[1]\n    }\n  };\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\n  var r = {\n    horizontal: 0,\n    vertical: 1\n  };\n  layout.rotation = Math.PI / 2 * r[orient];\n  var directionMap = {\n    top: -1,\n    bottom: 1,\n    right: 1,\n    left: -1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  }\n\n  var labelRotation = opt.rotate;\n  labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n  layout.labelInterval = axis.getLabelInterval();\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar each = zrUtil.each;\n\nfunction _default(ecModel) {\n  var groupResult = groupSeriesByAxis(ecModel);\n  each(groupResult, function (groupItem) {\n    var seriesModels = groupItem.seriesModels;\n\n    if (!seriesModels.length) {\n      return;\n    }\n\n    calculateBase(groupItem);\n    each(seriesModels, function (seriesModel, idx) {\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\n    });\n  });\n}\n/**\n * Group series by axis.\n */\n\n\nfunction groupSeriesByAxis(ecModel) {\n  var result = [];\n  var axisList = [];\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\n    var baseAxis = seriesModel.getBaseAxis();\n    var idx = zrUtil.indexOf(axisList, baseAxis);\n\n    if (idx < 0) {\n      idx = axisList.length;\n      axisList[idx] = baseAxis;\n      result[idx] = {\n        axis: baseAxis,\n        seriesModels: []\n      };\n    }\n\n    result[idx].seriesModels.push(seriesModel);\n  });\n  return result;\n}\n/**\n * Calculate offset and box width for each series.\n */\n\n\nfunction calculateBase(groupItem) {\n  var extent;\n  var baseAxis = groupItem.axis;\n  var seriesModels = groupItem.seriesModels;\n  var seriesCount = seriesModels.length;\n  var boxWidthList = groupItem.boxWidthList = [];\n  var boxOffsetList = groupItem.boxOffsetList = [];\n  var boundList = [];\n  var bandWidth;\n\n  if (baseAxis.type === 'category') {\n    bandWidth = baseAxis.getBandWidth();\n  } else {\n    var maxDataCount = 0;\n    each(seriesModels, function (seriesModel) {\n      maxDataCount = Math.max(maxDataCount, seriesModel.getData().count());\n    });\n    extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / maxDataCount;\n  }\n\n  each(seriesModels, function (seriesModel) {\n    var boxWidthBound = seriesModel.get('boxWidth');\n\n    if (!zrUtil.isArray(boxWidthBound)) {\n      boxWidthBound = [boxWidthBound, boxWidthBound];\n    }\n\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\n  });\n  var availableWidth = bandWidth * 0.8 - 2;\n  var boxGap = availableWidth / seriesCount * 0.3;\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\n  var base = boxWidth / 2 - availableWidth / 2;\n  each(seriesModels, function (seriesModel, idx) {\n    boxOffsetList.push(base);\n    base += boxGap + boxWidth;\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\n  });\n}\n/**\n * Calculate points location for each series.\n */\n\n\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\n  var coordSys = seriesModel.coordinateSystem;\n  var data = seriesModel.getData();\n  var halfWidth = boxWidth / 2;\n  var chartLayout = seriesModel.get('layout');\n  var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n  var constDim = 1 - variableDim;\n  var coordDims = ['x', 'y'];\n  var vDims = [];\n  var cDim;\n  zrUtil.each(data.dimensions, function (dimName) {\n    var dimInfo = data.getDimensionInfo(dimName);\n    var coordDim = dimInfo.coordDim;\n\n    if (coordDim === coordDims[constDim]) {\n      vDims.push(dimName);\n    } else if (coordDim === coordDims[variableDim]) {\n      cDim = dimName;\n    }\n  });\n\n  if (cDim == null || vDims.length < 5) {\n    return;\n  }\n\n  data.each([cDim].concat(vDims), function () {\n    var args = arguments;\n    var axisDimVal = args[0];\n    var idx = args[vDims.length + 1];\n    var median = getPoint(args[3]);\n    var end1 = getPoint(args[1]);\n    var end5 = getPoint(args[5]);\n    var whiskerEnds = [[end1, getPoint(args[2])], [end5, getPoint(args[4])]];\n    layEndLine(end1);\n    layEndLine(end5);\n    layEndLine(median);\n    var bodyEnds = [];\n    addBodyEnd(whiskerEnds[0][1], 0);\n    addBodyEnd(whiskerEnds[1][1], 1);\n    data.setItemLayout(idx, {\n      chartLayout: chartLayout,\n      initBaseline: median[constDim],\n      median: median,\n      bodyEnds: bodyEnds,\n      whiskerEnds: whiskerEnds\n    });\n\n    function getPoint(val) {\n      var p = [];\n      p[variableDim] = axisDimVal;\n      p[constDim] = val;\n      var point;\n\n      if (isNaN(axisDimVal) || isNaN(val)) {\n        point = [NaN, NaN];\n      } else {\n        point = coordSys.dataToPoint(p);\n        point[variableDim] += offset;\n      }\n\n      return point;\n    }\n\n    function addBodyEnd(point, start) {\n      var point1 = point.slice();\n      var point2 = point.slice();\n      point1[variableDim] += halfWidth;\n      point2[variableDim] -= halfWidth;\n      start ? bodyEnds.push(point1, point2) : bodyEnds.push(point2, point1);\n    }\n\n    function layEndLine(endCenter) {\n      var line = [endCenter.slice(), endCenter.slice()];\n      line[0][variableDim] -= halfWidth;\n      line[1][variableDim] += halfWidth;\n      whiskerEnds.push(line);\n    }\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar List = require(\"../../data/List\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {\n      normal: {},\n      emphasis: {}\n    },\n    label: {\n      normal: {\n        color: '#000'\n      },\n      emphasis: {}\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function (currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function () {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function () {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function (state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function () {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function () {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function () {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar MONTH_TEXT = {\n  EN: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  CN: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n};\nvar WEEK_TEXT = {\n  EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  CN: ['日', '一', '二', '三', '四', '五', '六']\n};\n\nvar _default = echarts.extendComponentView({\n  type: 'calendar',\n\n  /**\n   * top/left line points\n   *  @private\n   */\n  _tlpoints: null,\n\n  /**\n   * bottom/right line points\n   *  @private\n   */\n  _blpoints: null,\n\n  /**\n   * first day of month\n   *  @private\n   */\n  _firstDayOfMonth: null,\n\n  /**\n   * first day point of month\n   *  @private\n   */\n  _firstDayPoints: null,\n  render: function (calendarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    var coordSys = calendarModel.coordinateSystem; // range info\n\n    var rangeData = coordSys.getRangeInfo();\n    var orient = coordSys.getOrient();\n\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\n\n\n    this._renderLines(calendarModel, rangeData, orient, group);\n\n    this._renderYearText(calendarModel, rangeData, orient, group);\n\n    this._renderMonthText(calendarModel, orient, group);\n\n    this._renderWeekText(calendarModel, rangeData, orient, group);\n  },\n  // render day rect\n  _renderDayRect: function (calendarModel, rangeData, group) {\n    var coordSys = calendarModel.coordinateSystem;\n    var itemRectStyleModel = calendarModel.getModel('itemStyle.normal').getItemStyle();\n    var sw = coordSys.getCellWidth();\n    var sh = coordSys.getCellHeight();\n\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\n      var point = coordSys.dataToRect([i], false).tl; // every rect\n\n      var rect = new graphic.Rect({\n        shape: {\n          x: point[0],\n          y: point[1],\n          width: sw,\n          height: sh\n        },\n        cursor: 'default',\n        style: itemRectStyleModel\n      });\n      group.add(rect);\n    }\n  },\n  // render separate line\n  _renderLines: function (calendarModel, rangeData, orient, group) {\n    var self = this;\n    var coordSys = calendarModel.coordinateSystem;\n    var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\n    var show = calendarModel.get('splitLine.show');\n    var lineWidth = lineStyleModel.lineWidth;\n    this._tlpoints = [];\n    this._blpoints = [];\n    this._firstDayOfMonth = [];\n    this._firstDayPoints = [];\n    var firstDay = rangeData.start;\n\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\n      addPoints(firstDay.formatedDate);\n\n      if (i === 0) {\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\n      }\n\n      var date = firstDay.date;\n      date.setMonth(date.getMonth() + 1);\n      firstDay = coordSys.getDateInfo(date);\n    }\n\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\n\n    function addPoints(date) {\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\n\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\n\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\n\n      self._tlpoints.push(points[0]);\n\n      self._blpoints.push(points[points.length - 1]);\n\n      show && self._drawSplitline(points, lineStyleModel, group);\n    } // render top/left line\n\n\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\n\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\n  },\n  // get points at both ends\n  _getEdgesPoints: function (points, lineWidth, orient) {\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\n\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\n    return rs;\n  },\n  // render split line\n  _drawSplitline: function (points, lineStyleModel, group) {\n    var poyline = new graphic.Polyline({\n      z2: 20,\n      shape: {\n        points: points\n      },\n      style: lineStyleModel\n    });\n    group.add(poyline);\n  },\n  // render month line of one week points\n  _getLinePointsOfOneWeek: function (calendarModel, date, orient) {\n    var coordSys = calendarModel.coordinateSystem;\n    date = coordSys.getDateInfo(date);\n    var points = [];\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(date.time, i);\n      var point = coordSys.dataToRect([tmpD.time], false);\n      points[2 * tmpD.day] = point.tl;\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\n    }\n\n    return points;\n  },\n  _formatterLabel: function (formatter, params) {\n    if (typeof formatter === 'string' && formatter) {\n      return formatUtil.formatTplSimple(formatter, params);\n    }\n\n    if (typeof formatter === 'function') {\n      return formatter(params);\n    }\n\n    return params.nameMap;\n  },\n  _yearTextPositionControl: function (textEl, point, orient, position, margin) {\n    point = point.slice();\n    var aligns = ['center', 'bottom'];\n\n    if (position === 'bottom') {\n      point[1] += margin;\n      aligns = ['center', 'top'];\n    } else if (position === 'left') {\n      point[0] -= margin;\n    } else if (position === 'right') {\n      point[0] += margin;\n      aligns = ['center', 'top'];\n    } else {\n      // top\n      point[1] -= margin;\n    }\n\n    var rotate = 0;\n\n    if (position === 'left' || position === 'right') {\n      rotate = Math.PI / 2;\n    }\n\n    return {\n      rotation: rotate,\n      position: point,\n      style: {\n        textAlign: aligns[0],\n        textVerticalAlign: aligns[1]\n      }\n    };\n  },\n  // render year\n  _renderYearText: function (calendarModel, rangeData, orient, group) {\n    var yearLabel = calendarModel.getModel('yearLabel');\n\n    if (!yearLabel.get('show')) {\n      return;\n    }\n\n    var margin = yearLabel.get('margin');\n    var pos = yearLabel.get('position');\n\n    if (!pos) {\n      pos = orient !== 'horizontal' ? 'top' : 'left';\n    }\n\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\n    var xc = (points[0][0] + points[1][0]) / 2;\n    var yc = (points[0][1] + points[1][1]) / 2;\n    var idx = orient === 'horizontal' ? 0 : 1;\n    var posPoints = {\n      top: [xc, points[idx][1]],\n      bottom: [xc, points[1 - idx][1]],\n      left: [points[1 - idx][0], yc],\n      right: [points[idx][0], yc]\n    };\n    var name = rangeData.start.y;\n\n    if (+rangeData.end.y > +rangeData.start.y) {\n      name = name + '-' + rangeData.end.y;\n    }\n\n    var formatter = yearLabel.get('formatter');\n    var params = {\n      start: rangeData.start.y,\n      end: rangeData.end.y,\n      nameMap: name\n    };\n\n    var content = this._formatterLabel(formatter, params);\n\n    var yearText = new graphic.Text({\n      z2: 30\n    });\n    graphic.setTextStyle(yearText.style, yearLabel, {\n      text: content\n    }), yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\n    group.add(yearText);\n  },\n  _monthTextPositionControl: function (point, isCenter, orient, position, margin) {\n    var align = 'left';\n    var vAlign = 'top';\n    var x = point[0];\n    var y = point[1];\n\n    if (orient === 'horizontal') {\n      y = y + margin;\n\n      if (isCenter) {\n        align = 'center';\n      }\n\n      if (position === 'start') {\n        vAlign = 'bottom';\n      }\n    } else {\n      x = x + margin;\n\n      if (isCenter) {\n        vAlign = 'middle';\n      }\n\n      if (position === 'start') {\n        align = 'right';\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render month and year text\n  _renderMonthText: function (calendarModel, orient, group) {\n    var monthLabel = calendarModel.getModel('monthLabel');\n\n    if (!monthLabel.get('show')) {\n      return;\n    }\n\n    var nameMap = monthLabel.get('nameMap');\n    var margin = monthLabel.get('margin');\n    var pos = monthLabel.get('position');\n    var align = monthLabel.get('align');\n    var termPoints = [this._tlpoints, this._blpoints];\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var idx = pos === 'start' ? 0 : 1;\n    var axis = orient === 'horizontal' ? 0 : 1;\n    margin = pos === 'start' ? -margin : margin;\n    var isCenter = align === 'center';\n\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\n      var tmp = termPoints[idx][i].slice();\n      var firstDay = this._firstDayOfMonth[i];\n\n      if (isCenter) {\n        var firstDayPoints = this._firstDayPoints[i];\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\n      }\n\n      var formatter = monthLabel.get('formatter');\n      var name = nameMap[+firstDay.m - 1];\n      var params = {\n        yyyy: firstDay.y,\n        yy: (firstDay.y + '').slice(2),\n        MM: firstDay.m,\n        M: +firstDay.m,\n        nameMap: name\n      };\n\n      var content = this._formatterLabel(formatter, params);\n\n      var monthText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(monthText.style, monthLabel, {\n        text: content\n      }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin));\n      group.add(monthText);\n    }\n  },\n  _weekTextPositionControl: function (point, orient, position, margin, cellSize) {\n    var align = 'center';\n    var vAlign = 'middle';\n    var x = point[0];\n    var y = point[1];\n    var isStart = position === 'start';\n\n    if (orient === 'horizontal') {\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\n      align = isStart ? 'right' : 'left';\n    } else {\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\n      vAlign = isStart ? 'bottom' : 'top';\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render weeks\n  _renderWeekText: function (calendarModel, rangeData, orient, group) {\n    var dayLabel = calendarModel.getModel('dayLabel');\n\n    if (!dayLabel.get('show')) {\n      return;\n    }\n\n    var coordSys = calendarModel.coordinateSystem;\n    var pos = dayLabel.get('position');\n    var nameMap = dayLabel.get('nameMap');\n    var margin = dayLabel.get('margin');\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\n    margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\n\n    if (pos === 'start') {\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\n      margin = -margin;\n    }\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(start, i);\n      var point = coordSys.dataToRect([tmpD.time], false).center;\n      var day = i;\n      day = Math.abs((i + firstDayOfWeek) % 7);\n      var weekText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(weekText.style, dayLabel, {\n        text: nameMap[day]\n      }), this._weekTextPositionControl(point, orient, pos, margin, cellSize));\n      group.add(weekText);\n    }\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * nest helper used to group by the array.\n * can specified the keys and sort the keys.\n */\nfunction nest() {\n  var keysFunction = [];\n  var sortKeysFunction = [];\n  /**\n   * map an Array into the mapObject.\n   * @param {Array} array\n   * @param {number} depth\n   */\n\n  function map(array, depth) {\n    if (depth >= keysFunction.length) {\n      return array;\n    }\n\n    var i = -1;\n    var n = array.length;\n    var keyFunction = keysFunction[depth++];\n    var mapObject = {};\n    var valuesByKey = {};\n\n    while (++i < n) {\n      var keyValue = keyFunction(array[i]);\n      var values = valuesByKey[keyValue];\n\n      if (values) {\n        values.push(array[i]);\n      } else {\n        valuesByKey[keyValue] = [array[i]];\n      }\n    }\n\n    zrUtil.each(valuesByKey, function (value, key) {\n      mapObject[key] = map(value, depth);\n    });\n    return mapObject;\n  }\n  /**\n   * transform the Map Object to multidimensional Array\n   * @param {Object} map\n   * @param {number} depth\n   */\n\n\n  function entriesMap(mapObject, depth) {\n    if (depth >= keysFunction.length) {\n      return mapObject;\n    }\n\n    var array = [];\n    var sortKeyFunction = sortKeysFunction[depth++];\n    zrUtil.each(mapObject, function (value, key) {\n      array.push({\n        key: key,\n        values: entriesMap(value, depth)\n      });\n    });\n\n    if (sortKeyFunction) {\n      return array.sort(function (a, b) {\n        return sortKeyFunction(a.key, b.key);\n      });\n    } else {\n      return array;\n    }\n  }\n\n  return {\n    /**\n     * specified the key to groupby the arrays.\n     * users can specified one more keys.\n     * @param {Function} d\n     */\n    key: function (d) {\n      keysFunction.push(d);\n      return this;\n    },\n\n    /**\n     * specified the comparator to sort the keys\n     * @param {Function} order\n     */\n    sortKeys: function (order) {\n      sortKeysFunction[keysFunction.length - 1] = order;\n      return this;\n    },\n\n    /**\n     * the array to be grouped by.\n     * @param {Array} array\n     */\n    entries: function (array) {\n      return entriesMap(map(array, 0), 0);\n    }\n  };\n}\n\nmodule.exports = nest;","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./timeline/preprocessor\");\n\nrequire(\"./timeline/typeDefaulter\");\n\nrequire(\"./timeline/timelineAction\");\n\nrequire(\"./timeline/SliderTimelineModel\");\n\nrequire(\"./timeline/SliderTimelineView\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","function normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('lines', function (seriesModel) {\n    var data = seriesModel.getData();\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var opacityQuery = 'lineStyle.normal.opacity'.split('.');\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n    data.each(function (idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Geo = require(\"./Geo\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspectScale = geoModel.get('aspectScale') || 0.75;\n  var aspect = rect.width / rect.height * aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function (ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var mapData = echarts.getMap(name);\n      var geo = new Geo(name + idx, name, mapData && mapData.geoJson, mapData && mapData.specialAreas, geoModel.get('nameMap'));\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var mapData = echarts.getMap(mapType);\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, mapData && mapData.geoJson, mapData && mapData.specialAreas, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function (originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    nameMap = nameMap || {};\n    var map = echarts.getMap(mapName);\n    var geoJson = map && map.geoJson;\n\n    if (!geoJson) {\n      return originRegionArr;\n    }\n\n    var dataNameMap = zrUtil.createHashMap();\n    var features = geoJson.features;\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    for (var i = 0; i < features.length; i++) {\n      var name = features[i].properties.name;\n\n      if (!dataNameMap.get(name)) {\n        if (nameMap.hasOwnProperty(name)) {\n          name = nameMap[name];\n        }\n\n        regionsArr.push({\n          name: name\n        });\n      }\n    }\n\n    return regionsArr;\n  }\n};\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;","var vec2 = require(\"zrender/lib/core/vector\");\n\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      // Use the position from first adjecent node with defined position\n      // Or use a random position\n      // From d3\n      // if (n.edges) {\n      //     var j = -1;\n      //     while (++j < n.edges.length) {\n      //         var e = n.edges[j];\n      //         var other = adjacentNode(n, e);\n      //         if (other.p) {\n      //             n.p = vec2.clone(other.p);\n      //             break;\n      //         }\n      //     }\n      // }\n      // if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]); // }\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function () {\n      friction = 0.5;\n    },\n    setFixed: function (idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function (idx) {\n      nodes[idx].fixed = false;\n    },\n    step: function (cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;","/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerVisual(zrUtil.curry(visualSymbol, 'line', 'circle', 'line'));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(dataSample, 'line'));","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./tree/TreeSeries\");\n\nrequire(\"./tree/TreeView\");\n\nrequire(\"./tree/treeAction\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar orthogonalLayout = require(\"./tree/orthogonalLayout\");\n\nvar radialLayout = require(\"./tree/radialLayout\");\n\necharts.registerVisual(zrUtil.curry(visualSymbol, 'tree', 'circle', null));\necharts.registerLayout(orthogonalLayout);\necharts.registerLayout(radialLayout);","// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n\nfunction getStackedOnPoint(coordSys, data, idx) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = baseAxis.onZero ? 0 : valueAxis.scale.getExtent()[0];\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  var stackedOnSameSign;\n  var stackedOn = data.stackedOn;\n  var val = data.get(valueDim, idx); // Find first stacked value with same sign\n\n  while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n    stackedOnSameSign = stackedOn;\n    break;\n  }\n\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n  stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n  return coordSys.dataToPoint(stackedData);\n} // function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\n\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var dims = newCoordSys.dimensions;\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar singleAxisHelper = require(\"../axis/singleAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('vml', Painter);","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.3 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Array.<Array.<number>>} points\n * @private\n */\n\n\nfunction getStackedOnPoints(coordSys, data) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = 0;\n\n  if (!baseAxis.onZero) {\n    var extent = valueAxis.scale.getExtent();\n\n    if (extent[0] > 0) {\n      // Both positive\n      valueStart = extent[0];\n    } else if (extent[1] < 0) {\n      // Both negative\n      valueStart = extent[1];\n    } // If is one positive, and one negative, onZero shall be true\n\n  }\n\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  return data.mapArray([valueDim], function (val, idx) {\n    var stackedOnSameSign;\n    var stackedOn = data.stackedOn; // Find first stacked value with same sign\n\n    while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n      stackedOnSameSign = stackedOn;\n      break;\n    }\n\n    var stackedData = [];\n    stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n    stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n    return coordSys.dataToPoint(stackedData);\n  }, true);\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.normal.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    // Can only be x or y\n    if (visualMetaList[i].dimension < 2) {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta || coordSys.type !== 'cartesian2d') {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var dimension = visualMeta.dimension;\n  var dimName = data.dimensions[dimension];\n  var axis = coordSys.getAxis(dimName); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[dimName] = minCoord;\n  gradient[dimName + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n    var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n    var points = data.mapArray(data.getItemLayout, true);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var stackedOnPoints = getStackedOnPoints(coordSys, data);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOn = data.stackedOn;\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOn) {\n        var stackedOnSeries = stackedOn.hostModel;\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"./cartesianAxisHelper\");\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar throttleUtil = require(\"../util/throttle\");\n\nvar parallelPreprocessor = require(\"../coord/parallel/parallelPreprocessor\");\n\nrequire(\"../coord/parallel/parallelCreator\");\n\nrequire(\"../coord/parallel/ParallelModel\");\n\nrequire(\"./parallelAxis\");\n\nvar CLICK_THRESHOLD = 5; // > 4\n// Parallel view\n\necharts.extendComponentView({\n  type: 'parallel',\n  render: function (parallelModel, ecModel, api) {\n    this._model = parallelModel;\n    this._api = api;\n\n    if (!this._handlers) {\n      this._handlers = {};\n      zrUtil.each(handlers, function (handler, eventName) {\n        api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\n      }, this);\n    }\n\n    throttleUtil.createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._handlers, function (handler, eventName) {\n      api.getZr().off(eventName, handler);\n    });\n    this._handlers = null;\n  },\n\n  /**\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\n   */\n  _throttledDispatchExpand: function (opt) {\n    this._dispatchExpand(opt);\n  },\n  _dispatchExpand: function (opt) {\n    opt && this._api.dispatchAction(zrUtil.extend({\n      type: 'parallelAxisExpand'\n    }, opt));\n  }\n});\nvar handlers = {\n  mousedown: function (e) {\n    if (checkTrigger(this, 'click')) {\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\n    }\n  },\n  mouseup: function (e) {\n    var mouseDownPoint = this._mouseDownPoint;\n\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\n      var point = [e.offsetX, e.offsetY];\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\n\n      if (dist > CLICK_THRESHOLD) {\n        return;\n      }\n\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n\n      result.behavior !== 'none' && this._dispatchExpand({\n        axisExpandWindow: result.axisExpandWindow\n      });\n    }\n\n    this._mouseDownPoint = null;\n  },\n  mousemove: function (e) {\n    // Should do nothing when brushing.\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\n      return;\n    }\n\n    var model = this._model;\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n    var behavior = result.behavior;\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\n\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\n    : {\n      axisExpandWindow: result.axisExpandWindow,\n      // Jumping uses animation, and sliding suppresses animation.\n      animation: behavior === 'jump' ? null : false\n    });\n  }\n};\n\nfunction checkTrigger(view, triggerOn) {\n  var model = view._model;\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\n}\n\necharts.registerPreprocessor(parallelPreprocessor);","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\nvar BrushModel = echarts.extendComponentModel({\n  type: 'brush',\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // inBrush: null,\n    // outOfBrush: null,\n    toolbox: null,\n    // Default value see preprocessor.\n    brushLink: null,\n    // Series indices array, broadcast using dataIndex.\n    // or 'all', which means all series. 'none' or null means no series.\n    seriesIndex: 'all',\n    // seriesIndex array, specify series controlled by this brush component.\n    geoIndex: null,\n    //\n    xAxisIndex: null,\n    yAxisIndex: null,\n    brushType: 'rect',\n    // Default brushType, see BrushController.\n    brushMode: 'single',\n    // Default brushMode, 'single' or 'multiple'\n    transformable: true,\n    // Default transformable.\n    brushStyle: {\n      // Default brushStyle\n      borderWidth: 1,\n      color: 'rgba(120,140,180,0.3)',\n      borderColor: 'rgba(120,140,180,0.8)'\n    },\n    throttleType: 'fixRate',\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\n    // If null, no throttle. Valid only in the first brush component\n    throttleDelay: 0,\n    // Unit: ms, 0 means every event will be triggered.\n    // FIXME\n    // 试验效果\n    removeOnClick: true,\n    z: 10000\n  },\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  areas: [],\n\n  /**\n   * Current activated brush type.\n   * If null, brush is inactived.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {string}\n   */\n  brushType: null,\n\n  /**\n   * Current brush opt.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {Object}\n   */\n  brushOption: {},\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  coordInfoList: [],\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n  },\n\n  /**\n   * If ranges is null/undefined, range state remain.\n   *\n   * @param {Array.<Object>} [ranges]\n   */\n  setAreas: function (areas) {\n    // If ranges is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  },\n\n  /**\n   * see module:echarts/component/helper/BrushController\n   * @param {Object} brushOption\n   */\n  setBrushOption: function (brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  }\n});\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nvar _default = BrushModel;\nmodule.exports = _default;","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/AngleAxisView\");","var graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _helper = require(\"./helper\");\n\nvar wrapTreePathInfo = _helper.wrapTreePathInfo;\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nfunction Breadcrumb(containerGroup) {\n  /**\n   * @private\n   * @type {module:zrender/container/Group}\n   */\n  this.group = new graphic.Group();\n  containerGroup.add(this.group);\n}\n\nBreadcrumb.prototype = {\n  constructor: Breadcrumb,\n  render: function (seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle.normal'); // var emphasisStyleModel = model.getModel('itemStyle.emphasis');\n\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  },\n\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n  _prepare: function (targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = node.getModel().get('name');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderContent: function (seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get('breadcrumb.height');\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: zrUtil.defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel',\n          text: text,\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        }),\n        z: 10,\n        onclick: zrUtil.curry(onSelect, itemNode)\n      });\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this.group.removeAll();\n  }\n};\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  el.eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    seriesIndex: seriesModel.componentIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    // Distinguish with click event on treemap node.\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nvar _default = Breadcrumb;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n// FIXME 公用？\n\n/**\n * @param {Array.<module:echarts/data/List>} datas\n * @param {string} statisticType 'average' 'sum'\n * @inner\n */\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  var dims = ['value'];\n  zrUtil.each(datas, function (data) {\n    data.each(dims, function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(dims, function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nfunction _default(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, idx, isIgnore) {\n  var point = data.getItemLayout(idx); // Is an object\n  // if (point && point.hasOwnProperty('point')) {\n  //     point = point.point;\n  // }\n\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx)) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Array.<boolean>} [isIgnore]\n */\n\n\nsymbolDrawProto.updateData = function (data, isIgnore) {\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = {\n    itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label.normal'),\n    hoverLabelModel: seriesModel.getModel('label.emphasis'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data;\n\n  if (data) {\n    if (enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        });\n      });\n    } else {\n      group.removeAll();\n    }\n  }\n};\n\nvar _default = SymbolDraw;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(option.data);\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this.option.data);\n  },\n  getInitialData: function (option, ecModel) {\n    var dimensions = completeDimensions(['value'], option.data);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each('value', function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option.labelLine, ['show']);\n    var labelLineNormalOpt = option.labelLine.normal;\n    var labelLineEmphasisOpt = option.labelLine.emphasis; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.normal.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.label.emphasis.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      normal: {\n        // If rotate around circle\n        rotate: false,\n        show: true,\n        // 'outer', 'inside', 'center'\n        position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n        // 默认使用全局文本样式，详见TEXTSTYLE\n        // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n      },\n      emphasis: {}\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      normal: {\n        show: true,\n        // 引导线两段中的第一段长度\n        length: 15,\n        // 引导线两段中的第二段长度\n        length2: 15,\n        smooth: false,\n        lineStyle: {\n          // color: 各异,\n          width: 1,\n          type: 'solid'\n        }\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 1\n      },\n      emphasis: {}\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut',\n    data: []\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;","var echarts = require(\"../echarts\");\n\nrequire(\"./boxplot/BoxplotSeries\");\n\nrequire(\"./boxplot/BoxplotView\");\n\nvar boxplotVisual = require(\"./boxplot/boxplotVisual\");\n\nvar boxplotLayout = require(\"./boxplot/boxplotLayout\");\n\necharts.registerVisual(boxplotVisual);\necharts.registerLayout(boxplotLayout);","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;","var _traversalHelper = require(\"./traversalHelper\");\n\nvar eachAfter = _traversalHelper.eachAfter;\nvar eachBefore = _traversalHelper.eachBefore;\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar init = _layoutHelper.init;\nvar firstWalk = _layoutHelper.firstWalk;\nvar secondWalk = _layoutHelper.secondWalk;\nvar sep = _layoutHelper.separation;\nvar radialCoordinate = _layoutHelper.radialCoordinate;\nvar getViewRect = _layoutHelper.getViewRect;\n\nfunction _default(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n  init(virtualRoot);\n  eachAfter(realRoot, firstWalk, separation);\n  virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n  eachBefore(realRoot, secondWalk);\n  var left = realRoot;\n  var right = realRoot;\n  var bottom = realRoot;\n  eachBefore(realRoot, function (node) {\n    var x = node.getLayout().x;\n\n    if (x < left.getLayout().x) {\n      left = node;\n    }\n\n    if (x > right.getLayout().x) {\n      right = node;\n    }\n\n    if (node.depth > bottom.depth) {\n      bottom = node;\n    }\n  });\n  var delta = left === right ? 1 : separation(left, right) / 2;\n  var tx = delta - left.getLayout().x;\n  var kx = 0;\n  var ky = 0;\n  var coorX = 0;\n  var coorY = 0;\n\n  if (layout === 'radial') {\n    kx = width / (right.getLayout().x + delta + tx); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n    ky = height / (bottom.depth - 1 || 1);\n    eachBefore(realRoot, function (node) {\n      coorX = (node.getLayout().x + tx) * kx;\n      coorY = (node.depth - 1) * ky;\n      var finalCoor = radialCoordinate(coorX, coorY);\n      node.setLayout({\n        x: finalCoor.x,\n        y: finalCoor.y,\n        rawX: coorX,\n        rawY: coorY\n      }, true);\n    });\n  } else {\n    if (seriesModel.get('orient') === 'horizontal') {\n      ky = height / (right.getLayout().x + delta + tx);\n      kx = width / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorY = (node.getLayout().x + tx) * ky;\n        coorX = (node.depth - 1) * kx;\n        node.setLayout({\n          x: coorX,\n          y: coorY\n        }, true);\n      });\n    } else {\n      kx = width / (right.getLayout().x + delta + tx);\n      ky = height / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX = (node.getLayout().x + tx) * kx;\n        coorY = (node.depth - 1) * ky;\n        node.setLayout({\n          x: coorX,\n          y: coorY\n        }, true);\n      });\n    }\n  }\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;","var RadiusAxis = require(\"./RadiusAxis\");\n\nvar AngleAxis = require(\"./AngleAxis\");\n\n/**\n * @module echarts/coord/polar/Polar\n */\n\n/**\n * @alias {module:echarts/coord/polar/Polar}\n * @constructor\n * @param {string} name\n */\nvar Polar = function (name) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * x of polar center\n   * @type {number}\n   */\n\n  this.cx = 0;\n  /**\n   * y of polar center\n   * @type {number}\n   */\n\n  this.cy = 0;\n  /**\n   * @type {module:echarts/coord/polar/RadiusAxis}\n   * @private\n   */\n\n  this._radiusAxis = new RadiusAxis();\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis}\n   * @private\n   */\n\n  this._angleAxis = new AngleAxis();\n  this._radiusAxis.polar = this._angleAxis.polar = this;\n};\n\nPolar.prototype = {\n  type: 'polar',\n  axisPointerEnabled: true,\n  constructor: Polar,\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['radius', 'angle'],\n\n  /**\n   * @type {module:echarts/coord/PolarModel}\n   */\n  model: null,\n\n  /**\n   * If contain coord\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var coord = this.pointToCoord(point);\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\n  },\n\n  /**\n   * @param {string} dim\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxis: function (dim) {\n    return this['_' + dim + 'Axis'];\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._radiusAxis, this._angleAxis];\n  },\n\n  /**\n   * Get axes by type of scale\n   * @param {string} scaleType\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxesByScale: function (scaleType) {\n    var axes = [];\n    var angleAxis = this._angleAxis;\n    var radiusAxis = this._radiusAxis;\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\n    return axes;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/AngleAxis}\n   */\n  getAngleAxis: function () {\n    return this._angleAxis;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/RadiusAxis}\n   */\n  getRadiusAxis: function () {\n    return this._radiusAxis;\n  },\n\n  /**\n   * @param {module:echarts/coord/polar/Axis}\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getOtherAxis: function (axis) {\n    var angleAxis = this._angleAxis;\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\n  },\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\n  },\n\n  /**\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function (dim) {\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\n    return {\n      baseAxes: [baseAxis],\n      otherAxes: [this.getOtherAxis(baseAxis)]\n    };\n  },\n\n  /**\n   * Convert a single data item to (x, y) point.\n   * Parameter data is an array which the first element is radius and the second is angle\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\n  },\n\n  /**\n   * Convert a (x, y) point to data\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var coord = this.pointToCoord(point);\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\n  },\n\n  /**\n   * Convert a (x, y) point to (radius, angle) coord\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToCoord: function (point) {\n    var dx = point[0] - this.cx;\n    var dy = point[1] - this.cy;\n    var angleAxis = this.getAngleAxis();\n    var extent = angleAxis.getExtent();\n    var minAngle = Math.min(extent[0], extent[1]);\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\n    // FIXME\n\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\n\n    var dir = radian < minAngle ? 1 : -1;\n\n    while (radian < minAngle || radian > maxAngle) {\n      radian += dir * 360;\n    }\n\n    return [radius, radian];\n  },\n\n  /**\n   * Convert a (radius, angle) coord to (x, y) point\n   * @param {Array.<number>} coord\n   * @return {Array.<number>}\n   */\n  coordToPoint: function (coord) {\n    var radius = coord[0];\n    var radian = coord[1] / 180 * Math.PI;\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\n\n    var y = -Math.sin(radian) * radius + this.cy;\n    return [x, y];\n  }\n};\nvar _default = Polar;\nmodule.exports = _default;","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;","var samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType, ecModel, api) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var sampling = seriesModel.get('sampling');\n    var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n    if (coordSys.type === 'cartesian2d' && sampling) {\n      var baseAxis = coordSys.getBaseAxis();\n      var valueAxis = coordSys.getOtherAxis(baseAxis);\n      var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n      var size = extent[1] - extent[0];\n      var rate = Math.round(data.count() / size);\n\n      if (rate > 1) {\n        var sampler;\n\n        if (typeof sampling === 'string') {\n          sampler = samplers[sampling];\n        } else if (typeof sampling === 'function') {\n          sampler = sampling;\n        }\n\n        if (sampler) {\n          data = data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler);\n          seriesModel.setData(data);\n        }\n      }\n    }\n  }, this);\n}\n\nmodule.exports = _default;","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\nvar BoxplotSeries = SeriesModel.extend({\n  type: 'series.boxplot',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n  // TODO\n  // box width represents group size, so dimension should have 'size'.\n\n  /**\n   * @see <https://en.wikipedia.org/wiki/Box_plot>\n   * The meanings of 'min' and 'max' depend on user,\n   * and echarts do not need to know it.\n   * @readOnly\n   */\n  defaultValueDimensions: ['min', 'Q1', 'median', 'Q3', 'max'],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    boxWidth: [7, 50],\n    // [min, max] can be percent of band width.\n    itemStyle: {\n      normal: {\n        color: '#fff',\n        borderWidth: 1\n      },\n      emphasis: {\n        borderWidth: 2,\n        shadowBlur: 5,\n        shadowOffsetX: 2,\n        shadowOffsetY: 2,\n        shadowColor: 'rgba(0,0,0,0.4)'\n      }\n    },\n    animationEasing: 'elasticOut',\n    animationDuration: 800\n  }\n});\nzrUtil.mixin(BoxplotSeries, seriesModelMixin, true);\nvar _default = BoxplotSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar lang = require(\"../../../lang\");\n\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype;\n\nproto.render = proto.updateView = proto.updateLayout = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;"],"sourceRoot":""}